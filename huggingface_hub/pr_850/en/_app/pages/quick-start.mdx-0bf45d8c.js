import{S as br,i as vr,s as $r,e as a,k as f,w as c,t as i,M as Er,c as r,d as t,m as u,a as l,x as d,h as n,b as p,F as o,g as h,y as m,L as kr,q as g,o as _,B as y,v as jr}from"../chunks/vendor-d3924577.js";import{I as Ce}from"../chunks/IconCopyLink-f94c3d80.js";import{C as x}from"../chunks/CodeBlock-ff545b14.js";function Ar(Ha){let k,rt,j,I,Le,G,eo,Ne,to,lt,S,oo,De,ao,ro,st,A,C,Oe,K,lo,Re,so,it,L,io,Ue,no,ho,nt,V,ht,H,N,Fe,W,fo,Ye,uo,ft,D,po,pe,co,mo,ut,O,go,X,_o,yo,pt,Z,ct,R,wo,Me,bo,vo,dt,ee,mt,U,$o,Qe,Eo,ko,gt,te,_t,T,F,Je,oe,jo,Be,Ao,yt,b,Ho,ce,To,Po,ae,qo,xo,wt,de,ze,Io,bt,re,vt,Y,So,Ge,Co,Lo,$t,le,Et,se,Ke,No,kt,M,Do,me,Oo,Ro,jt,ie,At,ge,Uo,Ht,ne,Tt,_e,Fo,Pt,P,Q,Ve,he,Yo,We,Mo,qt,J,Qo,ye,Jo,Bo,xt,v,Xe,zo,Go,Ze,Ko,Vo,et,Wo,It,fe,St,$,Xo,we,Zo,ea,be,ta,oa,Ct,q,B,tt,ue,aa,ot,ra,Lt,z,la,at,sa,ia,Nt,w,ve,$e,na,ha,fa,Ee,ke,ua,pa,ca,je,Ae,da,ma,ga,He,Te,_a,ya,wa,Pe,qe,ba,va,Dt;return G=new Ce({}),K=new Ce({}),V=new x({props:{code:"pip install huggingface_hub",highlighted:"&gt;&gt;&gt; pip install huggingface_hub"}}),W=new Ce({}),Z=new x({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download(repo_id="google/pegasus-xsum", filename="config.json")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(repo_id=<span class="hljs-string">&quot;google/pegasus-xsum&quot;</span>, filename=<span class="hljs-string">&quot;config.json&quot;</span>)`}}),ee=new x({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download(repo_id="google/pegasus-xsum", filename="config.json", revision="4d33b01d79672f27f001f6abade33f22d993b151")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(repo_id=<span class="hljs-string">&quot;google/pegasus-xsum&quot;</span>, filename=<span class="hljs-string">&quot;config.json&quot;</span>, revision=<span class="hljs-string">&quot;4d33b01d79672f27f001f6abade33f22d993b151&quot;</span>)`}}),te=new x({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download(repo_id="google/pegasus-xsum", filename="config.json", cache_dir="/my/cool/cache")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(repo_id=<span class="hljs-string">&quot;google/pegasus-xsum&quot;</span>, filename=<span class="hljs-string">&quot;config.json&quot;</span>, cache_dir=<span class="hljs-string">&quot;/my/cool/cache&quot;</span>)`}}),oe=new Ce({}),re=new x({props:{code:"huggingface-cli login",highlighted:"huggingface-cli login"}}),le=new x({props:{code:`from huggingface_hub import notebook_login
notebook_login()`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> notebook_login
<span class="hljs-meta">&gt;&gt;&gt; </span>notebook_login()`}}),ie=new x({props:{code:`from huggingface_hub import create_repo
create_repo(repo_name="super-cool-model")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> create_repo
<span class="hljs-meta">&gt;&gt;&gt; </span>create_repo(repo_name=<span class="hljs-string">&quot;super-cool-model&quot;</span>)`}}),ne=new x({props:{code:`from huggingface_hub import create_repo
create_repo(repo_name="super-cool-model", private=True)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> create_repo
<span class="hljs-meta">&gt;&gt;&gt; </span>create_repo(repo_name=<span class="hljs-string">&quot;super-cool-model&quot;</span>, private=<span class="hljs-literal">True</span>)`}}),he=new Ce({}),fe=new x({props:{code:`from huggingface_hub import upload_file
upload_file(path_or_fileobj="/home/lysandre/dummy-test/README.md", path_in_repo="README.md", repo_id="lysandre/test-model")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> upload_file
<span class="hljs-meta">&gt;&gt;&gt; </span>upload_file(path_or_fileobj=<span class="hljs-string">&quot;/home/lysandre/dummy-test/README.md&quot;</span>, path_in_repo=<span class="hljs-string">&quot;README.md&quot;</span>, repo_id=<span class="hljs-string">&quot;lysandre/test-model&quot;</span>)`}}),ue=new Ce({}),{c(){k=a("meta"),rt=f(),j=a("h1"),I=a("a"),Le=a("span"),c(G.$$.fragment),eo=f(),Ne=a("span"),to=i("Quick start"),lt=f(),S=a("p"),oo=i("The Hugging Face Hub is the go-to place for sharing machine learning models, datasets, and metrics. To help you get the most out of the Hub, we created the "),De=a("code"),ao=i("huggingface_hub"),ro=i(" library so you can interact with the Hub without leaving your development environment. You can create and manage repositories easily and download and upload files from the Hub."),st=f(),A=a("h2"),C=a("a"),Oe=a("span"),c(K.$$.fragment),lo=f(),Re=a("span"),so=i("Install the Hub library"),it=f(),L=a("p"),io=i("To get started, you should install the "),Ue=a("code"),no=i("huggingface_hub"),ho=i(" library. The library provides functions that make interacting with the Hub simple. Run the following command to install the library:"),nt=f(),c(V.$$.fragment),ht=f(),H=a("h2"),N=a("a"),Fe=a("span"),c(W.$$.fragment),fo=f(),Ye=a("span"),uo=i("Download files from the Hub"),ft=f(),D=a("p"),po=i("Repositories store versioned model and dataset files anyone can download. You can use the "),pe=a("a"),co=i("hf_hub_url()"),mo=i(" function to download files. This function will download and cache a file on your local disk. The next time you need that file, it will load from your cache, so you don\u2019t need to re-download it."),ut=f(),O=a("p"),go=i("You will need the repository id and the filename of the file you want to download. For example, to download the "),X=a("a"),_o=i("Pegasus"),yo=i(" model configuration file:"),pt=f(),c(Z.$$.fragment),ct=f(),R=a("p"),wo=i("To download a specific version of the file, use the "),Me=a("code"),bo=i("revision"),vo=i(" parameter to specify the branch name, tag, or commit hash. If you choose to use the commit hash, it must be the full-length hash instead of the shorter 7-character commit hash:"),dt=f(),c(ee.$$.fragment),mt=f(),U=a("p"),$o=i("Finally, you can choose where to cache a file with the "),Qe=a("code"),Eo=i("cache_dir"),ko=i(" parameter:"),gt=f(),c(te.$$.fragment),_t=f(),T=a("h2"),F=a("a"),Je=a("span"),c(oe.$$.fragment),jo=f(),Be=a("span"),Ao=i("Create a repository"),yt=f(),b=a("p"),Ho=i("To create and share files to the Hub, you need to have a Hugging Face account. "),ce=a("a"),To=i("Create an account"),Po=i(" if you don\u2019t already have one, and then sign in to find your "),ae=a("a"),qo=i("User Access Token"),xo=i(" in your Settings. The User Access Token is used to authenticate your identity to the Hub."),wt=f(),de=a("ol"),ze=a("li"),Io=i("Log in to your Hugging Face account with the following command:"),bt=f(),c(re.$$.fragment),vt=f(),Y=a("p"),So=i("Or if you prefer to work from a Jupyter or Colaboratory notebook, then login with "),Ge=a("code"),Co=i("notebook_login()"),Lo=i(":"),$t=f(),c(le.$$.fragment),Et=f(),se=a("ol"),Ke=a("li"),No=i("Enter your User Access Token to authenticate your identity to the Hub."),kt=f(),M=a("p"),Do=i("After you\u2019ve created an account, create a repository with the "),me=a("a"),Oo=i("create_repo()"),Ro=i(" function:"),jt=f(),c(ie.$$.fragment),At=f(),ge=a("p"),Uo=i("If you want your repository to be private, then:"),Ht=f(),c(ne.$$.fragment),Tt=f(),_e=a("p"),Fo=i("Private repositories will not be visible to anyone except yourself."),Pt=f(),P=a("h2"),Q=a("a"),Ve=a("span"),c(he.$$.fragment),Yo=f(),We=a("span"),Mo=i("Share files to the Hub"),qt=f(),J=a("p"),Qo=i("Use the "),ye=a("a"),Jo=i("upload_file()"),Bo=i(" function to add a file to your newly created repository. You need to specify:"),xt=f(),v=a("ol"),Xe=a("li"),zo=i("The path of the file to upload."),Go=f(),Ze=a("li"),Ko=i("The path of the file in the repository."),Vo=f(),et=a("li"),Wo=i("The repository id of where you want to add the file."),It=f(),c(fe.$$.fragment),St=f(),$=a("p"),Xo=i("To upload more than one file at a time, take a look at this "),we=a("a"),Zo=i("guide"),ea=i(" which will introduce you to the "),be=a("a"),ta=i("Repository"),oa=i(" class and other methods for uploading files."),Ct=f(),q=a("h2"),B=a("a"),tt=a("span"),c(ue.$$.fragment),aa=f(),ot=a("span"),ra=i("Next steps"),Lt=f(),z=a("p"),la=i("The "),at=a("code"),sa=i("huggingface_hub"),ia=i(" library provides an easy way for users to interact with the Hub with Python. To learn more about how you can manage your files and repositories on the Hub, we recommend reading our how-to guides for how to:"),Nt=f(),w=a("ul"),ve=a("li"),$e=a("a"),na=i("Create and manage repositories"),ha=i("."),fa=f(),Ee=a("li"),ke=a("a"),ua=i("Download"),pa=i(" files from the Hub."),ca=f(),je=a("li"),Ae=a("a"),da=i("Upload"),ma=i(" files to the Hub."),ga=f(),He=a("li"),Te=a("a"),_a=i("Search the Hub"),ya=i(" for your desired model or dataset."),wa=f(),Pe=a("li"),qe=a("a"),ba=i("Access the Inference API"),va=i(" for fast inference."),this.h()},l(e){const s=Er('[data-svelte="svelte-1phssyn"]',document.head);k=r(s,"META",{name:!0,content:!0}),s.forEach(t),rt=u(e),j=r(e,"H1",{class:!0});var Ot=l(j);I=r(Ot,"A",{id:!0,class:!0,href:!0});var Ta=l(I);Le=r(Ta,"SPAN",{});var Pa=l(Le);d(G.$$.fragment,Pa),Pa.forEach(t),Ta.forEach(t),eo=u(Ot),Ne=r(Ot,"SPAN",{});var qa=l(Ne);to=n(qa,"Quick start"),qa.forEach(t),Ot.forEach(t),lt=u(e),S=r(e,"P",{});var Rt=l(S);oo=n(Rt,"The Hugging Face Hub is the go-to place for sharing machine learning models, datasets, and metrics. To help you get the most out of the Hub, we created the "),De=r(Rt,"CODE",{});var xa=l(De);ao=n(xa,"huggingface_hub"),xa.forEach(t),ro=n(Rt," library so you can interact with the Hub without leaving your development environment. You can create and manage repositories easily and download and upload files from the Hub."),Rt.forEach(t),st=u(e),A=r(e,"H2",{class:!0});var Ut=l(A);C=r(Ut,"A",{id:!0,class:!0,href:!0});var Ia=l(C);Oe=r(Ia,"SPAN",{});var Sa=l(Oe);d(K.$$.fragment,Sa),Sa.forEach(t),Ia.forEach(t),lo=u(Ut),Re=r(Ut,"SPAN",{});var Ca=l(Re);so=n(Ca,"Install the Hub library"),Ca.forEach(t),Ut.forEach(t),it=u(e),L=r(e,"P",{});var Ft=l(L);io=n(Ft,"To get started, you should install the "),Ue=r(Ft,"CODE",{});var La=l(Ue);no=n(La,"huggingface_hub"),La.forEach(t),ho=n(Ft," library. The library provides functions that make interacting with the Hub simple. Run the following command to install the library:"),Ft.forEach(t),nt=u(e),d(V.$$.fragment,e),ht=u(e),H=r(e,"H2",{class:!0});var Yt=l(H);N=r(Yt,"A",{id:!0,class:!0,href:!0});var Na=l(N);Fe=r(Na,"SPAN",{});var Da=l(Fe);d(W.$$.fragment,Da),Da.forEach(t),Na.forEach(t),fo=u(Yt),Ye=r(Yt,"SPAN",{});var Oa=l(Ye);uo=n(Oa,"Download files from the Hub"),Oa.forEach(t),Yt.forEach(t),ft=u(e),D=r(e,"P",{});var Mt=l(D);po=n(Mt,"Repositories store versioned model and dataset files anyone can download. You can use the "),pe=r(Mt,"A",{href:!0});var Ra=l(pe);co=n(Ra,"hf_hub_url()"),Ra.forEach(t),mo=n(Mt," function to download files. This function will download and cache a file on your local disk. The next time you need that file, it will load from your cache, so you don\u2019t need to re-download it."),Mt.forEach(t),ut=u(e),O=r(e,"P",{});var Qt=l(O);go=n(Qt,"You will need the repository id and the filename of the file you want to download. For example, to download the "),X=r(Qt,"A",{href:!0,rel:!0});var Ua=l(X);_o=n(Ua,"Pegasus"),Ua.forEach(t),yo=n(Qt," model configuration file:"),Qt.forEach(t),pt=u(e),d(Z.$$.fragment,e),ct=u(e),R=r(e,"P",{});var Jt=l(R);wo=n(Jt,"To download a specific version of the file, use the "),Me=r(Jt,"CODE",{});var Fa=l(Me);bo=n(Fa,"revision"),Fa.forEach(t),vo=n(Jt," parameter to specify the branch name, tag, or commit hash. If you choose to use the commit hash, it must be the full-length hash instead of the shorter 7-character commit hash:"),Jt.forEach(t),dt=u(e),d(ee.$$.fragment,e),mt=u(e),U=r(e,"P",{});var Bt=l(U);$o=n(Bt,"Finally, you can choose where to cache a file with the "),Qe=r(Bt,"CODE",{});var Ya=l(Qe);Eo=n(Ya,"cache_dir"),Ya.forEach(t),ko=n(Bt," parameter:"),Bt.forEach(t),gt=u(e),d(te.$$.fragment,e),_t=u(e),T=r(e,"H2",{class:!0});var zt=l(T);F=r(zt,"A",{id:!0,class:!0,href:!0});var Ma=l(F);Je=r(Ma,"SPAN",{});var Qa=l(Je);d(oe.$$.fragment,Qa),Qa.forEach(t),Ma.forEach(t),jo=u(zt),Be=r(zt,"SPAN",{});var Ja=l(Be);Ao=n(Ja,"Create a repository"),Ja.forEach(t),zt.forEach(t),yt=u(e),b=r(e,"P",{});var xe=l(b);Ho=n(xe,"To create and share files to the Hub, you need to have a Hugging Face account. "),ce=r(xe,"A",{href:!0});var Ba=l(ce);To=n(Ba,"Create an account"),Ba.forEach(t),Po=n(xe," if you don\u2019t already have one, and then sign in to find your "),ae=r(xe,"A",{href:!0,rel:!0});var za=l(ae);qo=n(za,"User Access Token"),za.forEach(t),xo=n(xe," in your Settings. The User Access Token is used to authenticate your identity to the Hub."),xe.forEach(t),wt=u(e),de=r(e,"OL",{});var Ga=l(de);ze=r(Ga,"LI",{});var Ka=l(ze);Io=n(Ka,"Log in to your Hugging Face account with the following command:"),Ka.forEach(t),Ga.forEach(t),bt=u(e),d(re.$$.fragment,e),vt=u(e),Y=r(e,"P",{});var Gt=l(Y);So=n(Gt,"Or if you prefer to work from a Jupyter or Colaboratory notebook, then login with "),Ge=r(Gt,"CODE",{});var Va=l(Ge);Co=n(Va,"notebook_login()"),Va.forEach(t),Lo=n(Gt,":"),Gt.forEach(t),$t=u(e),d(le.$$.fragment,e),Et=u(e),se=r(e,"OL",{start:!0});var Wa=l(se);Ke=r(Wa,"LI",{});var Xa=l(Ke);No=n(Xa,"Enter your User Access Token to authenticate your identity to the Hub."),Xa.forEach(t),Wa.forEach(t),kt=u(e),M=r(e,"P",{});var Kt=l(M);Do=n(Kt,"After you\u2019ve created an account, create a repository with the "),me=r(Kt,"A",{href:!0});var Za=l(me);Oo=n(Za,"create_repo()"),Za.forEach(t),Ro=n(Kt," function:"),Kt.forEach(t),jt=u(e),d(ie.$$.fragment,e),At=u(e),ge=r(e,"P",{});var er=l(ge);Uo=n(er,"If you want your repository to be private, then:"),er.forEach(t),Ht=u(e),d(ne.$$.fragment,e),Tt=u(e),_e=r(e,"P",{});var tr=l(_e);Fo=n(tr,"Private repositories will not be visible to anyone except yourself."),tr.forEach(t),Pt=u(e),P=r(e,"H2",{class:!0});var Vt=l(P);Q=r(Vt,"A",{id:!0,class:!0,href:!0});var or=l(Q);Ve=r(or,"SPAN",{});var ar=l(Ve);d(he.$$.fragment,ar),ar.forEach(t),or.forEach(t),Yo=u(Vt),We=r(Vt,"SPAN",{});var rr=l(We);Mo=n(rr,"Share files to the Hub"),rr.forEach(t),Vt.forEach(t),qt=u(e),J=r(e,"P",{});var Wt=l(J);Qo=n(Wt,"Use the "),ye=r(Wt,"A",{href:!0});var lr=l(ye);Jo=n(lr,"upload_file()"),lr.forEach(t),Bo=n(Wt," function to add a file to your newly created repository. You need to specify:"),Wt.forEach(t),xt=u(e),v=r(e,"OL",{});var Ie=l(v);Xe=r(Ie,"LI",{});var sr=l(Xe);zo=n(sr,"The path of the file to upload."),sr.forEach(t),Go=u(Ie),Ze=r(Ie,"LI",{});var ir=l(Ze);Ko=n(ir,"The path of the file in the repository."),ir.forEach(t),Vo=u(Ie),et=r(Ie,"LI",{});var nr=l(et);Wo=n(nr,"The repository id of where you want to add the file."),nr.forEach(t),Ie.forEach(t),It=u(e),d(fe.$$.fragment,e),St=u(e),$=r(e,"P",{});var Se=l($);Xo=n(Se,"To upload more than one file at a time, take a look at this "),we=r(Se,"A",{href:!0});var hr=l(we);Zo=n(hr,"guide"),hr.forEach(t),ea=n(Se," which will introduce you to the "),be=r(Se,"A",{href:!0});var fr=l(be);ta=n(fr,"Repository"),fr.forEach(t),oa=n(Se," class and other methods for uploading files."),Se.forEach(t),Ct=u(e),q=r(e,"H2",{class:!0});var Xt=l(q);B=r(Xt,"A",{id:!0,class:!0,href:!0});var ur=l(B);tt=r(ur,"SPAN",{});var pr=l(tt);d(ue.$$.fragment,pr),pr.forEach(t),ur.forEach(t),aa=u(Xt),ot=r(Xt,"SPAN",{});var cr=l(ot);ra=n(cr,"Next steps"),cr.forEach(t),Xt.forEach(t),Lt=u(e),z=r(e,"P",{});var Zt=l(z);la=n(Zt,"The "),at=r(Zt,"CODE",{});var dr=l(at);sa=n(dr,"huggingface_hub"),dr.forEach(t),ia=n(Zt," library provides an easy way for users to interact with the Hub with Python. To learn more about how you can manage your files and repositories on the Hub, we recommend reading our how-to guides for how to:"),Zt.forEach(t),Nt=u(e),w=r(e,"UL",{});var E=l(w);ve=r(E,"LI",{});var $a=l(ve);$e=r($a,"A",{href:!0});var mr=l($e);na=n(mr,"Create and manage repositories"),mr.forEach(t),ha=n($a,"."),$a.forEach(t),fa=u(E),Ee=r(E,"LI",{});var Ea=l(Ee);ke=r(Ea,"A",{href:!0});var gr=l(ke);ua=n(gr,"Download"),gr.forEach(t),pa=n(Ea," files from the Hub."),Ea.forEach(t),ca=u(E),je=r(E,"LI",{});var ka=l(je);Ae=r(ka,"A",{href:!0});var _r=l(Ae);da=n(_r,"Upload"),_r.forEach(t),ma=n(ka," files to the Hub."),ka.forEach(t),ga=u(E),He=r(E,"LI",{});var ja=l(He);Te=r(ja,"A",{href:!0});var yr=l(Te);_a=n(yr,"Search the Hub"),yr.forEach(t),ya=n(ja," for your desired model or dataset."),ja.forEach(t),wa=u(E),Pe=r(E,"LI",{});var Aa=l(Pe);qe=r(Aa,"A",{href:!0});var wr=l(qe);ba=n(wr,"Access the Inference API"),wr.forEach(t),va=n(Aa," for fast inference."),Aa.forEach(t),E.forEach(t),this.h()},h(){p(k,"name","hf:doc:metadata"),p(k,"content",JSON.stringify(Hr)),p(I,"id","quick-start"),p(I,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(I,"href","#quick-start"),p(j,"class","relative group"),p(C,"id","install-the-hub-library"),p(C,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(C,"href","#install-the-hub-library"),p(A,"class","relative group"),p(N,"id","download-files-from-the-hub"),p(N,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(N,"href","#download-files-from-the-hub"),p(H,"class","relative group"),p(pe,"href","/docs/huggingface_hub/pr_850/en/package_reference/file_download#huggingface_hub.hf_hub_url"),p(X,"href","https://huggingface.co/google/pegasus-xsum"),p(X,"rel","nofollow"),p(F,"id","create-a-repository"),p(F,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(F,"href","#create-a-repository"),p(T,"class","relative group"),p(ce,"href","(https://huggingface.co/join)"),p(ae,"href","https://huggingface.co/docs/hub/security#user-access-tokens"),p(ae,"rel","nofollow"),p(se,"start","2"),p(me,"href","/docs/huggingface_hub/pr_850/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo"),p(Q,"id","share-files-to-the-hub"),p(Q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(Q,"href","#share-files-to-the-hub"),p(P,"class","relative group"),p(ye,"href","/docs/huggingface_hub/pr_850/en/package_reference/hf_api#huggingface_hub.HfApi.upload_file"),p(we,"href","how-to-upstream"),p(be,"href","/docs/huggingface_hub/pr_850/en/package_reference/repository#huggingface_hub.Repository"),p(B,"id","next-steps"),p(B,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(B,"href","#next-steps"),p(q,"class","relative group"),p($e,"href","how-to-manage"),p(ke,"href","how-to-downstream"),p(Ae,"href","how-to-upstream"),p(Te,"href","searching-the-hub"),p(qe,"href","how-to-inference")},m(e,s){o(document.head,k),h(e,rt,s),h(e,j,s),o(j,I),o(I,Le),m(G,Le,null),o(j,eo),o(j,Ne),o(Ne,to),h(e,lt,s),h(e,S,s),o(S,oo),o(S,De),o(De,ao),o(S,ro),h(e,st,s),h(e,A,s),o(A,C),o(C,Oe),m(K,Oe,null),o(A,lo),o(A,Re),o(Re,so),h(e,it,s),h(e,L,s),o(L,io),o(L,Ue),o(Ue,no),o(L,ho),h(e,nt,s),m(V,e,s),h(e,ht,s),h(e,H,s),o(H,N),o(N,Fe),m(W,Fe,null),o(H,fo),o(H,Ye),o(Ye,uo),h(e,ft,s),h(e,D,s),o(D,po),o(D,pe),o(pe,co),o(D,mo),h(e,ut,s),h(e,O,s),o(O,go),o(O,X),o(X,_o),o(O,yo),h(e,pt,s),m(Z,e,s),h(e,ct,s),h(e,R,s),o(R,wo),o(R,Me),o(Me,bo),o(R,vo),h(e,dt,s),m(ee,e,s),h(e,mt,s),h(e,U,s),o(U,$o),o(U,Qe),o(Qe,Eo),o(U,ko),h(e,gt,s),m(te,e,s),h(e,_t,s),h(e,T,s),o(T,F),o(F,Je),m(oe,Je,null),o(T,jo),o(T,Be),o(Be,Ao),h(e,yt,s),h(e,b,s),o(b,Ho),o(b,ce),o(ce,To),o(b,Po),o(b,ae),o(ae,qo),o(b,xo),h(e,wt,s),h(e,de,s),o(de,ze),o(ze,Io),h(e,bt,s),m(re,e,s),h(e,vt,s),h(e,Y,s),o(Y,So),o(Y,Ge),o(Ge,Co),o(Y,Lo),h(e,$t,s),m(le,e,s),h(e,Et,s),h(e,se,s),o(se,Ke),o(Ke,No),h(e,kt,s),h(e,M,s),o(M,Do),o(M,me),o(me,Oo),o(M,Ro),h(e,jt,s),m(ie,e,s),h(e,At,s),h(e,ge,s),o(ge,Uo),h(e,Ht,s),m(ne,e,s),h(e,Tt,s),h(e,_e,s),o(_e,Fo),h(e,Pt,s),h(e,P,s),o(P,Q),o(Q,Ve),m(he,Ve,null),o(P,Yo),o(P,We),o(We,Mo),h(e,qt,s),h(e,J,s),o(J,Qo),o(J,ye),o(ye,Jo),o(J,Bo),h(e,xt,s),h(e,v,s),o(v,Xe),o(Xe,zo),o(v,Go),o(v,Ze),o(Ze,Ko),o(v,Vo),o(v,et),o(et,Wo),h(e,It,s),m(fe,e,s),h(e,St,s),h(e,$,s),o($,Xo),o($,we),o(we,Zo),o($,ea),o($,be),o(be,ta),o($,oa),h(e,Ct,s),h(e,q,s),o(q,B),o(B,tt),m(ue,tt,null),o(q,aa),o(q,ot),o(ot,ra),h(e,Lt,s),h(e,z,s),o(z,la),o(z,at),o(at,sa),o(z,ia),h(e,Nt,s),h(e,w,s),o(w,ve),o(ve,$e),o($e,na),o(ve,ha),o(w,fa),o(w,Ee),o(Ee,ke),o(ke,ua),o(Ee,pa),o(w,ca),o(w,je),o(je,Ae),o(Ae,da),o(je,ma),o(w,ga),o(w,He),o(He,Te),o(Te,_a),o(He,ya),o(w,wa),o(w,Pe),o(Pe,qe),o(qe,ba),o(Pe,va),Dt=!0},p:kr,i(e){Dt||(g(G.$$.fragment,e),g(K.$$.fragment,e),g(V.$$.fragment,e),g(W.$$.fragment,e),g(Z.$$.fragment,e),g(ee.$$.fragment,e),g(te.$$.fragment,e),g(oe.$$.fragment,e),g(re.$$.fragment,e),g(le.$$.fragment,e),g(ie.$$.fragment,e),g(ne.$$.fragment,e),g(he.$$.fragment,e),g(fe.$$.fragment,e),g(ue.$$.fragment,e),Dt=!0)},o(e){_(G.$$.fragment,e),_(K.$$.fragment,e),_(V.$$.fragment,e),_(W.$$.fragment,e),_(Z.$$.fragment,e),_(ee.$$.fragment,e),_(te.$$.fragment,e),_(oe.$$.fragment,e),_(re.$$.fragment,e),_(le.$$.fragment,e),_(ie.$$.fragment,e),_(ne.$$.fragment,e),_(he.$$.fragment,e),_(fe.$$.fragment,e),_(ue.$$.fragment,e),Dt=!1},d(e){t(k),e&&t(rt),e&&t(j),y(G),e&&t(lt),e&&t(S),e&&t(st),e&&t(A),y(K),e&&t(it),e&&t(L),e&&t(nt),y(V,e),e&&t(ht),e&&t(H),y(W),e&&t(ft),e&&t(D),e&&t(ut),e&&t(O),e&&t(pt),y(Z,e),e&&t(ct),e&&t(R),e&&t(dt),y(ee,e),e&&t(mt),e&&t(U),e&&t(gt),y(te,e),e&&t(_t),e&&t(T),y(oe),e&&t(yt),e&&t(b),e&&t(wt),e&&t(de),e&&t(bt),y(re,e),e&&t(vt),e&&t(Y),e&&t($t),y(le,e),e&&t(Et),e&&t(se),e&&t(kt),e&&t(M),e&&t(jt),y(ie,e),e&&t(At),e&&t(ge),e&&t(Ht),y(ne,e),e&&t(Tt),e&&t(_e),e&&t(Pt),e&&t(P),y(he),e&&t(qt),e&&t(J),e&&t(xt),e&&t(v),e&&t(It),y(fe,e),e&&t(St),e&&t($),e&&t(Ct),e&&t(q),y(ue),e&&t(Lt),e&&t(z),e&&t(Nt),e&&t(w)}}}const Hr={local:"quick-start",sections:[{local:"install-the-hub-library",title:"Install the Hub library"},{local:"download-files-from-the-hub",title:"Download files from the Hub"},{local:"create-a-repository",title:"Create a repository"},{local:"share-files-to-the-hub",title:"Share files to the Hub"},{local:"next-steps",title:"Next steps"}],title:"Quick start"};function Tr(Ha){return jr(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ir extends br{constructor(k){super();vr(this,k,Tr,Ar,$r,{})}}export{Ir as default,Hr as metadata};
