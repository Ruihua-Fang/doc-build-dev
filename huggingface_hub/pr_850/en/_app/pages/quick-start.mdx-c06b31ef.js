import{S as Jr,i as Br,s as zr,e as a,k as f,w as d,t as i,M as Gr,c as r,d as t,m as u,a as s,x as m,h as n,b as p,F as o,g as h,y as g,q as _,o as y,B as w,v as Kr}from"../chunks/vendor-d3924577.js";import{T as Vr}from"../chunks/Tip-4377bed8.js";import{I as Fe}from"../chunks/IconCopyLink-f94c3d80.js";import{C as S}from"../chunks/CodeBlock-ff545b14.js";function Xr(dt){let c,C;return{c(){c=a("p"),C=i("You can also provide your token to our functions and methods. This way you don\u2019t need to store your token anywhere.")},l(v){c=r(v,"P",{});var $=s(c);C=n($,"You can also provide your token to our functions and methods. This way you don\u2019t need to store your token anywhere."),$.forEach(t)},m(v,$){h(v,c,$),o(c,C)},d(v){v&&t(c)}}}function Zr(dt){let c,C,v,$,Re,Z,co,Me,mo,mt,D,go,Qe,_o,yo,gt,P,L,We,ee,wo,Je,vo,_t,E,bo,Be,$o,Eo,ze,ko,Ao,Ge,Ho,jo,yt,N,Po,Ke,To,xo,wt,te,vt,O,qo,Ve,Io,So,bt,oe,$t,T,U,Xe,ae,Co,Ze,Do,Et,Y,Lo,ye,No,Oo,kt,F,Uo,re,Yo,Fo,At,le,Ht,R,Ro,et,Mo,Qo,jt,se,Pt,M,Wo,we,Jo,Bo,Tt,x,Q,tt,ie,zo,ot,Go,xt,k,Ko,ve,Vo,Xo,ne,Zo,ea,qt,W,It,be,at,ta,St,he,Ct,J,oa,rt,aa,ra,Dt,fe,Lt,ue,lt,la,Nt,B,sa,$e,ia,na,Ot,pe,Ut,Ee,ha,Yt,ce,Ft,ke,fa,Rt,q,z,st,de,ua,it,pa,Mt,G,ca,Ae,da,ma,Qt,A,nt,ga,_a,ht,ya,wa,ft,va,Wt,me,Jt,H,ba,He,$a,Ea,je,ka,Aa,Bt,I,K,ut,ge,Ha,pt,ja,zt,V,Pa,ct,Ta,xa,Gt,b,Pe,Te,qa,Ia,Sa,xe,qe,Ca,Da,La,Ie,Se,Na,Oa,Ua,Ce,De,Ya,Fa,Ra,Le,Ne,Ma,Qa,Kt;return Z=new Fe({}),ee=new Fe({}),te=new S({props:{code:"pip install huggingface_hub",highlighted:"pip install huggingface_hub"}}),oe=new S({props:{code:"conda install -c conda-forge huggingface_hub",highlighted:"conda install -c conda-forge huggingface_hub"}}),ae=new Fe({}),le=new S({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download(repo_id="google/pegasus-xsum", filename="config.json")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(repo_id=<span class="hljs-string">&quot;google/pegasus-xsum&quot;</span>, filename=<span class="hljs-string">&quot;config.json&quot;</span>)`}}),se=new S({props:{code:`from huggingface_hub import hf_hub_download
hf_hub_download(
    repo_id="google/pegasus-xsum", 
    filename="config.json", 
    revision="4d33b01d79672f27f001f6abade33f22d993b151"
)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> hf_hub_download
<span class="hljs-meta">&gt;&gt;&gt; </span>hf_hub_download(
<span class="hljs-meta">... </span>    repo_id=<span class="hljs-string">&quot;google/pegasus-xsum&quot;</span>, 
<span class="hljs-meta">... </span>    filename=<span class="hljs-string">&quot;config.json&quot;</span>, 
<span class="hljs-meta">... </span>    revision=<span class="hljs-string">&quot;4d33b01d79672f27f001f6abade33f22d993b151&quot;</span>
<span class="hljs-meta">... </span>)`}}),ie=new Fe({}),W=new Vr({props:{$$slots:{default:[Xr]},$$scope:{ctx:dt}}}),he=new S({props:{code:"huggingface-cli login",highlighted:"huggingface-cli login"}}),fe=new S({props:{code:`from huggingface_hub import notebook_login
notebook_login()`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> notebook_login
<span class="hljs-meta">&gt;&gt;&gt; </span>notebook_login()`}}),pe=new S({props:{code:`from huggingface_hub import create_repo
create_repo(repo_name="super-cool-model")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> create_repo
<span class="hljs-meta">&gt;&gt;&gt; </span>create_repo(repo_name=<span class="hljs-string">&quot;super-cool-model&quot;</span>)`}}),ce=new S({props:{code:`from huggingface_hub import create_repo
create_repo(repo_name="super-cool-model", private=True)`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> create_repo
<span class="hljs-meta">&gt;&gt;&gt; </span>create_repo(repo_name=<span class="hljs-string">&quot;super-cool-model&quot;</span>, private=<span class="hljs-literal">True</span>)`}}),de=new Fe({}),me=new S({props:{code:`from huggingface_hub import upload_file
upload_file(path_or_fileobj="/home/lysandre/dummy-test/README.md", path_in_repo="README.md", repo_id="lysandre/test-model")`,highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> upload_file
<span class="hljs-meta">&gt;&gt;&gt; </span>upload_file(path_or_fileobj=<span class="hljs-string">&quot;/home/lysandre/dummy-test/README.md&quot;</span>, path_in_repo=<span class="hljs-string">&quot;README.md&quot;</span>, repo_id=<span class="hljs-string">&quot;lysandre/test-model&quot;</span>)`}}),ge=new Fe({}),{c(){c=a("meta"),C=f(),v=a("h1"),$=a("a"),Re=a("span"),d(Z.$$.fragment),co=f(),Me=a("span"),mo=i("Quick start"),mt=f(),D=a("p"),go=i("The Hugging Face Hub is the go-to place for sharing machine learning models, spaces, datasets, and metrics. "),Qe=a("code"),_o=i("huggingface_hub"),yo=i(" library helps you interact with the Hub without leaving your development environment. You can create and manage repositories easily and download and upload files from the Hub."),gt=f(),P=a("h2"),L=a("a"),We=a("span"),d(ee.$$.fragment),wo=f(),Je=a("span"),vo=i("Install the Hub library"),_t=f(),E=a("p"),bo=i("To get started, you should install the "),Be=a("code"),$o=i("huggingface_hub"),Eo=i(" library. The library provides functionalities that make interacting with the Hub simple. You can install the library with "),ze=a("code"),ko=i("pip"),Ao=i(" or "),Ge=a("code"),Ho=i("conda"),jo=i("."),yt=f(),N=a("p"),Po=i("With "),Ke=a("code"),To=i("pip"),xo=i(":"),wt=f(),d(te.$$.fragment),vt=f(),O=a("p"),qo=i("With "),Ve=a("code"),Io=i("conda"),So=i(":"),bt=f(),d(oe.$$.fragment),$t=f(),T=a("h2"),U=a("a"),Xe=a("span"),d(ae.$$.fragment),Co=f(),Ze=a("span"),Do=i("Download files from the Hub"),Et=f(),Y=a("p"),Lo=i("Repositories on the Hub are git version controlled, and users can download a single file or the whole repository. You can use the "),ye=a("a"),No=i("hf_hub_download()"),Oo=i(" function to download files. This function will download and cache a file on your local disk. The next time you need that file, it will load from your cache, so you don\u2019t need to re-download it."),kt=f(),F=a("p"),Uo=i("You will need the repository id and the filename of the file you want to download. For example, to download the "),re=a("a"),Yo=i("Pegasus"),Fo=i(" model configuration file:"),At=f(),d(le.$$.fragment),Ht=f(),R=a("p"),Ro=i("To download a specific version of the file, use the "),et=a("code"),Mo=i("revision"),Qo=i(" parameter to specify the branch name, tag, or commit hash. If you choose to use the commit hash, it must be the full-length hash instead of the shorter 7-character commit hash:"),jt=f(),d(se.$$.fragment),Pt=f(),M=a("p"),Wo=i("For more details and options, see the API reference for "),we=a("a"),Jo=i("hf_hub_download()"),Bo=i("."),Tt=f(),x=a("h2"),Q=a("a"),tt=a("span"),d(ie.$$.fragment),zo=f(),ot=a("span"),Go=i("Create a repository"),xt=f(),k=a("p"),Ko=i("To create and share files to the Hub, you need to have a Hugging Face account. "),ve=a("a"),Vo=i("Create an account"),Xo=i(" if you don\u2019t already have one, and then sign in to find your "),ne=a("a"),Zo=i("User Access Token"),ea=i(" in your Settings. The User Access Token is used to authenticate your identity to the Hub."),qt=f(),d(W.$$.fragment),It=f(),be=a("ol"),at=a("li"),ta=i("Log in to your Hugging Face account with the following command:"),St=f(),d(he.$$.fragment),Ct=f(),J=a("p"),oa=i("Or if you prefer to work from a Jupyter or Colaboratory notebook, then login with "),rt=a("code"),aa=i("notebook_login()"),ra=i(":"),Dt=f(),d(fe.$$.fragment),Lt=f(),ue=a("ol"),lt=a("li"),la=i("Enter your User Access Token to authenticate your identity to the Hub."),Nt=f(),B=a("p"),sa=i("After you\u2019ve created an account, create a repository with the "),$e=a("a"),ia=i("create_repo()"),na=i(" function:"),Ot=f(),d(pe.$$.fragment),Ut=f(),Ee=a("p"),ha=i("If you want your repository to be private, then:"),Yt=f(),d(ce.$$.fragment),Ft=f(),ke=a("p"),fa=i("Private repositories will not be visible to anyone except yourself."),Rt=f(),q=a("h2"),z=a("a"),st=a("span"),d(de.$$.fragment),ua=f(),it=a("span"),pa=i("Share files to the Hub"),Mt=f(),G=a("p"),ca=i("Use the "),Ae=a("a"),da=i("upload_file()"),ma=i(" function to add a file to your newly created repository. You need to specify:"),Qt=f(),A=a("ol"),nt=a("li"),ga=i("The path of the file to upload."),_a=f(),ht=a("li"),ya=i("The path of the file in the repository."),wa=f(),ft=a("li"),va=i("The repository id of where you want to add the file."),Wt=f(),d(me.$$.fragment),Jt=f(),H=a("p"),ba=i("To upload more than one file at a time, take a look at this "),He=a("a"),$a=i("guide"),Ea=i(" which will introduce you to the "),je=a("a"),ka=i("Repository"),Aa=i(" class and other methods for uploading files."),Bt=f(),I=a("h2"),K=a("a"),ut=a("span"),d(ge.$$.fragment),Ha=f(),pt=a("span"),ja=i("Next steps"),zt=f(),V=a("p"),Pa=i("The "),ct=a("code"),Ta=i("huggingface_hub"),xa=i(" library provides an easy way for users to interact with the Hub with Python. To learn more about how you can manage your files and repositories on the Hub, we recommend reading our how-to guides for how to:"),Gt=f(),b=a("ul"),Pe=a("li"),Te=a("a"),qa=i("Create and manage repositories"),Ia=i("."),Sa=f(),xe=a("li"),qe=a("a"),Ca=i("Download"),Da=i(" files from the Hub."),La=f(),Ie=a("li"),Se=a("a"),Na=i("Upload"),Oa=i(" files to the Hub."),Ua=f(),Ce=a("li"),De=a("a"),Ya=i("Search the Hub"),Fa=i(" for your desired model or dataset."),Ra=f(),Le=a("li"),Ne=a("a"),Ma=i("Access the Inference API"),Qa=i(" for fast inference."),this.h()},l(e){const l=Gr('[data-svelte="svelte-1phssyn"]',document.head);c=r(l,"META",{name:!0,content:!0}),l.forEach(t),C=u(e),v=r(e,"H1",{class:!0});var _e=s(v);$=r(_e,"A",{id:!0,class:!0,href:!0});var Ka=s($);Re=r(Ka,"SPAN",{});var Va=s(Re);m(Z.$$.fragment,Va),Va.forEach(t),Ka.forEach(t),co=u(_e),Me=r(_e,"SPAN",{});var Xa=s(Me);mo=n(Xa,"Quick start"),Xa.forEach(t),_e.forEach(t),mt=u(e),D=r(e,"P",{});var Vt=s(D);go=n(Vt,"The Hugging Face Hub is the go-to place for sharing machine learning models, spaces, datasets, and metrics. "),Qe=r(Vt,"CODE",{});var Za=s(Qe);_o=n(Za,"huggingface_hub"),Za.forEach(t),yo=n(Vt," library helps you interact with the Hub without leaving your development environment. You can create and manage repositories easily and download and upload files from the Hub."),Vt.forEach(t),gt=u(e),P=r(e,"H2",{class:!0});var Xt=s(P);L=r(Xt,"A",{id:!0,class:!0,href:!0});var er=s(L);We=r(er,"SPAN",{});var tr=s(We);m(ee.$$.fragment,tr),tr.forEach(t),er.forEach(t),wo=u(Xt),Je=r(Xt,"SPAN",{});var or=s(Je);vo=n(or,"Install the Hub library"),or.forEach(t),Xt.forEach(t),_t=u(e),E=r(e,"P",{});var X=s(E);bo=n(X,"To get started, you should install the "),Be=r(X,"CODE",{});var ar=s(Be);$o=n(ar,"huggingface_hub"),ar.forEach(t),Eo=n(X," library. The library provides functionalities that make interacting with the Hub simple. You can install the library with "),ze=r(X,"CODE",{});var rr=s(ze);ko=n(rr,"pip"),rr.forEach(t),Ao=n(X," or "),Ge=r(X,"CODE",{});var lr=s(Ge);Ho=n(lr,"conda"),lr.forEach(t),jo=n(X,"."),X.forEach(t),yt=u(e),N=r(e,"P",{});var Zt=s(N);Po=n(Zt,"With "),Ke=r(Zt,"CODE",{});var sr=s(Ke);To=n(sr,"pip"),sr.forEach(t),xo=n(Zt,":"),Zt.forEach(t),wt=u(e),m(te.$$.fragment,e),vt=u(e),O=r(e,"P",{});var eo=s(O);qo=n(eo,"With "),Ve=r(eo,"CODE",{});var ir=s(Ve);Io=n(ir,"conda"),ir.forEach(t),So=n(eo,":"),eo.forEach(t),bt=u(e),m(oe.$$.fragment,e),$t=u(e),T=r(e,"H2",{class:!0});var to=s(T);U=r(to,"A",{id:!0,class:!0,href:!0});var nr=s(U);Xe=r(nr,"SPAN",{});var hr=s(Xe);m(ae.$$.fragment,hr),hr.forEach(t),nr.forEach(t),Co=u(to),Ze=r(to,"SPAN",{});var fr=s(Ze);Do=n(fr,"Download files from the Hub"),fr.forEach(t),to.forEach(t),Et=u(e),Y=r(e,"P",{});var oo=s(Y);Lo=n(oo,"Repositories on the Hub are git version controlled, and users can download a single file or the whole repository. You can use the "),ye=r(oo,"A",{href:!0});var ur=s(ye);No=n(ur,"hf_hub_download()"),ur.forEach(t),Oo=n(oo," function to download files. This function will download and cache a file on your local disk. The next time you need that file, it will load from your cache, so you don\u2019t need to re-download it."),oo.forEach(t),kt=u(e),F=r(e,"P",{});var ao=s(F);Uo=n(ao,"You will need the repository id and the filename of the file you want to download. For example, to download the "),re=r(ao,"A",{href:!0,rel:!0});var pr=s(re);Yo=n(pr,"Pegasus"),pr.forEach(t),Fo=n(ao," model configuration file:"),ao.forEach(t),At=u(e),m(le.$$.fragment,e),Ht=u(e),R=r(e,"P",{});var ro=s(R);Ro=n(ro,"To download a specific version of the file, use the "),et=r(ro,"CODE",{});var cr=s(et);Mo=n(cr,"revision"),cr.forEach(t),Qo=n(ro," parameter to specify the branch name, tag, or commit hash. If you choose to use the commit hash, it must be the full-length hash instead of the shorter 7-character commit hash:"),ro.forEach(t),jt=u(e),m(se.$$.fragment,e),Pt=u(e),M=r(e,"P",{});var lo=s(M);Wo=n(lo,"For more details and options, see the API reference for "),we=r(lo,"A",{href:!0});var dr=s(we);Jo=n(dr,"hf_hub_download()"),dr.forEach(t),Bo=n(lo,"."),lo.forEach(t),Tt=u(e),x=r(e,"H2",{class:!0});var so=s(x);Q=r(so,"A",{id:!0,class:!0,href:!0});var mr=s(Q);tt=r(mr,"SPAN",{});var gr=s(tt);m(ie.$$.fragment,gr),gr.forEach(t),mr.forEach(t),zo=u(so),ot=r(so,"SPAN",{});var _r=s(ot);Go=n(_r,"Create a repository"),_r.forEach(t),so.forEach(t),xt=u(e),k=r(e,"P",{});var Oe=s(k);Ko=n(Oe,"To create and share files to the Hub, you need to have a Hugging Face account. "),ve=r(Oe,"A",{href:!0});var yr=s(ve);Vo=n(yr,"Create an account"),yr.forEach(t),Xo=n(Oe," if you don\u2019t already have one, and then sign in to find your "),ne=r(Oe,"A",{href:!0,rel:!0});var wr=s(ne);Zo=n(wr,"User Access Token"),wr.forEach(t),ea=n(Oe," in your Settings. The User Access Token is used to authenticate your identity to the Hub."),Oe.forEach(t),qt=u(e),m(W.$$.fragment,e),It=u(e),be=r(e,"OL",{});var vr=s(be);at=r(vr,"LI",{});var br=s(at);ta=n(br,"Log in to your Hugging Face account with the following command:"),br.forEach(t),vr.forEach(t),St=u(e),m(he.$$.fragment,e),Ct=u(e),J=r(e,"P",{});var io=s(J);oa=n(io,"Or if you prefer to work from a Jupyter or Colaboratory notebook, then login with "),rt=r(io,"CODE",{});var $r=s(rt);aa=n($r,"notebook_login()"),$r.forEach(t),ra=n(io,":"),io.forEach(t),Dt=u(e),m(fe.$$.fragment,e),Lt=u(e),ue=r(e,"OL",{start:!0});var Er=s(ue);lt=r(Er,"LI",{});var kr=s(lt);la=n(kr,"Enter your User Access Token to authenticate your identity to the Hub."),kr.forEach(t),Er.forEach(t),Nt=u(e),B=r(e,"P",{});var no=s(B);sa=n(no,"After you\u2019ve created an account, create a repository with the "),$e=r(no,"A",{href:!0});var Ar=s($e);ia=n(Ar,"create_repo()"),Ar.forEach(t),na=n(no," function:"),no.forEach(t),Ot=u(e),m(pe.$$.fragment,e),Ut=u(e),Ee=r(e,"P",{});var Hr=s(Ee);ha=n(Hr,"If you want your repository to be private, then:"),Hr.forEach(t),Yt=u(e),m(ce.$$.fragment,e),Ft=u(e),ke=r(e,"P",{});var jr=s(ke);fa=n(jr,"Private repositories will not be visible to anyone except yourself."),jr.forEach(t),Rt=u(e),q=r(e,"H2",{class:!0});var ho=s(q);z=r(ho,"A",{id:!0,class:!0,href:!0});var Pr=s(z);st=r(Pr,"SPAN",{});var Tr=s(st);m(de.$$.fragment,Tr),Tr.forEach(t),Pr.forEach(t),ua=u(ho),it=r(ho,"SPAN",{});var xr=s(it);pa=n(xr,"Share files to the Hub"),xr.forEach(t),ho.forEach(t),Mt=u(e),G=r(e,"P",{});var fo=s(G);ca=n(fo,"Use the "),Ae=r(fo,"A",{href:!0});var qr=s(Ae);da=n(qr,"upload_file()"),qr.forEach(t),ma=n(fo," function to add a file to your newly created repository. You need to specify:"),fo.forEach(t),Qt=u(e),A=r(e,"OL",{});var Ue=s(A);nt=r(Ue,"LI",{});var Ir=s(nt);ga=n(Ir,"The path of the file to upload."),Ir.forEach(t),_a=u(Ue),ht=r(Ue,"LI",{});var Sr=s(ht);ya=n(Sr,"The path of the file in the repository."),Sr.forEach(t),wa=u(Ue),ft=r(Ue,"LI",{});var Cr=s(ft);va=n(Cr,"The repository id of where you want to add the file."),Cr.forEach(t),Ue.forEach(t),Wt=u(e),m(me.$$.fragment,e),Jt=u(e),H=r(e,"P",{});var Ye=s(H);ba=n(Ye,"To upload more than one file at a time, take a look at this "),He=r(Ye,"A",{href:!0});var Dr=s(He);$a=n(Dr,"guide"),Dr.forEach(t),Ea=n(Ye," which will introduce you to the "),je=r(Ye,"A",{href:!0});var Lr=s(je);ka=n(Lr,"Repository"),Lr.forEach(t),Aa=n(Ye," class and other methods for uploading files."),Ye.forEach(t),Bt=u(e),I=r(e,"H2",{class:!0});var uo=s(I);K=r(uo,"A",{id:!0,class:!0,href:!0});var Nr=s(K);ut=r(Nr,"SPAN",{});var Or=s(ut);m(ge.$$.fragment,Or),Or.forEach(t),Nr.forEach(t),Ha=u(uo),pt=r(uo,"SPAN",{});var Ur=s(pt);ja=n(Ur,"Next steps"),Ur.forEach(t),uo.forEach(t),zt=u(e),V=r(e,"P",{});var po=s(V);Pa=n(po,"The "),ct=r(po,"CODE",{});var Yr=s(ct);Ta=n(Yr,"huggingface_hub"),Yr.forEach(t),xa=n(po," library provides an easy way for users to interact with the Hub with Python. To learn more about how you can manage your files and repositories on the Hub, we recommend reading our how-to guides for how to:"),po.forEach(t),Gt=u(e),b=r(e,"UL",{});var j=s(b);Pe=r(j,"LI",{});var Wa=s(Pe);Te=r(Wa,"A",{href:!0});var Fr=s(Te);qa=n(Fr,"Create and manage repositories"),Fr.forEach(t),Ia=n(Wa,"."),Wa.forEach(t),Sa=u(j),xe=r(j,"LI",{});var Ja=s(xe);qe=r(Ja,"A",{href:!0});var Rr=s(qe);Ca=n(Rr,"Download"),Rr.forEach(t),Da=n(Ja," files from the Hub."),Ja.forEach(t),La=u(j),Ie=r(j,"LI",{});var Ba=s(Ie);Se=r(Ba,"A",{href:!0});var Mr=s(Se);Na=n(Mr,"Upload"),Mr.forEach(t),Oa=n(Ba," files to the Hub."),Ba.forEach(t),Ua=u(j),Ce=r(j,"LI",{});var za=s(Ce);De=r(za,"A",{href:!0});var Qr=s(De);Ya=n(Qr,"Search the Hub"),Qr.forEach(t),Fa=n(za," for your desired model or dataset."),za.forEach(t),Ra=u(j),Le=r(j,"LI",{});var Ga=s(Le);Ne=r(Ga,"A",{href:!0});var Wr=s(Ne);Ma=n(Wr,"Access the Inference API"),Wr.forEach(t),Qa=n(Ga," for fast inference."),Ga.forEach(t),j.forEach(t),this.h()},h(){p(c,"name","hf:doc:metadata"),p(c,"content",JSON.stringify(el)),p($,"id","quick-start"),p($,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p($,"href","#quick-start"),p(v,"class","relative group"),p(L,"id","install-the-hub-library"),p(L,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(L,"href","#install-the-hub-library"),p(P,"class","relative group"),p(U,"id","download-files-from-the-hub"),p(U,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(U,"href","#download-files-from-the-hub"),p(T,"class","relative group"),p(ye,"href","/docs/huggingface_hub/pr_850/en/package_reference/file_download#huggingface_hub.hf_hub_download"),p(re,"href","https://huggingface.co/google/pegasus-xsum"),p(re,"rel","nofollow"),p(we,"href","/docs/huggingface_hub/pr_850/en/package_reference/file_download#huggingface_hub.hf_hub_download"),p(Q,"id","create-a-repository"),p(Q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(Q,"href","#create-a-repository"),p(x,"class","relative group"),p(ve,"href","(https://huggingface.co/join)"),p(ne,"href","https://huggingface.co/docs/hub/security#user-access-tokens"),p(ne,"rel","nofollow"),p(ue,"start","2"),p($e,"href","/docs/huggingface_hub/pr_850/en/package_reference/hf_api#huggingface_hub.HfApi.create_repo"),p(z,"id","share-files-to-the-hub"),p(z,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(z,"href","#share-files-to-the-hub"),p(q,"class","relative group"),p(Ae,"href","/docs/huggingface_hub/pr_850/en/package_reference/hf_api#huggingface_hub.HfApi.upload_file"),p(He,"href","how-to-upstream"),p(je,"href","/docs/huggingface_hub/pr_850/en/package_reference/repository#huggingface_hub.Repository"),p(K,"id","next-steps"),p(K,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),p(K,"href","#next-steps"),p(I,"class","relative group"),p(Te,"href","how-to-manage"),p(qe,"href","how-to-downstream"),p(Se,"href","how-to-upstream"),p(De,"href","searching-the-hub"),p(Ne,"href","how-to-inference")},m(e,l){o(document.head,c),h(e,C,l),h(e,v,l),o(v,$),o($,Re),g(Z,Re,null),o(v,co),o(v,Me),o(Me,mo),h(e,mt,l),h(e,D,l),o(D,go),o(D,Qe),o(Qe,_o),o(D,yo),h(e,gt,l),h(e,P,l),o(P,L),o(L,We),g(ee,We,null),o(P,wo),o(P,Je),o(Je,vo),h(e,_t,l),h(e,E,l),o(E,bo),o(E,Be),o(Be,$o),o(E,Eo),o(E,ze),o(ze,ko),o(E,Ao),o(E,Ge),o(Ge,Ho),o(E,jo),h(e,yt,l),h(e,N,l),o(N,Po),o(N,Ke),o(Ke,To),o(N,xo),h(e,wt,l),g(te,e,l),h(e,vt,l),h(e,O,l),o(O,qo),o(O,Ve),o(Ve,Io),o(O,So),h(e,bt,l),g(oe,e,l),h(e,$t,l),h(e,T,l),o(T,U),o(U,Xe),g(ae,Xe,null),o(T,Co),o(T,Ze),o(Ze,Do),h(e,Et,l),h(e,Y,l),o(Y,Lo),o(Y,ye),o(ye,No),o(Y,Oo),h(e,kt,l),h(e,F,l),o(F,Uo),o(F,re),o(re,Yo),o(F,Fo),h(e,At,l),g(le,e,l),h(e,Ht,l),h(e,R,l),o(R,Ro),o(R,et),o(et,Mo),o(R,Qo),h(e,jt,l),g(se,e,l),h(e,Pt,l),h(e,M,l),o(M,Wo),o(M,we),o(we,Jo),o(M,Bo),h(e,Tt,l),h(e,x,l),o(x,Q),o(Q,tt),g(ie,tt,null),o(x,zo),o(x,ot),o(ot,Go),h(e,xt,l),h(e,k,l),o(k,Ko),o(k,ve),o(ve,Vo),o(k,Xo),o(k,ne),o(ne,Zo),o(k,ea),h(e,qt,l),g(W,e,l),h(e,It,l),h(e,be,l),o(be,at),o(at,ta),h(e,St,l),g(he,e,l),h(e,Ct,l),h(e,J,l),o(J,oa),o(J,rt),o(rt,aa),o(J,ra),h(e,Dt,l),g(fe,e,l),h(e,Lt,l),h(e,ue,l),o(ue,lt),o(lt,la),h(e,Nt,l),h(e,B,l),o(B,sa),o(B,$e),o($e,ia),o(B,na),h(e,Ot,l),g(pe,e,l),h(e,Ut,l),h(e,Ee,l),o(Ee,ha),h(e,Yt,l),g(ce,e,l),h(e,Ft,l),h(e,ke,l),o(ke,fa),h(e,Rt,l),h(e,q,l),o(q,z),o(z,st),g(de,st,null),o(q,ua),o(q,it),o(it,pa),h(e,Mt,l),h(e,G,l),o(G,ca),o(G,Ae),o(Ae,da),o(G,ma),h(e,Qt,l),h(e,A,l),o(A,nt),o(nt,ga),o(A,_a),o(A,ht),o(ht,ya),o(A,wa),o(A,ft),o(ft,va),h(e,Wt,l),g(me,e,l),h(e,Jt,l),h(e,H,l),o(H,ba),o(H,He),o(He,$a),o(H,Ea),o(H,je),o(je,ka),o(H,Aa),h(e,Bt,l),h(e,I,l),o(I,K),o(K,ut),g(ge,ut,null),o(I,Ha),o(I,pt),o(pt,ja),h(e,zt,l),h(e,V,l),o(V,Pa),o(V,ct),o(ct,Ta),o(V,xa),h(e,Gt,l),h(e,b,l),o(b,Pe),o(Pe,Te),o(Te,qa),o(Pe,Ia),o(b,Sa),o(b,xe),o(xe,qe),o(qe,Ca),o(xe,Da),o(b,La),o(b,Ie),o(Ie,Se),o(Se,Na),o(Ie,Oa),o(b,Ua),o(b,Ce),o(Ce,De),o(De,Ya),o(Ce,Fa),o(b,Ra),o(b,Le),o(Le,Ne),o(Ne,Ma),o(Le,Qa),Kt=!0},p(e,[l]){const _e={};l&2&&(_e.$$scope={dirty:l,ctx:e}),W.$set(_e)},i(e){Kt||(_(Z.$$.fragment,e),_(ee.$$.fragment,e),_(te.$$.fragment,e),_(oe.$$.fragment,e),_(ae.$$.fragment,e),_(le.$$.fragment,e),_(se.$$.fragment,e),_(ie.$$.fragment,e),_(W.$$.fragment,e),_(he.$$.fragment,e),_(fe.$$.fragment,e),_(pe.$$.fragment,e),_(ce.$$.fragment,e),_(de.$$.fragment,e),_(me.$$.fragment,e),_(ge.$$.fragment,e),Kt=!0)},o(e){y(Z.$$.fragment,e),y(ee.$$.fragment,e),y(te.$$.fragment,e),y(oe.$$.fragment,e),y(ae.$$.fragment,e),y(le.$$.fragment,e),y(se.$$.fragment,e),y(ie.$$.fragment,e),y(W.$$.fragment,e),y(he.$$.fragment,e),y(fe.$$.fragment,e),y(pe.$$.fragment,e),y(ce.$$.fragment,e),y(de.$$.fragment,e),y(me.$$.fragment,e),y(ge.$$.fragment,e),Kt=!1},d(e){t(c),e&&t(C),e&&t(v),w(Z),e&&t(mt),e&&t(D),e&&t(gt),e&&t(P),w(ee),e&&t(_t),e&&t(E),e&&t(yt),e&&t(N),e&&t(wt),w(te,e),e&&t(vt),e&&t(O),e&&t(bt),w(oe,e),e&&t($t),e&&t(T),w(ae),e&&t(Et),e&&t(Y),e&&t(kt),e&&t(F),e&&t(At),w(le,e),e&&t(Ht),e&&t(R),e&&t(jt),w(se,e),e&&t(Pt),e&&t(M),e&&t(Tt),e&&t(x),w(ie),e&&t(xt),e&&t(k),e&&t(qt),w(W,e),e&&t(It),e&&t(be),e&&t(St),w(he,e),e&&t(Ct),e&&t(J),e&&t(Dt),w(fe,e),e&&t(Lt),e&&t(ue),e&&t(Nt),e&&t(B),e&&t(Ot),w(pe,e),e&&t(Ut),e&&t(Ee),e&&t(Yt),w(ce,e),e&&t(Ft),e&&t(ke),e&&t(Rt),e&&t(q),w(de),e&&t(Mt),e&&t(G),e&&t(Qt),e&&t(A),e&&t(Wt),w(me,e),e&&t(Jt),e&&t(H),e&&t(Bt),e&&t(I),w(ge),e&&t(zt),e&&t(V),e&&t(Gt),e&&t(b)}}}const el={local:"quick-start",sections:[{local:"install-the-hub-library",title:"Install the Hub library"},{local:"download-files-from-the-hub",title:"Download files from the Hub"},{local:"create-a-repository",title:"Create a repository"},{local:"share-files-to-the-hub",title:"Share files to the Hub"},{local:"next-steps",title:"Next steps"}],title:"Quick start"};function tl(dt){return Kr(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class sl extends Jr{constructor(c){super();Br(this,c,tl,Zr,zr,{})}}export{sl as default,el as metadata};
