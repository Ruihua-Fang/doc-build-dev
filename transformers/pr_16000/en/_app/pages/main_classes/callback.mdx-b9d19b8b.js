import{S as Pm,i as Om,s as Im,e as o,k as c,w as _,t as r,M as Mm,c as s,d as t,m as f,a as l,x as u,h as n,b as i,F as e,g as d,y as v,q as b,o as E,B as k}from"../../chunks/vendor-4833417e.js";import{T as xm}from"../../chunks/Tip-fffd6df1.js";import{D as $}from"../../chunks/Docstring-7b52c3d4.js";import{C as _h}from"../../chunks/CodeBlock-6a3d1b46.js";import{I as kn}from"../../chunks/IconCopyLink-4b81c553.js";import"../../chunks/CopyButton-dacfbfaf.js";function Fm(ar){let w,Y,A,L,Z,M,Ke,ee;return{c(){w=o("p"),Y=r(`In all this class, one step is to be understood as one update step. When using gradient accumulation, one update
step may require several forward and backward passes: if you use `),A=o("code"),L=r("gradient_accumulation_steps=n"),Z=r(`, then one update
step requires going through `),M=o("em"),Ke=r("n"),ee=r(" batches.")},l(te){w=s(te,"P",{});var x=l(w);Y=n(x,`In all this class, one step is to be understood as one update step. When using gradient accumulation, one update
step may require several forward and backward passes: if you use `),A=s(x,"CODE",{});var q=l(A);L=n(q,"gradient_accumulation_steps=n"),q.forEach(t),Z=n(x,`, then one update
step requires going through `),M=s(x,"EM",{});var na=l(M);Ke=n(na,"n"),na.forEach(t),ee=n(x," batches."),x.forEach(t)},m(te,x){d(te,w,x),e(w,Y),e(w,A),e(A,L),e(w,Z),e(w,M),e(M,Ke),e(w,ee)},d(te){te&&t(w)}}}function jm(ar){let w,Y,A,L,Z,M,Ke,ee,te,x,q,na,oa,Fo,jo,Tn,j,No,sa,Wo,Bo,la,zo,Vo,ia,qo,Ro,$n,be,Ho,ca,Uo,Go,Cn,D,fa,ha,Jo,Yo,Xo,X,da,Ko,Qo,ma,Zo,es,pa,ts,as,rs,ga,_a,ns,os,ss,Ee,ua,ls,is,Qe,cs,fs,hs,ke,va,ds,ms,Ze,ps,gs,_s,Te,ba,us,vs,et,bs,Es,ks,$e,Ea,Ts,$s,tt,Cs,ws,wn,S,ys,ka,As,Ds,Ta,Ss,Ls,$a,Ps,Os,Ca,Is,Ms,wa,xs,Fs,yn,ae,Ce,rr,at,js,nr,Ns,An,we,Ws,ya,Bs,zs,Dn,R,rt,Vs,re,qs,Aa,Rs,Hs,nt,Us,Gs,Js,N,ot,Ys,or,Xs,Ks,C,Qs,sr,Zs,el,lr,tl,al,ir,rl,nl,cr,ol,sl,fr,ll,il,hr,cl,fl,dr,hl,dl,mr,ml,pl,pr,gl,_l,ul,st,vl,lt,bl,El,Sn,ne,it,kl,ct,Tl,Da,$l,Cl,Ln,oe,ft,wl,ht,yl,Sa,Al,Dl,Pn,se,dt,Sl,mt,Ll,La,Pl,Ol,On,H,pt,Il,gt,Ml,Pa,xl,Fl,jl,U,Nl,Oa,Wl,Bl,gr,zl,Vl,Ia,ql,Rl,In,le,_t,Hl,ie,Ul,Ma,Gl,Jl,ut,Yl,Xl,Mn,G,vt,Kl,ce,Ql,xa,Zl,ei,bt,ti,ai,ri,W,Et,ni,kt,oi,_r,si,li,ii,Tt,ci,$t,fi,hi,di,m,mi,ur,pi,gi,vr,_i,ui,br,vi,bi,Er,Ei,ki,kr,Ti,$i,Tr,Ci,wi,$r,yi,Ai,Cr,Di,Si,wr,Li,Pi,yr,Oi,Ii,Ar,Mi,xi,Dr,Fi,ji,Sr,Ni,Wi,Lr,Bi,zi,Pr,Vi,qi,Or,Ri,Hi,Ir,Ui,Gi,Mr,Ji,Yi,xr,Xi,Ki,xn,J,Ct,Qi,fe,Zi,Fa,ec,tc,wt,ac,rc,nc,B,yt,oc,Fr,sc,lc,he,ic,jr,cc,fc,Nr,hc,dc,mc,F,pc,Wr,gc,_c,Br,uc,vc,ja,bc,Ec,zr,kc,Tc,Fn,de,At,$c,Dt,Cc,Na,wc,yc,jn,me,ye,Vr,St,Ac,qr,Dc,Nn,p,Lt,Sc,Rr,Lc,Pc,Pt,Oc,Hr,Ic,Mc,xc,P,Fc,Ur,jc,Nc,Gr,Wc,Bc,Jr,zc,Vc,Yr,qc,Rc,Xr,Hc,Uc,Gc,Kr,Jc,Yc,Ot,Xc,Ae,It,Kc,Qr,Qc,Zc,De,Mt,ef,Zr,tf,af,Se,xt,rf,en,nf,of,Le,Ft,sf,jt,lf,Wa,cf,ff,hf,Pe,Nt,df,tn,mf,pf,Oe,Wt,gf,an,_f,uf,Ie,Bt,vf,rn,bf,Ef,Me,zt,kf,nn,Tf,$f,xe,Vt,Cf,on,wf,yf,Fe,qt,Af,sn,Df,Sf,je,Rt,Lf,ln,Pf,Of,Ne,Ht,If,cn,Mf,Wn,We,xf,Ba,Ff,jf,Bn,Ut,zn,Be,Nf,fn,Wf,Bf,Vn,Gt,qn,pe,ze,hn,Jt,zf,dn,Vf,Rn,O,Yt,qf,ge,Rf,za,Hf,Uf,Va,Gf,Jf,Yf,Ve,Xf,qe,Xt,Kf,Kt,Qf,mn,Zf,eh,th,Re,Qt,ah,Zt,rh,pn,nh,oh,Hn,_e,He,gn,ea,sh,_n,lh,Un,ue,ta,ih,ve,ch,qa,fh,hh,Ra,dh,mh,Gn;return M=new kn({}),at=new kn({}),rt=new $({props:{name:"class transformers.integrations.CometCallback",anchor:"transformers.integrations.CometCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/integrations.py#L650"}}),ot=new $({props:{name:"setup",anchor:"transformers.integrations.CometCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/integrations.py#L661"}}),it=new $({props:{name:"class transformers.DefaultFlowCallback",anchor:"transformers.DefaultFlowCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L406"}}),ft=new $({props:{name:"class transformers.PrinterCallback",anchor:"transformers.PrinterCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L494"}}),dt=new $({props:{name:"class transformers.ProgressCallback",anchor:"transformers.ProgressCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L452"}}),pt=new $({props:{name:"class transformers.EarlyStoppingCallback",anchor:"transformers.EarlyStoppingCallback",parameters:[{name:"early_stopping_patience",val:": int = 1"},{name:"early_stopping_threshold",val:": typing.Optional[float] = 0.0"}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L505",parametersDescription:[{anchor:"transformers.EarlyStoppingCallback.early_stopping_patience",description:`<strong>early_stopping_patience</strong> (<code>int</code>) &#x2014;
Use with <code>metric_for_best_model</code> to stop training when the specified metric worsens for
<code>early_stopping_patience</code> evaluation calls.`,name:"early_stopping_patience"},{anchor:"transformers.EarlyStoppingCallback.early_stopping_threshold(float,",description:`<strong>early_stopping_threshold(<code>float</code>,</strong> <em>optional</em>) &#x2014;
Use with TrainingArguments <code>metric_for_best_model</code> and <code>early_stopping_patience</code> to denote how much the
specified metric must improve to satisfy early stopping conditions. \``,name:"early_stopping_threshold(float,"}]}}),_t=new $({props:{name:"class transformers.integrations.TensorBoardCallback",anchor:"transformers.integrations.TensorBoardCallback",parameters:[{name:"tb_writer",val:" = None"}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/integrations.py#L436",parametersDescription:[{anchor:"transformers.integrations.TensorBoardCallback.tb_writer",description:`<strong>tb_writer</strong> (<code>SummaryWriter</code>, <em>optional</em>) &#x2014;
The writer to use. Will instantiate one if not set.`,name:"tb_writer"}]}}),vt=new $({props:{name:"class transformers.integrations.WandbCallback",anchor:"transformers.integrations.WandbCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/integrations.py#L524"}}),Et=new $({props:{name:"setup",anchor:"transformers.integrations.WandbCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/integrations.py#L541"}}),Ct=new $({props:{name:"class transformers.integrations.MLflowCallback",anchor:"transformers.integrations.MLflowCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/integrations.py#L726"}}),yt=new $({props:{name:"setup",anchor:"transformers.integrations.MLflowCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/integrations.py#L743"}}),At=new $({props:{name:"class transformers.integrations.CodeCarbonCallback",anchor:"transformers.integrations.CodeCarbonCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/integrations.py#L886"}}),St=new kn({}),Lt=new $({props:{name:"class transformers.TrainerCallback",anchor:"transformers.TrainerCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L159",parametersDescription:[{anchor:"transformers.TrainerCallback.args",description:`<strong>args</strong> (<a href="/docs/transformers/pr_16000/en/main_classes/trainer#transformers.TrainingArguments">TrainingArguments</a>) &#x2014;
The training arguments used to instantiate the <a href="/docs/transformers/pr_16000/en/main_classes/trainer#transformers.Trainer">Trainer</a>.`,name:"args"},{anchor:"transformers.TrainerCallback.state",description:`<strong>state</strong> (<a href="/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerState">TrainerState</a>) &#x2014;
The current state of the <a href="/docs/transformers/pr_16000/en/main_classes/trainer#transformers.Trainer">Trainer</a>.`,name:"state"},{anchor:"transformers.TrainerCallback.control",description:`<strong>control</strong> (<a href="/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerControl">TrainerControl</a>) &#x2014;
The object that is returned to the <a href="/docs/transformers/pr_16000/en/main_classes/trainer#transformers.Trainer">Trainer</a> and can be used to make some decisions.`,name:"control"},{anchor:"transformers.TrainerCallback.model",description:`<strong>model</strong> (<a href="/docs/transformers/pr_16000/en/main_classes/model#transformers.PreTrainedModel">PreTrainedModel</a> or <code>torch.nn.Module</code>) &#x2014;
The model being trained.`,name:"model"},{anchor:"transformers.TrainerCallback.tokenizer",description:`<strong>tokenizer</strong> (<a href="/docs/transformers/pr_16000/en/main_classes/tokenizer#transformers.PreTrainedTokenizer">PreTrainedTokenizer</a>) &#x2014;
The tokenizer used for encoding the data.`,name:"tokenizer"},{anchor:"transformers.TrainerCallback.optimizer",description:`<strong>optimizer</strong> (<code>torch.optim.Optimizer</code>) &#x2014;
The optimizer used for the training steps.`,name:"optimizer"},{anchor:"transformers.TrainerCallback.lr_scheduler",description:`<strong>lr_scheduler</strong> (<code>torch.optim.lr_scheduler.LambdaLR</code>) &#x2014;
The scheduler used for setting the learning rate.`,name:"lr_scheduler"},{anchor:"transformers.TrainerCallback.train_dataloader",description:`<strong>train_dataloader</strong> (<code>torch.utils.data.DataLoader</code>, <em>optional</em>) &#x2014;
The current dataloader used for training.`,name:"train_dataloader"},{anchor:"transformers.TrainerCallback.eval_dataloader",description:`<strong>eval_dataloader</strong> (<code>torch.utils.data.DataLoader</code>, <em>optional</em>) &#x2014;
The current dataloader used for training.`,name:"eval_dataloader"},{anchor:"transformers.TrainerCallback.metrics",description:`<strong>metrics</strong> (<code>Dict[str, float]</code>) &#x2014;
The metrics computed by the last evaluation phase.</p>
<p>Those are only accessible in the event <code>on_evaluate</code>.`,name:"metrics"},{anchor:"transformers.TrainerCallback.logs",description:`<strong>logs</strong>  (<code>Dict[str, float]</code>) &#x2014;
The values to log.</p>
<p>Those are only accessible in the event <code>on_log</code>.`,name:"logs"}]}}),Ot=new _h({props:{code:`class PrinterCallback(TrainerCallback):
    def on_log(self, args, state, control, logs=None, **kwargs):
        _ = logs.pop("total_flos", None)
        if state.is_local_process_zero:
            print(logs)`,highlighted:`<span class="hljs-keyword">class</span> <span class="hljs-title class_">PrinterCallback</span>(<span class="hljs-title class_ inherited__">TrainerCallback</span>):
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_log</span>(<span class="hljs-params">self, args, state, control, logs=<span class="hljs-literal">None</span>, **kwargs</span>):
        _ = logs.pop(<span class="hljs-string">&quot;total_flos&quot;</span>, <span class="hljs-literal">None</span>)
        <span class="hljs-keyword">if</span> state.is_local_process_zero:
            <span class="hljs-built_in">print</span>(logs)`}}),It=new $({props:{name:"on_epoch_begin",anchor:"transformers.TrainerCallback.on_epoch_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L227"}}),Mt=new $({props:{name:"on_epoch_end",anchor:"transformers.TrainerCallback.on_epoch_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L233"}}),xt=new $({props:{name:"on_evaluate",anchor:"transformers.TrainerCallback.on_evaluate",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L259"}}),Ft=new $({props:{name:"on_init_end",anchor:"transformers.TrainerCallback.on_init_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L209"}}),Nt=new $({props:{name:"on_log",anchor:"transformers.TrainerCallback.on_log",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L271"}}),Wt=new $({props:{name:"on_prediction_step",anchor:"transformers.TrainerCallback.on_prediction_step",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L277"}}),Bt=new $({props:{name:"on_save",anchor:"transformers.TrainerCallback.on_save",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L265"}}),zt=new $({props:{name:"on_step_begin",anchor:"transformers.TrainerCallback.on_step_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L239"}}),Vt=new $({props:{name:"on_step_end",anchor:"transformers.TrainerCallback.on_step_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L252"}}),qt=new $({props:{name:"on_substep_end",anchor:"transformers.TrainerCallback.on_substep_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L246"}}),Rt=new $({props:{name:"on_train_begin",anchor:"transformers.TrainerCallback.on_train_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L215"}}),Ht=new $({props:{name:"on_train_end",anchor:"transformers.TrainerCallback.on_train_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L221"}}),Ut=new _h({props:{code:`class MyCallback(TrainerCallback):
    "A callback that prints a message at the beginning of training"

    def on_train_begin(self, args, state, control, **kwargs):
        print("Starting training")


trainer = Trainer(
    model,
    args,
    train_dataset=train_dataset,
    eval_dataset=eval_dataset,
    callbacks=[MyCallback],  # We can either pass the callback class this way or an instance of it (MyCallback())
)`,highlighted:`<span class="hljs-keyword">class</span> <span class="hljs-title class_">MyCallback</span>(<span class="hljs-title class_ inherited__">TrainerCallback</span>):
    <span class="hljs-string">&quot;A callback that prints a message at the beginning of training&quot;</span>

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_train_begin</span>(<span class="hljs-params">self, args, state, control, **kwargs</span>):
        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Starting training&quot;</span>)


trainer = Trainer(
    model,
    args,
    train_dataset=train_dataset,
    eval_dataset=eval_dataset,
    callbacks=[MyCallback],  <span class="hljs-comment"># We can either pass the callback class this way or an instance of it (MyCallback())</span>
)`}}),Gt=new _h({props:{code:`trainer = Trainer(...)
trainer.add_callback(MyCallback)
# Alternatively, we can pass an instance of the callback class
trainer.add_callback(MyCallback())`,highlighted:`trainer = Trainer(...)
trainer.add_callback(MyCallback)
<span class="hljs-comment"># Alternatively, we can pass an instance of the callback class</span>
trainer.add_callback(MyCallback())`}}),Jt=new kn({}),Yt=new $({props:{name:"class transformers.TrainerState",anchor:"transformers.TrainerState",parameters:[{name:"epoch",val:": typing.Optional[float] = None"},{name:"global_step",val:": int = 0"},{name:"max_steps",val:": int = 0"},{name:"num_train_epochs",val:": int = 0"},{name:"total_flos",val:": float = 0"},{name:"log_history",val:": typing.List[typing.Dict[str, float]] = None"},{name:"best_metric",val:": typing.Optional[float] = None"},{name:"best_model_checkpoint",val:": typing.Optional[str] = None"},{name:"is_local_process_zero",val:": bool = True"},{name:"is_world_process_zero",val:": bool = True"},{name:"is_hyper_param_search",val:": bool = False"},{name:"trial_name",val:": str = None"},{name:"trial_params",val:": typing.Dict[str, typing.Union[str, float, int, bool]] = None"}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L35",parametersDescription:[{anchor:"transformers.TrainerState.epoch",description:`<strong>epoch</strong> (<code>float</code>, <em>optional</em>) &#x2014;
Only set during training, will represent the epoch the training is at (the decimal part being the
percentage of the current epoch completed).`,name:"epoch"},{anchor:"transformers.TrainerState.global_step",description:`<strong>global_step</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
During training, represents the number of update steps completed.`,name:"global_step"},{anchor:"transformers.TrainerState.max_steps",description:`<strong>max_steps</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
The number of update steps to do during the current training.`,name:"max_steps"},{anchor:"transformers.TrainerState.total_flos",description:`<strong>total_flos</strong> (<code>float</code>, <em>optional</em>, defaults to 0) &#x2014;
The total number of floating operations done by the model since the beginning of training (stored as floats
to avoid overflow).`,name:"total_flos"},{anchor:"transformers.TrainerState.log_history",description:`<strong>log_history</strong> (<code>List[Dict[str, float]]</code>, <em>optional</em>) &#x2014;
The list of logs done since the beginning of training.`,name:"log_history"},{anchor:"transformers.TrainerState.best_metric",description:`<strong>best_metric</strong> (<code>float</code>, <em>optional</em>) &#x2014;
When tracking the best model, the value of the best metric encountered so far.`,name:"best_metric"},{anchor:"transformers.TrainerState.best_model_checkpoint",description:`<strong>best_model_checkpoint</strong> (<code>str</code>, <em>optional</em>) &#x2014;
When tracking the best model, the value of the name of the checkpoint for the best model encountered so
far.`,name:"best_model_checkpoint"},{anchor:"transformers.TrainerState.is_local_process_zero",description:`<strong>is_local_process_zero</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not this process is the local (e.g., on one machine if training in a distributed fashion on
several machines) main process.`,name:"is_local_process_zero"},{anchor:"transformers.TrainerState.is_world_process_zero",description:`<strong>is_world_process_zero</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not this process is the global main process (when training in a distributed fashion on several
machines, this is only going to be <code>True</code> for one process).`,name:"is_world_process_zero"},{anchor:"transformers.TrainerState.is_hyper_param_search",description:`<strong>is_hyper_param_search</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether we are in the process of a hyper parameter search using Trainer.hyperparameter_search. This will
impact the way data will be logged in TensorBoard.`,name:"is_hyper_param_search"}]}}),Ve=new xm({props:{$$slots:{default:[Fm]},$$scope:{ctx:ar}}}),Xt=new $({props:{name:"load_from_json",anchor:"transformers.TrainerState.load_from_json",parameters:[{name:"json_path",val:": str"}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L101"}}),Qt=new $({props:{name:"save_to_json",anchor:"transformers.TrainerState.save_to_json",parameters:[{name:"json_path",val:": str"}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L95"}}),ea=new kn({}),ta=new $({props:{name:"class transformers.TrainerControl",anchor:"transformers.TrainerControl",parameters:[{name:"should_training_stop",val:": bool = False"},{name:"should_epoch_stop",val:": bool = False"},{name:"should_save",val:": bool = False"},{name:"should_evaluate",val:": bool = False"},{name:"should_log",val:": bool = False"}],source:"https://github.com/huggingface/transformers/blob/pr_16000/src/transformers/trainer_callback.py#L110",parametersDescription:[{anchor:"transformers.TrainerControl.should_training_stop",description:`<strong>should_training_stop</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the training should be interrupted.</p>
<p>If <code>True</code>, this variable will not be set back to <code>False</code>. The training will just stop.`,name:"should_training_stop"},{anchor:"transformers.TrainerControl.should_epoch_stop",description:`<strong>should_epoch_stop</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the current epoch should be interrupted.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next epoch.`,name:"should_epoch_stop"},{anchor:"transformers.TrainerControl.should_save",description:`<strong>should_save</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the model should be saved at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_save"},{anchor:"transformers.TrainerControl.should_evaluate",description:`<strong>should_evaluate</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the model should be evaluated at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_evaluate"},{anchor:"transformers.TrainerControl.should_log",description:`<strong>should_log</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the logs should be reported at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_log"}]}}),{c(){w=o("meta"),Y=c(),A=o("h1"),L=o("a"),Z=o("span"),_(M.$$.fragment),Ke=c(),ee=o("span"),te=r("Callbacks"),x=c(),q=o("p"),na=r(`Callbacks are objects that can customize the behavior of the training loop in the PyTorch
`),oa=o("a"),Fo=r("Trainer"),jo=r(` (this feature is not yet implemented in TensorFlow) that can inspect the training loop
state (for progress reporting, logging on TensorBoard or other ML platforms\u2026) and take decisions (like early
stopping).`),Tn=c(),j=o("p"),No=r("Callbacks are \u201Cread only\u201D pieces of code, apart from the "),sa=o("a"),Wo=r("TrainerControl"),Bo=r(` object they return, they
cannot change anything in the training loop. For customizations that require changes in the training loop, you should
subclass `),la=o("a"),zo=r("Trainer"),Vo=r(" and override the methods you need (see "),ia=o("a"),qo=r("trainer"),Ro=r(" for examples)."),$n=c(),be=o("p"),Ho=r("By default a "),ca=o("a"),Uo=r("Trainer"),Go=r(" will use the following callbacks:"),Cn=c(),D=o("ul"),fa=o("li"),ha=o("a"),Jo=r("DefaultFlowCallback"),Yo=r(" which handles the default behavior for logging, saving and evaluation."),Xo=c(),X=o("li"),da=o("a"),Ko=r("PrinterCallback"),Qo=r(" or "),ma=o("a"),Zo=r("ProgressCallback"),es=r(` to display progress and print the
logs (the first one is used if you deactivate tqdm through the `),pa=o("a"),ts=r("TrainingArguments"),as=r(`, otherwise
it\u2019s the second one).`),rs=c(),ga=o("li"),_a=o("a"),ns=r("TensorBoardCallback"),os=r(` if tensorboard is accessible (either through PyTorch >= 1.4
or tensorboardX).`),ss=c(),Ee=o("li"),ua=o("a"),ls=r("WandbCallback"),is=r(" if "),Qe=o("a"),cs=r("wandb"),fs=r(" is installed."),hs=c(),ke=o("li"),va=o("a"),ds=r("CometCallback"),ms=r(" if "),Ze=o("a"),ps=r("comet_ml"),gs=r(" is installed."),_s=c(),Te=o("li"),ba=o("a"),us=r("MLflowCallback"),vs=r(" if "),et=o("a"),bs=r("mlflow"),Es=r(" is installed."),ks=c(),$e=o("li"),Ea=o("a"),Ts=r("CodeCarbonCallback"),$s=r(" if "),tt=o("a"),Cs=r("codecarbon"),ws=r(` is
installed.`),wn=c(),S=o("p"),ys=r("The main class that implements callbacks is "),ka=o("a"),As=r("TrainerCallback"),Ds=r(`. It gets the
`),Ta=o("a"),Ss=r("TrainingArguments"),Ls=r(" used to instantiate the "),$a=o("a"),Ps=r("Trainer"),Os=r(`, can access that
Trainer\u2019s internal state via `),Ca=o("a"),Is=r("TrainerState"),Ms=r(`, and can take some actions on the training loop via
`),wa=o("a"),xs=r("TrainerControl"),Fs=r("."),yn=c(),ae=o("h2"),Ce=o("a"),rr=o("span"),_(at.$$.fragment),js=c(),nr=o("span"),Ns=r("Available Callbacks"),An=c(),we=o("p"),Ws=r("Here is the list of the available "),ya=o("a"),Bs=r("TrainerCallback"),zs=r(" in the library:"),Dn=c(),R=o("div"),_(rt.$$.fragment),Vs=c(),re=o("p"),qs=r("A "),Aa=o("a"),Rs=r("TrainerCallback"),Hs=r(" that sends the logs to "),nt=o("a"),Us=r("Comet ML"),Gs=r("."),Js=c(),N=o("div"),_(ot.$$.fragment),Ys=c(),or=o("p"),Xs=r("Setup the optional Comet.ml integration."),Ks=c(),C=o("p"),Qs=r(`Environment:
COMET_MODE (`),sr=o("code"),Zs=r("str"),el=r(", "),lr=o("em"),tl=r("optional"),al=r(`):
Whether to create an online, offline experiment or disable Comet logging. Can be \u201COFFLINE\u201D, \u201CONLINE\u201D,
or \u201CDISABLED\u201D. Defaults to \u201CONLINE\u201D.
COMET_PROJECT_NAME (`),ir=o("code"),rl=r("str"),nl=r(", "),cr=o("em"),ol=r("optional"),sl=r(`):
Comet project name for experiments
COMET_OFFLINE_DIRECTORY (`),fr=o("code"),ll=r("str"),il=r(", "),hr=o("em"),cl=r("optional"),fl=r(`):
Folder to use for saving offline experiments when `),dr=o("code"),hl=r("COMET_MODE"),dl=r(` is \u201COFFLINE\u201D
COMET_LOG_ASSETS (`),mr=o("code"),ml=r("str"),pl=r(", "),pr=o("em"),gl=r("optional"),_l=r(`):
Whether or not to log training assets (tf event logs, checkpoints, etc), to Comet. Can be \u201CTRUE\u201D, or
\u201CFALSE\u201D. Defaults to \u201CTRUE\u201D.`),ul=c(),st=o("p"),vl=r(`For a number of configurable items in the environment, see
`),lt=o("a"),bl=r("here"),El=r("."),Sn=c(),ne=o("div"),_(it.$$.fragment),kl=c(),ct=o("p"),Tl=r("A "),Da=o("a"),$l=r("TrainerCallback"),Cl=r(" that handles the default flow of the training loop for logs, evaluation and checkpoints."),Ln=c(),oe=o("div"),_(ft.$$.fragment),wl=c(),ht=o("p"),yl=r("A bare "),Sa=o("a"),Al=r("TrainerCallback"),Dl=r(" that just prints the logs."),Pn=c(),se=o("div"),_(dt.$$.fragment),Sl=c(),mt=o("p"),Ll=r("A "),La=o("a"),Pl=r("TrainerCallback"),Ol=r(" that displays the progress of training or evaluation."),On=c(),H=o("div"),_(pt.$$.fragment),Il=c(),gt=o("p"),Ml=r("A "),Pa=o("a"),xl=r("TrainerCallback"),Fl=r(" that handles early stopping."),jl=c(),U=o("p"),Nl=r("This callback depends on "),Oa=o("a"),Wl=r("TrainingArguments"),Bl=r(" argument "),gr=o("em"),zl=r("load_best_model_at_end"),Vl=r(` functionality to set best_metric
in `),Ia=o("a"),ql=r("TrainerState"),Rl=r("."),In=c(),le=o("div"),_(_t.$$.fragment),Hl=c(),ie=o("p"),Ul=r("A "),Ma=o("a"),Gl=r("TrainerCallback"),Jl=r(" that sends the logs to "),ut=o("a"),Yl=r("TensorBoard"),Xl=r("."),Mn=c(),G=o("div"),_(vt.$$.fragment),Kl=c(),ce=o("p"),Ql=r("A "),xa=o("a"),Zl=r("TrainerCallback"),ei=r(" that sends the logs to "),bt=o("a"),ti=r("Weight and Biases"),ai=r("."),ri=c(),W=o("div"),_(Et.$$.fragment),ni=c(),kt=o("p"),oi=r("Setup the optional Weights & Biases ("),_r=o("em"),si=r("wandb"),li=r(") integration."),ii=c(),Tt=o("p"),ci=r(`One can subclass and override this method to customize the setup if needed. Find more information
`),$t=o("a"),fi=r("here"),hi=r(`. You can also override the following environment
variables:`),di=c(),m=o("p"),mi=r(`Environment:
WANDB_LOG_MODEL (`),ur=o("code"),pi=r("bool"),gi=r(", "),vr=o("em"),_i=r("optional"),ui=r(", defaults to "),br=o("code"),vi=r("False"),bi=r(`):
Whether or not to log model as artifact at the end of training. Use along with
`),Er=o("em"),Ei=r("TrainingArguments.load_best_model_at_end"),ki=r(` to upload best model.
WANDB_WATCH (`),kr=o("code"),Ti=r("str"),$i=r(", "),Tr=o("em"),Ci=r("optional"),wi=r(" defaults to "),$r=o("code"),yi=r('"gradients"'),Ai=r(`):
Can be `),Cr=o("code"),Di=r('"gradients"'),Si=r(", "),wr=o("code"),Li=r('"all"'),Pi=r(" or "),yr=o("code"),Oi=r('"false"'),Ii=r(". Set to "),Ar=o("code"),Mi=r('"false"'),xi=r(" to disable gradient logging or "),Dr=o("code"),Fi=r('"all"'),ji=r(` to
log gradients and parameters.
WANDB_PROJECT (`),Sr=o("code"),Ni=r("str"),Wi=r(", "),Lr=o("em"),Bi=r("optional"),zi=r(", defaults to "),Pr=o("code"),Vi=r('"huggingface"'),qi=r(`):
Set this to a custom string to store results in a different project.
WANDB_DISABLED (`),Or=o("code"),Ri=r("bool"),Hi=r(", "),Ir=o("em"),Ui=r("optional"),Gi=r(", defaults to "),Mr=o("code"),Ji=r("False"),Yi=r(`):
Whether or not to disable wandb entirely. Set `),xr=o("em"),Xi=r("WANDB_DISABLED=true"),Ki=r(" to disable."),xn=c(),J=o("div"),_(Ct.$$.fragment),Qi=c(),fe=o("p"),Zi=r("A "),Fa=o("a"),ec=r("TrainerCallback"),tc=r(" that sends the logs to "),wt=o("a"),ac=r("MLflow"),rc=r("."),nc=c(),B=o("div"),_(yt.$$.fragment),oc=c(),Fr=o("p"),sc=r("Setup the optional MLflow integration."),lc=c(),he=o("p"),ic=r(`Environment:
HF_MLFLOW_LOG_ARTIFACTS (`),jr=o("code"),cc=r("str"),fc=r(", "),Nr=o("em"),hc=r("optional"),dc=r(`):
Whether to use MLflow .log_artifact() facility to log artifacts.`),mc=c(),F=o("p"),pc=r("This only makes sense if logging to a remote server, e.g. s3 or GCS. If set to "),Wr=o("code"),gc=r("True"),_c=r(" or "),Br=o("em"),uc=r("1"),vc=r(`, will copy
whatever is in `),ja=o("a"),bc=r("TrainingArguments"),Ec=r("\u2019s "),zr=o("code"),kc=r("output_dir"),Tc=r(` to the local or remote artifact storage. Using it
without a remote storage will just copy the files to your artifact location.`),Fn=c(),de=o("div"),_(At.$$.fragment),$c=c(),Dt=o("p"),Cc=r("A "),Na=o("a"),wc=r("TrainerCallback"),yc=r(" that tracks the CO2 emission of training."),jn=c(),me=o("h2"),ye=o("a"),Vr=o("span"),_(St.$$.fragment),Ac=c(),qr=o("span"),Dc=r("TrainerCallback"),Nn=c(),p=o("div"),_(Lt.$$.fragment),Sc=c(),Rr=o("p"),Lc=r(`A class for objects that will inspect the state of the training loop at some events and take some decisions. At
each of those events the following arguments are available:`),Pc=c(),Pt=o("p"),Oc=r("The "),Hr=o("code"),Ic=r("control"),Mc=r(` object is the only one that can be changed by the callback, in which case the event that changes it
should return the modified version.`),xc=c(),P=o("p"),Fc=r("The argument "),Ur=o("code"),jc=r("args"),Nc=r(", "),Gr=o("code"),Wc=r("state"),Bc=r(" and "),Jr=o("code"),zc=r("control"),Vc=r(" are positionals for all events, all the others are grouped in "),Yr=o("code"),qc=r("kwargs"),Rc=r(`.
You can unpack the ones you need in the signature of the event using them. As an example, see the code of the
simple `),Xr=o("code"),Hc=r("PrinterCallback"),Uc=r("."),Gc=c(),Kr=o("p"),Jc=r("Example:"),Yc=c(),_(Ot.$$.fragment),Xc=c(),Ae=o("div"),_(It.$$.fragment),Kc=c(),Qr=o("p"),Qc=r("Event called at the beginning of an epoch."),Zc=c(),De=o("div"),_(Mt.$$.fragment),ef=c(),Zr=o("p"),tf=r("Event called at the end of an epoch."),af=c(),Se=o("div"),_(xt.$$.fragment),rf=c(),en=o("p"),nf=r("Event called after an evaluation phase."),of=c(),Le=o("div"),_(Ft.$$.fragment),sf=c(),jt=o("p"),lf=r("Event called at the end of the initialization of the "),Wa=o("a"),cf=r("Trainer"),ff=r("."),hf=c(),Pe=o("div"),_(Nt.$$.fragment),df=c(),tn=o("p"),mf=r("Event called after logging the last logs."),pf=c(),Oe=o("div"),_(Wt.$$.fragment),gf=c(),an=o("p"),_f=r("Event called after a prediction step."),uf=c(),Ie=o("div"),_(Bt.$$.fragment),vf=c(),rn=o("p"),bf=r("Event called after a checkpoint save."),Ef=c(),Me=o("div"),_(zt.$$.fragment),kf=c(),nn=o("p"),Tf=r(`Event called at the beginning of a training step. If using gradient accumulation, one training step might take
several inputs.`),$f=c(),xe=o("div"),_(Vt.$$.fragment),Cf=c(),on=o("p"),wf=r(`Event called at the end of a training step. If using gradient accumulation, one training step might take
several inputs.`),yf=c(),Fe=o("div"),_(qt.$$.fragment),Af=c(),sn=o("p"),Df=r("Event called at the end of an substep during gradient accumulation."),Sf=c(),je=o("div"),_(Rt.$$.fragment),Lf=c(),ln=o("p"),Pf=r("Event called at the beginning of training."),Of=c(),Ne=o("div"),_(Ht.$$.fragment),If=c(),cn=o("p"),Mf=r("Event called at the end of training."),Wn=c(),We=o("p"),xf=r("Here is an example of how to register a custom callback with the PyTorch "),Ba=o("a"),Ff=r("Trainer"),jf=r(":"),Bn=c(),_(Ut.$$.fragment),zn=c(),Be=o("p"),Nf=r("Another way to register a callback is to call "),fn=o("code"),Wf=r("trainer.add_callback()"),Bf=r(" as follows:"),Vn=c(),_(Gt.$$.fragment),qn=c(),pe=o("h2"),ze=o("a"),hn=o("span"),_(Jt.$$.fragment),zf=c(),dn=o("span"),Vf=r("TrainerState"),Rn=c(),O=o("div"),_(Yt.$$.fragment),qf=c(),ge=o("p"),Rf=r("A class containing the "),za=o("a"),Hf=r("Trainer"),Uf=r(` inner state that will be saved along the model and optimizer when checkpointing
and passed to the `),Va=o("a"),Gf=r("TrainerCallback"),Jf=r("."),Yf=c(),_(Ve.$$.fragment),Xf=c(),qe=o("div"),_(Xt.$$.fragment),Kf=c(),Kt=o("p"),Qf=r("Create an instance from the content of "),mn=o("code"),Zf=r("json_path"),eh=r("."),th=c(),Re=o("div"),_(Qt.$$.fragment),ah=c(),Zt=o("p"),rh=r("Save the content of this instance in JSON format inside "),pn=o("code"),nh=r("json_path"),oh=r("."),Hn=c(),_e=o("h2"),He=o("a"),gn=o("span"),_(ea.$$.fragment),sh=c(),_n=o("span"),lh=r("TrainerControl"),Un=c(),ue=o("div"),_(ta.$$.fragment),ih=c(),ve=o("p"),ch=r("A class that handles the "),qa=o("a"),fh=r("Trainer"),hh=r(" control flow. This class is used by the "),Ra=o("a"),dh=r("TrainerCallback"),mh=r(` to activate some
switches in the training loop.`),this.h()},l(a){const h=Mm('[data-svelte="svelte-1phssyn"]',document.head);w=s(h,"META",{name:!0,content:!0}),h.forEach(t),Y=f(a),A=s(a,"H1",{class:!0});var aa=l(A);L=s(aa,"A",{id:!0,class:!0,href:!0});var uh=l(L);Z=s(uh,"SPAN",{});var vh=l(Z);u(M.$$.fragment,vh),vh.forEach(t),uh.forEach(t),Ke=f(aa),ee=s(aa,"SPAN",{});var bh=l(ee);te=n(bh,"Callbacks"),bh.forEach(t),aa.forEach(t),x=f(a),q=s(a,"P",{});var Jn=l(q);na=n(Jn,`Callbacks are objects that can customize the behavior of the training loop in the PyTorch
`),oa=s(Jn,"A",{href:!0});var Eh=l(oa);Fo=n(Eh,"Trainer"),Eh.forEach(t),jo=n(Jn,` (this feature is not yet implemented in TensorFlow) that can inspect the training loop
state (for progress reporting, logging on TensorBoard or other ML platforms\u2026) and take decisions (like early
stopping).`),Jn.forEach(t),Tn=f(a),j=s(a,"P",{});var Ue=l(j);No=n(Ue,"Callbacks are \u201Cread only\u201D pieces of code, apart from the "),sa=s(Ue,"A",{href:!0});var kh=l(sa);Wo=n(kh,"TrainerControl"),kh.forEach(t),Bo=n(Ue,` object they return, they
cannot change anything in the training loop. For customizations that require changes in the training loop, you should
subclass `),la=s(Ue,"A",{href:!0});var Th=l(la);zo=n(Th,"Trainer"),Th.forEach(t),Vo=n(Ue," and override the methods you need (see "),ia=s(Ue,"A",{href:!0});var $h=l(ia);qo=n($h,"trainer"),$h.forEach(t),Ro=n(Ue," for examples)."),Ue.forEach(t),$n=f(a),be=s(a,"P",{});var Yn=l(be);Ho=n(Yn,"By default a "),ca=s(Yn,"A",{href:!0});var Ch=l(ca);Uo=n(Ch,"Trainer"),Ch.forEach(t),Go=n(Yn," will use the following callbacks:"),Yn.forEach(t),Cn=f(a),D=s(a,"UL",{});var I=l(D);fa=s(I,"LI",{});var ph=l(fa);ha=s(ph,"A",{href:!0});var wh=l(ha);Jo=n(wh,"DefaultFlowCallback"),wh.forEach(t),Yo=n(ph," which handles the default behavior for logging, saving and evaluation."),ph.forEach(t),Xo=f(I),X=s(I,"LI",{});var ra=l(X);da=s(ra,"A",{href:!0});var yh=l(da);Ko=n(yh,"PrinterCallback"),yh.forEach(t),Qo=n(ra," or "),ma=s(ra,"A",{href:!0});var Ah=l(ma);Zo=n(Ah,"ProgressCallback"),Ah.forEach(t),es=n(ra,` to display progress and print the
logs (the first one is used if you deactivate tqdm through the `),pa=s(ra,"A",{href:!0});var Dh=l(pa);ts=n(Dh,"TrainingArguments"),Dh.forEach(t),as=n(ra,`, otherwise
it\u2019s the second one).`),ra.forEach(t),rs=f(I),ga=s(I,"LI",{});var gh=l(ga);_a=s(gh,"A",{href:!0});var Sh=l(_a);ns=n(Sh,"TensorBoardCallback"),Sh.forEach(t),os=n(gh,` if tensorboard is accessible (either through PyTorch >= 1.4
or tensorboardX).`),gh.forEach(t),ss=f(I),Ee=s(I,"LI",{});var un=l(Ee);ua=s(un,"A",{href:!0});var Lh=l(ua);ls=n(Lh,"WandbCallback"),Lh.forEach(t),is=n(un," if "),Qe=s(un,"A",{href:!0,rel:!0});var Ph=l(Qe);cs=n(Ph,"wandb"),Ph.forEach(t),fs=n(un," is installed."),un.forEach(t),hs=f(I),ke=s(I,"LI",{});var vn=l(ke);va=s(vn,"A",{href:!0});var Oh=l(va);ds=n(Oh,"CometCallback"),Oh.forEach(t),ms=n(vn," if "),Ze=s(vn,"A",{href:!0,rel:!0});var Ih=l(Ze);ps=n(Ih,"comet_ml"),Ih.forEach(t),gs=n(vn," is installed."),vn.forEach(t),_s=f(I),Te=s(I,"LI",{});var bn=l(Te);ba=s(bn,"A",{href:!0});var Mh=l(ba);us=n(Mh,"MLflowCallback"),Mh.forEach(t),vs=n(bn," if "),et=s(bn,"A",{href:!0,rel:!0});var xh=l(et);bs=n(xh,"mlflow"),xh.forEach(t),Es=n(bn," is installed."),bn.forEach(t),ks=f(I),$e=s(I,"LI",{});var En=l($e);Ea=s(En,"A",{href:!0});var Fh=l(Ea);Ts=n(Fh,"CodeCarbonCallback"),Fh.forEach(t),$s=n(En," if "),tt=s(En,"A",{href:!0,rel:!0});var jh=l(tt);Cs=n(jh,"codecarbon"),jh.forEach(t),ws=n(En,` is
installed.`),En.forEach(t),I.forEach(t),wn=f(a),S=s(a,"P",{});var z=l(S);ys=n(z,"The main class that implements callbacks is "),ka=s(z,"A",{href:!0});var Nh=l(ka);As=n(Nh,"TrainerCallback"),Nh.forEach(t),Ds=n(z,`. It gets the
`),Ta=s(z,"A",{href:!0});var Wh=l(Ta);Ss=n(Wh,"TrainingArguments"),Wh.forEach(t),Ls=n(z," used to instantiate the "),$a=s(z,"A",{href:!0});var Bh=l($a);Ps=n(Bh,"Trainer"),Bh.forEach(t),Os=n(z,`, can access that
Trainer\u2019s internal state via `),Ca=s(z,"A",{href:!0});var zh=l(Ca);Is=n(zh,"TrainerState"),zh.forEach(t),Ms=n(z,`, and can take some actions on the training loop via
`),wa=s(z,"A",{href:!0});var Vh=l(wa);xs=n(Vh,"TrainerControl"),Vh.forEach(t),Fs=n(z,"."),z.forEach(t),yn=f(a),ae=s(a,"H2",{class:!0});var Xn=l(ae);Ce=s(Xn,"A",{id:!0,class:!0,href:!0});var qh=l(Ce);rr=s(qh,"SPAN",{});var Rh=l(rr);u(at.$$.fragment,Rh),Rh.forEach(t),qh.forEach(t),js=f(Xn),nr=s(Xn,"SPAN",{});var Hh=l(nr);Ns=n(Hh,"Available Callbacks"),Hh.forEach(t),Xn.forEach(t),An=f(a),we=s(a,"P",{});var Kn=l(we);Ws=n(Kn,"Here is the list of the available "),ya=s(Kn,"A",{href:!0});var Uh=l(ya);Bs=n(Uh,"TrainerCallback"),Uh.forEach(t),zs=n(Kn," in the library:"),Kn.forEach(t),Dn=f(a),R=s(a,"DIV",{class:!0});var Ha=l(R);u(rt.$$.fragment,Ha),Vs=f(Ha),re=s(Ha,"P",{});var Ua=l(re);qs=n(Ua,"A "),Aa=s(Ua,"A",{href:!0});var Gh=l(Aa);Rs=n(Gh,"TrainerCallback"),Gh.forEach(t),Hs=n(Ua," that sends the logs to "),nt=s(Ua,"A",{href:!0,rel:!0});var Jh=l(nt);Us=n(Jh,"Comet ML"),Jh.forEach(t),Gs=n(Ua,"."),Ua.forEach(t),Js=f(Ha),N=s(Ha,"DIV",{class:!0});var Ge=l(N);u(ot.$$.fragment,Ge),Ys=f(Ge),or=s(Ge,"P",{});var Yh=l(or);Xs=n(Yh,"Setup the optional Comet.ml integration."),Yh.forEach(t),Ks=f(Ge),C=s(Ge,"P",{});var y=l(C);Qs=n(y,`Environment:
COMET_MODE (`),sr=s(y,"CODE",{});var Xh=l(sr);Zs=n(Xh,"str"),Xh.forEach(t),el=n(y,", "),lr=s(y,"EM",{});var Kh=l(lr);tl=n(Kh,"optional"),Kh.forEach(t),al=n(y,`):
Whether to create an online, offline experiment or disable Comet logging. Can be \u201COFFLINE\u201D, \u201CONLINE\u201D,
or \u201CDISABLED\u201D. Defaults to \u201CONLINE\u201D.
COMET_PROJECT_NAME (`),ir=s(y,"CODE",{});var Qh=l(ir);rl=n(Qh,"str"),Qh.forEach(t),nl=n(y,", "),cr=s(y,"EM",{});var Zh=l(cr);ol=n(Zh,"optional"),Zh.forEach(t),sl=n(y,`):
Comet project name for experiments
COMET_OFFLINE_DIRECTORY (`),fr=s(y,"CODE",{});var ed=l(fr);ll=n(ed,"str"),ed.forEach(t),il=n(y,", "),hr=s(y,"EM",{});var td=l(hr);cl=n(td,"optional"),td.forEach(t),fl=n(y,`):
Folder to use for saving offline experiments when `),dr=s(y,"CODE",{});var ad=l(dr);hl=n(ad,"COMET_MODE"),ad.forEach(t),dl=n(y,` is \u201COFFLINE\u201D
COMET_LOG_ASSETS (`),mr=s(y,"CODE",{});var rd=l(mr);ml=n(rd,"str"),rd.forEach(t),pl=n(y,", "),pr=s(y,"EM",{});var nd=l(pr);gl=n(nd,"optional"),nd.forEach(t),_l=n(y,`):
Whether or not to log training assets (tf event logs, checkpoints, etc), to Comet. Can be \u201CTRUE\u201D, or
\u201CFALSE\u201D. Defaults to \u201CTRUE\u201D.`),y.forEach(t),ul=f(Ge),st=s(Ge,"P",{});var Qn=l(st);vl=n(Qn,`For a number of configurable items in the environment, see
`),lt=s(Qn,"A",{href:!0,rel:!0});var od=l(lt);bl=n(od,"here"),od.forEach(t),El=n(Qn,"."),Qn.forEach(t),Ge.forEach(t),Ha.forEach(t),Sn=f(a),ne=s(a,"DIV",{class:!0});var Zn=l(ne);u(it.$$.fragment,Zn),kl=f(Zn),ct=s(Zn,"P",{});var eo=l(ct);Tl=n(eo,"A "),Da=s(eo,"A",{href:!0});var sd=l(Da);$l=n(sd,"TrainerCallback"),sd.forEach(t),Cl=n(eo," that handles the default flow of the training loop for logs, evaluation and checkpoints."),eo.forEach(t),Zn.forEach(t),Ln=f(a),oe=s(a,"DIV",{class:!0});var to=l(oe);u(ft.$$.fragment,to),wl=f(to),ht=s(to,"P",{});var ao=l(ht);yl=n(ao,"A bare "),Sa=s(ao,"A",{href:!0});var ld=l(Sa);Al=n(ld,"TrainerCallback"),ld.forEach(t),Dl=n(ao," that just prints the logs."),ao.forEach(t),to.forEach(t),Pn=f(a),se=s(a,"DIV",{class:!0});var ro=l(se);u(dt.$$.fragment,ro),Sl=f(ro),mt=s(ro,"P",{});var no=l(mt);Ll=n(no,"A "),La=s(no,"A",{href:!0});var id=l(La);Pl=n(id,"TrainerCallback"),id.forEach(t),Ol=n(no," that displays the progress of training or evaluation."),no.forEach(t),ro.forEach(t),On=f(a),H=s(a,"DIV",{class:!0});var Ga=l(H);u(pt.$$.fragment,Ga),Il=f(Ga),gt=s(Ga,"P",{});var oo=l(gt);Ml=n(oo,"A "),Pa=s(oo,"A",{href:!0});var cd=l(Pa);xl=n(cd,"TrainerCallback"),cd.forEach(t),Fl=n(oo," that handles early stopping."),oo.forEach(t),jl=f(Ga),U=s(Ga,"P",{});var Je=l(U);Nl=n(Je,"This callback depends on "),Oa=s(Je,"A",{href:!0});var fd=l(Oa);Wl=n(fd,"TrainingArguments"),fd.forEach(t),Bl=n(Je," argument "),gr=s(Je,"EM",{});var hd=l(gr);zl=n(hd,"load_best_model_at_end"),hd.forEach(t),Vl=n(Je,` functionality to set best_metric
in `),Ia=s(Je,"A",{href:!0});var dd=l(Ia);ql=n(dd,"TrainerState"),dd.forEach(t),Rl=n(Je,"."),Je.forEach(t),Ga.forEach(t),In=f(a),le=s(a,"DIV",{class:!0});var so=l(le);u(_t.$$.fragment,so),Hl=f(so),ie=s(so,"P",{});var Ja=l(ie);Ul=n(Ja,"A "),Ma=s(Ja,"A",{href:!0});var md=l(Ma);Gl=n(md,"TrainerCallback"),md.forEach(t),Jl=n(Ja," that sends the logs to "),ut=s(Ja,"A",{href:!0,rel:!0});var pd=l(ut);Yl=n(pd,"TensorBoard"),pd.forEach(t),Xl=n(Ja,"."),Ja.forEach(t),so.forEach(t),Mn=f(a),G=s(a,"DIV",{class:!0});var Ya=l(G);u(vt.$$.fragment,Ya),Kl=f(Ya),ce=s(Ya,"P",{});var Xa=l(ce);Ql=n(Xa,"A "),xa=s(Xa,"A",{href:!0});var gd=l(xa);Zl=n(gd,"TrainerCallback"),gd.forEach(t),ei=n(Xa," that sends the logs to "),bt=s(Xa,"A",{href:!0,rel:!0});var _d=l(bt);ti=n(_d,"Weight and Biases"),_d.forEach(t),ai=n(Xa,"."),Xa.forEach(t),ri=f(Ya),W=s(Ya,"DIV",{class:!0});var Ye=l(W);u(Et.$$.fragment,Ye),ni=f(Ye),kt=s(Ye,"P",{});var lo=l(kt);oi=n(lo,"Setup the optional Weights & Biases ("),_r=s(lo,"EM",{});var ud=l(_r);si=n(ud,"wandb"),ud.forEach(t),li=n(lo,") integration."),lo.forEach(t),ii=f(Ye),Tt=s(Ye,"P",{});var io=l(Tt);ci=n(io,`One can subclass and override this method to customize the setup if needed. Find more information
`),$t=s(io,"A",{href:!0,rel:!0});var vd=l($t);fi=n(vd,"here"),vd.forEach(t),hi=n(io,`. You can also override the following environment
variables:`),io.forEach(t),di=f(Ye),m=s(Ye,"P",{});var g=l(m);mi=n(g,`Environment:
WANDB_LOG_MODEL (`),ur=s(g,"CODE",{});var bd=l(ur);pi=n(bd,"bool"),bd.forEach(t),gi=n(g,", "),vr=s(g,"EM",{});var Ed=l(vr);_i=n(Ed,"optional"),Ed.forEach(t),ui=n(g,", defaults to "),br=s(g,"CODE",{});var kd=l(br);vi=n(kd,"False"),kd.forEach(t),bi=n(g,`):
Whether or not to log model as artifact at the end of training. Use along with
`),Er=s(g,"EM",{});var Td=l(Er);Ei=n(Td,"TrainingArguments.load_best_model_at_end"),Td.forEach(t),ki=n(g,` to upload best model.
WANDB_WATCH (`),kr=s(g,"CODE",{});var $d=l(kr);Ti=n($d,"str"),$d.forEach(t),$i=n(g,", "),Tr=s(g,"EM",{});var Cd=l(Tr);Ci=n(Cd,"optional"),Cd.forEach(t),wi=n(g," defaults to "),$r=s(g,"CODE",{});var wd=l($r);yi=n(wd,'"gradients"'),wd.forEach(t),Ai=n(g,`):
Can be `),Cr=s(g,"CODE",{});var yd=l(Cr);Di=n(yd,'"gradients"'),yd.forEach(t),Si=n(g,", "),wr=s(g,"CODE",{});var Ad=l(wr);Li=n(Ad,'"all"'),Ad.forEach(t),Pi=n(g," or "),yr=s(g,"CODE",{});var Dd=l(yr);Oi=n(Dd,'"false"'),Dd.forEach(t),Ii=n(g,". Set to "),Ar=s(g,"CODE",{});var Sd=l(Ar);Mi=n(Sd,'"false"'),Sd.forEach(t),xi=n(g," to disable gradient logging or "),Dr=s(g,"CODE",{});var Ld=l(Dr);Fi=n(Ld,'"all"'),Ld.forEach(t),ji=n(g,` to
log gradients and parameters.
WANDB_PROJECT (`),Sr=s(g,"CODE",{});var Pd=l(Sr);Ni=n(Pd,"str"),Pd.forEach(t),Wi=n(g,", "),Lr=s(g,"EM",{});var Od=l(Lr);Bi=n(Od,"optional"),Od.forEach(t),zi=n(g,", defaults to "),Pr=s(g,"CODE",{});var Id=l(Pr);Vi=n(Id,'"huggingface"'),Id.forEach(t),qi=n(g,`):
Set this to a custom string to store results in a different project.
WANDB_DISABLED (`),Or=s(g,"CODE",{});var Md=l(Or);Ri=n(Md,"bool"),Md.forEach(t),Hi=n(g,", "),Ir=s(g,"EM",{});var xd=l(Ir);Ui=n(xd,"optional"),xd.forEach(t),Gi=n(g,", defaults to "),Mr=s(g,"CODE",{});var Fd=l(Mr);Ji=n(Fd,"False"),Fd.forEach(t),Yi=n(g,`):
Whether or not to disable wandb entirely. Set `),xr=s(g,"EM",{});var jd=l(xr);Xi=n(jd,"WANDB_DISABLED=true"),jd.forEach(t),Ki=n(g," to disable."),g.forEach(t),Ye.forEach(t),Ya.forEach(t),xn=f(a),J=s(a,"DIV",{class:!0});var Ka=l(J);u(Ct.$$.fragment,Ka),Qi=f(Ka),fe=s(Ka,"P",{});var Qa=l(fe);Zi=n(Qa,"A "),Fa=s(Qa,"A",{href:!0});var Nd=l(Fa);ec=n(Nd,"TrainerCallback"),Nd.forEach(t),tc=n(Qa," that sends the logs to "),wt=s(Qa,"A",{href:!0,rel:!0});var Wd=l(wt);ac=n(Wd,"MLflow"),Wd.forEach(t),rc=n(Qa,"."),Qa.forEach(t),nc=f(Ka),B=s(Ka,"DIV",{class:!0});var Xe=l(B);u(yt.$$.fragment,Xe),oc=f(Xe),Fr=s(Xe,"P",{});var Bd=l(Fr);sc=n(Bd,"Setup the optional MLflow integration."),Bd.forEach(t),lc=f(Xe),he=s(Xe,"P",{});var Za=l(he);ic=n(Za,`Environment:
HF_MLFLOW_LOG_ARTIFACTS (`),jr=s(Za,"CODE",{});var zd=l(jr);cc=n(zd,"str"),zd.forEach(t),fc=n(Za,", "),Nr=s(Za,"EM",{});var Vd=l(Nr);hc=n(Vd,"optional"),Vd.forEach(t),dc=n(Za,`):
Whether to use MLflow .log_artifact() facility to log artifacts.`),Za.forEach(t),mc=f(Xe),F=s(Xe,"P",{});var K=l(F);pc=n(K,"This only makes sense if logging to a remote server, e.g. s3 or GCS. If set to "),Wr=s(K,"CODE",{});var qd=l(Wr);gc=n(qd,"True"),qd.forEach(t),_c=n(K," or "),Br=s(K,"EM",{});var Rd=l(Br);uc=n(Rd,"1"),Rd.forEach(t),vc=n(K,`, will copy
whatever is in `),ja=s(K,"A",{href:!0});var Hd=l(ja);bc=n(Hd,"TrainingArguments"),Hd.forEach(t),Ec=n(K,"\u2019s "),zr=s(K,"CODE",{});var Ud=l(zr);kc=n(Ud,"output_dir"),Ud.forEach(t),Tc=n(K,` to the local or remote artifact storage. Using it
without a remote storage will just copy the files to your artifact location.`),K.forEach(t),Xe.forEach(t),Ka.forEach(t),Fn=f(a),de=s(a,"DIV",{class:!0});var co=l(de);u(At.$$.fragment,co),$c=f(co),Dt=s(co,"P",{});var fo=l(Dt);Cc=n(fo,"A "),Na=s(fo,"A",{href:!0});var Gd=l(Na);wc=n(Gd,"TrainerCallback"),Gd.forEach(t),yc=n(fo," that tracks the CO2 emission of training."),fo.forEach(t),co.forEach(t),jn=f(a),me=s(a,"H2",{class:!0});var ho=l(me);ye=s(ho,"A",{id:!0,class:!0,href:!0});var Jd=l(ye);Vr=s(Jd,"SPAN",{});var Yd=l(Vr);u(St.$$.fragment,Yd),Yd.forEach(t),Jd.forEach(t),Ac=f(ho),qr=s(ho,"SPAN",{});var Xd=l(qr);Dc=n(Xd,"TrainerCallback"),Xd.forEach(t),ho.forEach(t),Nn=f(a),p=s(a,"DIV",{class:!0});var T=l(p);u(Lt.$$.fragment,T),Sc=f(T),Rr=s(T,"P",{});var Kd=l(Rr);Lc=n(Kd,`A class for objects that will inspect the state of the training loop at some events and take some decisions. At
each of those events the following arguments are available:`),Kd.forEach(t),Pc=f(T),Pt=s(T,"P",{});var mo=l(Pt);Oc=n(mo,"The "),Hr=s(mo,"CODE",{});var Qd=l(Hr);Ic=n(Qd,"control"),Qd.forEach(t),Mc=n(mo,` object is the only one that can be changed by the callback, in which case the event that changes it
should return the modified version.`),mo.forEach(t),xc=f(T),P=s(T,"P",{});var V=l(P);Fc=n(V,"The argument "),Ur=s(V,"CODE",{});var Zd=l(Ur);jc=n(Zd,"args"),Zd.forEach(t),Nc=n(V,", "),Gr=s(V,"CODE",{});var em=l(Gr);Wc=n(em,"state"),em.forEach(t),Bc=n(V," and "),Jr=s(V,"CODE",{});var tm=l(Jr);zc=n(tm,"control"),tm.forEach(t),Vc=n(V," are positionals for all events, all the others are grouped in "),Yr=s(V,"CODE",{});var am=l(Yr);qc=n(am,"kwargs"),am.forEach(t),Rc=n(V,`.
You can unpack the ones you need in the signature of the event using them. As an example, see the code of the
simple `),Xr=s(V,"CODE",{});var rm=l(Xr);Hc=n(rm,"PrinterCallback"),rm.forEach(t),Uc=n(V,"."),V.forEach(t),Gc=f(T),Kr=s(T,"P",{});var nm=l(Kr);Jc=n(nm,"Example:"),nm.forEach(t),Yc=f(T),u(Ot.$$.fragment,T),Xc=f(T),Ae=s(T,"DIV",{class:!0});var po=l(Ae);u(It.$$.fragment,po),Kc=f(po),Qr=s(po,"P",{});var om=l(Qr);Qc=n(om,"Event called at the beginning of an epoch."),om.forEach(t),po.forEach(t),Zc=f(T),De=s(T,"DIV",{class:!0});var go=l(De);u(Mt.$$.fragment,go),ef=f(go),Zr=s(go,"P",{});var sm=l(Zr);tf=n(sm,"Event called at the end of an epoch."),sm.forEach(t),go.forEach(t),af=f(T),Se=s(T,"DIV",{class:!0});var _o=l(Se);u(xt.$$.fragment,_o),rf=f(_o),en=s(_o,"P",{});var lm=l(en);nf=n(lm,"Event called after an evaluation phase."),lm.forEach(t),_o.forEach(t),of=f(T),Le=s(T,"DIV",{class:!0});var uo=l(Le);u(Ft.$$.fragment,uo),sf=f(uo),jt=s(uo,"P",{});var vo=l(jt);lf=n(vo,"Event called at the end of the initialization of the "),Wa=s(vo,"A",{href:!0});var im=l(Wa);cf=n(im,"Trainer"),im.forEach(t),ff=n(vo,"."),vo.forEach(t),uo.forEach(t),hf=f(T),Pe=s(T,"DIV",{class:!0});var bo=l(Pe);u(Nt.$$.fragment,bo),df=f(bo),tn=s(bo,"P",{});var cm=l(tn);mf=n(cm,"Event called after logging the last logs."),cm.forEach(t),bo.forEach(t),pf=f(T),Oe=s(T,"DIV",{class:!0});var Eo=l(Oe);u(Wt.$$.fragment,Eo),gf=f(Eo),an=s(Eo,"P",{});var fm=l(an);_f=n(fm,"Event called after a prediction step."),fm.forEach(t),Eo.forEach(t),uf=f(T),Ie=s(T,"DIV",{class:!0});var ko=l(Ie);u(Bt.$$.fragment,ko),vf=f(ko),rn=s(ko,"P",{});var hm=l(rn);bf=n(hm,"Event called after a checkpoint save."),hm.forEach(t),ko.forEach(t),Ef=f(T),Me=s(T,"DIV",{class:!0});var To=l(Me);u(zt.$$.fragment,To),kf=f(To),nn=s(To,"P",{});var dm=l(nn);Tf=n(dm,`Event called at the beginning of a training step. If using gradient accumulation, one training step might take
several inputs.`),dm.forEach(t),To.forEach(t),$f=f(T),xe=s(T,"DIV",{class:!0});var $o=l(xe);u(Vt.$$.fragment,$o),Cf=f($o),on=s($o,"P",{});var mm=l(on);wf=n(mm,`Event called at the end of a training step. If using gradient accumulation, one training step might take
several inputs.`),mm.forEach(t),$o.forEach(t),yf=f(T),Fe=s(T,"DIV",{class:!0});var Co=l(Fe);u(qt.$$.fragment,Co),Af=f(Co),sn=s(Co,"P",{});var pm=l(sn);Df=n(pm,"Event called at the end of an substep during gradient accumulation."),pm.forEach(t),Co.forEach(t),Sf=f(T),je=s(T,"DIV",{class:!0});var wo=l(je);u(Rt.$$.fragment,wo),Lf=f(wo),ln=s(wo,"P",{});var gm=l(ln);Pf=n(gm,"Event called at the beginning of training."),gm.forEach(t),wo.forEach(t),Of=f(T),Ne=s(T,"DIV",{class:!0});var yo=l(Ne);u(Ht.$$.fragment,yo),If=f(yo),cn=s(yo,"P",{});var _m=l(cn);Mf=n(_m,"Event called at the end of training."),_m.forEach(t),yo.forEach(t),T.forEach(t),Wn=f(a),We=s(a,"P",{});var Ao=l(We);xf=n(Ao,"Here is an example of how to register a custom callback with the PyTorch "),Ba=s(Ao,"A",{href:!0});var um=l(Ba);Ff=n(um,"Trainer"),um.forEach(t),jf=n(Ao,":"),Ao.forEach(t),Bn=f(a),u(Ut.$$.fragment,a),zn=f(a),Be=s(a,"P",{});var Do=l(Be);Nf=n(Do,"Another way to register a callback is to call "),fn=s(Do,"CODE",{});var vm=l(fn);Wf=n(vm,"trainer.add_callback()"),vm.forEach(t),Bf=n(Do," as follows:"),Do.forEach(t),Vn=f(a),u(Gt.$$.fragment,a),qn=f(a),pe=s(a,"H2",{class:!0});var So=l(pe);ze=s(So,"A",{id:!0,class:!0,href:!0});var bm=l(ze);hn=s(bm,"SPAN",{});var Em=l(hn);u(Jt.$$.fragment,Em),Em.forEach(t),bm.forEach(t),zf=f(So),dn=s(So,"SPAN",{});var km=l(dn);Vf=n(km,"TrainerState"),km.forEach(t),So.forEach(t),Rn=f(a),O=s(a,"DIV",{class:!0});var Q=l(O);u(Yt.$$.fragment,Q),qf=f(Q),ge=s(Q,"P",{});var er=l(ge);Rf=n(er,"A class containing the "),za=s(er,"A",{href:!0});var Tm=l(za);Hf=n(Tm,"Trainer"),Tm.forEach(t),Uf=n(er,` inner state that will be saved along the model and optimizer when checkpointing
and passed to the `),Va=s(er,"A",{href:!0});var $m=l(Va);Gf=n($m,"TrainerCallback"),$m.forEach(t),Jf=n(er,"."),er.forEach(t),Yf=f(Q),u(Ve.$$.fragment,Q),Xf=f(Q),qe=s(Q,"DIV",{class:!0});var Lo=l(qe);u(Xt.$$.fragment,Lo),Kf=f(Lo),Kt=s(Lo,"P",{});var Po=l(Kt);Qf=n(Po,"Create an instance from the content of "),mn=s(Po,"CODE",{});var Cm=l(mn);Zf=n(Cm,"json_path"),Cm.forEach(t),eh=n(Po,"."),Po.forEach(t),Lo.forEach(t),th=f(Q),Re=s(Q,"DIV",{class:!0});var Oo=l(Re);u(Qt.$$.fragment,Oo),ah=f(Oo),Zt=s(Oo,"P",{});var Io=l(Zt);rh=n(Io,"Save the content of this instance in JSON format inside "),pn=s(Io,"CODE",{});var wm=l(pn);nh=n(wm,"json_path"),wm.forEach(t),oh=n(Io,"."),Io.forEach(t),Oo.forEach(t),Q.forEach(t),Hn=f(a),_e=s(a,"H2",{class:!0});var Mo=l(_e);He=s(Mo,"A",{id:!0,class:!0,href:!0});var ym=l(He);gn=s(ym,"SPAN",{});var Am=l(gn);u(ea.$$.fragment,Am),Am.forEach(t),ym.forEach(t),sh=f(Mo),_n=s(Mo,"SPAN",{});var Dm=l(_n);lh=n(Dm,"TrainerControl"),Dm.forEach(t),Mo.forEach(t),Un=f(a),ue=s(a,"DIV",{class:!0});var xo=l(ue);u(ta.$$.fragment,xo),ih=f(xo),ve=s(xo,"P",{});var tr=l(ve);ch=n(tr,"A class that handles the "),qa=s(tr,"A",{href:!0});var Sm=l(qa);fh=n(Sm,"Trainer"),Sm.forEach(t),hh=n(tr," control flow. This class is used by the "),Ra=s(tr,"A",{href:!0});var Lm=l(Ra);dh=n(Lm,"TrainerCallback"),Lm.forEach(t),mh=n(tr,` to activate some
switches in the training loop.`),tr.forEach(t),xo.forEach(t),this.h()},h(){i(w,"name","hf:doc:metadata"),i(w,"content",JSON.stringify(Nm)),i(L,"id","callbacks"),i(L,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(L,"href","#callbacks"),i(A,"class","relative group"),i(oa,"href","/docs/transformers/pr_16000/en/main_classes/trainer#transformers.Trainer"),i(sa,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerControl"),i(la,"href","/docs/transformers/pr_16000/en/main_classes/trainer#transformers.Trainer"),i(ia,"href","trainer"),i(ca,"href","/docs/transformers/pr_16000/en/main_classes/trainer#transformers.Trainer"),i(ha,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.DefaultFlowCallback"),i(da,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.PrinterCallback"),i(ma,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.ProgressCallback"),i(pa,"href","/docs/transformers/pr_16000/en/main_classes/trainer#transformers.TrainingArguments"),i(_a,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.integrations.TensorBoardCallback"),i(ua,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.integrations.WandbCallback"),i(Qe,"href","https://www.wandb.com/"),i(Qe,"rel","nofollow"),i(va,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.integrations.CometCallback"),i(Ze,"href","https://www.comet.ml/site/"),i(Ze,"rel","nofollow"),i(ba,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.integrations.MLflowCallback"),i(et,"href","https://www.mlflow.org/"),i(et,"rel","nofollow"),i(Ea,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.integrations.CodeCarbonCallback"),i(tt,"href","https://pypi.org/project/codecarbon/"),i(tt,"rel","nofollow"),i(ka,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerCallback"),i(Ta,"href","/docs/transformers/pr_16000/en/main_classes/trainer#transformers.TrainingArguments"),i($a,"href","/docs/transformers/pr_16000/en/main_classes/trainer#transformers.Trainer"),i(Ca,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerState"),i(wa,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerControl"),i(Ce,"id","transformers.integrations.CometCallback"),i(Ce,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Ce,"href","#transformers.integrations.CometCallback"),i(ae,"class","relative group"),i(ya,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerCallback"),i(Aa,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerCallback"),i(nt,"href","https://www.comet.ml/site/"),i(nt,"rel","nofollow"),i(lt,"href","https://www.comet.ml/docs/python-sdk/advanced/#comet-configuration-variables"),i(lt,"rel","nofollow"),i(N,"class","docstring"),i(R,"class","docstring"),i(Da,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerCallback"),i(ne,"class","docstring"),i(Sa,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerCallback"),i(oe,"class","docstring"),i(La,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerCallback"),i(se,"class","docstring"),i(Pa,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerCallback"),i(Oa,"href","/docs/transformers/pr_16000/en/main_classes/trainer#transformers.TrainingArguments"),i(Ia,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerState"),i(H,"class","docstring"),i(Ma,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerCallback"),i(ut,"href","https://www.tensorflow.org/tensorboard"),i(ut,"rel","nofollow"),i(le,"class","docstring"),i(xa,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerCallback"),i(bt,"href","https://www.wandb.com/"),i(bt,"rel","nofollow"),i($t,"href","https://docs.wandb.ai/integrations/huggingface"),i($t,"rel","nofollow"),i(W,"class","docstring"),i(G,"class","docstring"),i(Fa,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerCallback"),i(wt,"href","https://www.mlflow.org/"),i(wt,"rel","nofollow"),i(ja,"href","/docs/transformers/pr_16000/en/main_classes/trainer#transformers.TrainingArguments"),i(B,"class","docstring"),i(J,"class","docstring"),i(Na,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerCallback"),i(de,"class","docstring"),i(ye,"id","transformers.TrainerCallback"),i(ye,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(ye,"href","#transformers.TrainerCallback"),i(me,"class","relative group"),i(Ae,"class","docstring"),i(De,"class","docstring"),i(Se,"class","docstring"),i(Wa,"href","/docs/transformers/pr_16000/en/main_classes/trainer#transformers.Trainer"),i(Le,"class","docstring"),i(Pe,"class","docstring"),i(Oe,"class","docstring"),i(Ie,"class","docstring"),i(Me,"class","docstring"),i(xe,"class","docstring"),i(Fe,"class","docstring"),i(je,"class","docstring"),i(Ne,"class","docstring"),i(p,"class","docstring"),i(Ba,"href","/docs/transformers/pr_16000/en/main_classes/trainer#transformers.Trainer"),i(ze,"id","transformers.TrainerState"),i(ze,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(ze,"href","#transformers.TrainerState"),i(pe,"class","relative group"),i(za,"href","/docs/transformers/pr_16000/en/main_classes/trainer#transformers.Trainer"),i(Va,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerCallback"),i(qe,"class","docstring"),i(Re,"class","docstring"),i(O,"class","docstring"),i(He,"id","transformers.TrainerControl"),i(He,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(He,"href","#transformers.TrainerControl"),i(_e,"class","relative group"),i(qa,"href","/docs/transformers/pr_16000/en/main_classes/trainer#transformers.Trainer"),i(Ra,"href","/docs/transformers/pr_16000/en/main_classes/callback#transformers.TrainerCallback"),i(ue,"class","docstring")},m(a,h){e(document.head,w),d(a,Y,h),d(a,A,h),e(A,L),e(L,Z),v(M,Z,null),e(A,Ke),e(A,ee),e(ee,te),d(a,x,h),d(a,q,h),e(q,na),e(q,oa),e(oa,Fo),e(q,jo),d(a,Tn,h),d(a,j,h),e(j,No),e(j,sa),e(sa,Wo),e(j,Bo),e(j,la),e(la,zo),e(j,Vo),e(j,ia),e(ia,qo),e(j,Ro),d(a,$n,h),d(a,be,h),e(be,Ho),e(be,ca),e(ca,Uo),e(be,Go),d(a,Cn,h),d(a,D,h),e(D,fa),e(fa,ha),e(ha,Jo),e(fa,Yo),e(D,Xo),e(D,X),e(X,da),e(da,Ko),e(X,Qo),e(X,ma),e(ma,Zo),e(X,es),e(X,pa),e(pa,ts),e(X,as),e(D,rs),e(D,ga),e(ga,_a),e(_a,ns),e(ga,os),e(D,ss),e(D,Ee),e(Ee,ua),e(ua,ls),e(Ee,is),e(Ee,Qe),e(Qe,cs),e(Ee,fs),e(D,hs),e(D,ke),e(ke,va),e(va,ds),e(ke,ms),e(ke,Ze),e(Ze,ps),e(ke,gs),e(D,_s),e(D,Te),e(Te,ba),e(ba,us),e(Te,vs),e(Te,et),e(et,bs),e(Te,Es),e(D,ks),e(D,$e),e($e,Ea),e(Ea,Ts),e($e,$s),e($e,tt),e(tt,Cs),e($e,ws),d(a,wn,h),d(a,S,h),e(S,ys),e(S,ka),e(ka,As),e(S,Ds),e(S,Ta),e(Ta,Ss),e(S,Ls),e(S,$a),e($a,Ps),e(S,Os),e(S,Ca),e(Ca,Is),e(S,Ms),e(S,wa),e(wa,xs),e(S,Fs),d(a,yn,h),d(a,ae,h),e(ae,Ce),e(Ce,rr),v(at,rr,null),e(ae,js),e(ae,nr),e(nr,Ns),d(a,An,h),d(a,we,h),e(we,Ws),e(we,ya),e(ya,Bs),e(we,zs),d(a,Dn,h),d(a,R,h),v(rt,R,null),e(R,Vs),e(R,re),e(re,qs),e(re,Aa),e(Aa,Rs),e(re,Hs),e(re,nt),e(nt,Us),e(re,Gs),e(R,Js),e(R,N),v(ot,N,null),e(N,Ys),e(N,or),e(or,Xs),e(N,Ks),e(N,C),e(C,Qs),e(C,sr),e(sr,Zs),e(C,el),e(C,lr),e(lr,tl),e(C,al),e(C,ir),e(ir,rl),e(C,nl),e(C,cr),e(cr,ol),e(C,sl),e(C,fr),e(fr,ll),e(C,il),e(C,hr),e(hr,cl),e(C,fl),e(C,dr),e(dr,hl),e(C,dl),e(C,mr),e(mr,ml),e(C,pl),e(C,pr),e(pr,gl),e(C,_l),e(N,ul),e(N,st),e(st,vl),e(st,lt),e(lt,bl),e(st,El),d(a,Sn,h),d(a,ne,h),v(it,ne,null),e(ne,kl),e(ne,ct),e(ct,Tl),e(ct,Da),e(Da,$l),e(ct,Cl),d(a,Ln,h),d(a,oe,h),v(ft,oe,null),e(oe,wl),e(oe,ht),e(ht,yl),e(ht,Sa),e(Sa,Al),e(ht,Dl),d(a,Pn,h),d(a,se,h),v(dt,se,null),e(se,Sl),e(se,mt),e(mt,Ll),e(mt,La),e(La,Pl),e(mt,Ol),d(a,On,h),d(a,H,h),v(pt,H,null),e(H,Il),e(H,gt),e(gt,Ml),e(gt,Pa),e(Pa,xl),e(gt,Fl),e(H,jl),e(H,U),e(U,Nl),e(U,Oa),e(Oa,Wl),e(U,Bl),e(U,gr),e(gr,zl),e(U,Vl),e(U,Ia),e(Ia,ql),e(U,Rl),d(a,In,h),d(a,le,h),v(_t,le,null),e(le,Hl),e(le,ie),e(ie,Ul),e(ie,Ma),e(Ma,Gl),e(ie,Jl),e(ie,ut),e(ut,Yl),e(ie,Xl),d(a,Mn,h),d(a,G,h),v(vt,G,null),e(G,Kl),e(G,ce),e(ce,Ql),e(ce,xa),e(xa,Zl),e(ce,ei),e(ce,bt),e(bt,ti),e(ce,ai),e(G,ri),e(G,W),v(Et,W,null),e(W,ni),e(W,kt),e(kt,oi),e(kt,_r),e(_r,si),e(kt,li),e(W,ii),e(W,Tt),e(Tt,ci),e(Tt,$t),e($t,fi),e(Tt,hi),e(W,di),e(W,m),e(m,mi),e(m,ur),e(ur,pi),e(m,gi),e(m,vr),e(vr,_i),e(m,ui),e(m,br),e(br,vi),e(m,bi),e(m,Er),e(Er,Ei),e(m,ki),e(m,kr),e(kr,Ti),e(m,$i),e(m,Tr),e(Tr,Ci),e(m,wi),e(m,$r),e($r,yi),e(m,Ai),e(m,Cr),e(Cr,Di),e(m,Si),e(m,wr),e(wr,Li),e(m,Pi),e(m,yr),e(yr,Oi),e(m,Ii),e(m,Ar),e(Ar,Mi),e(m,xi),e(m,Dr),e(Dr,Fi),e(m,ji),e(m,Sr),e(Sr,Ni),e(m,Wi),e(m,Lr),e(Lr,Bi),e(m,zi),e(m,Pr),e(Pr,Vi),e(m,qi),e(m,Or),e(Or,Ri),e(m,Hi),e(m,Ir),e(Ir,Ui),e(m,Gi),e(m,Mr),e(Mr,Ji),e(m,Yi),e(m,xr),e(xr,Xi),e(m,Ki),d(a,xn,h),d(a,J,h),v(Ct,J,null),e(J,Qi),e(J,fe),e(fe,Zi),e(fe,Fa),e(Fa,ec),e(fe,tc),e(fe,wt),e(wt,ac),e(fe,rc),e(J,nc),e(J,B),v(yt,B,null),e(B,oc),e(B,Fr),e(Fr,sc),e(B,lc),e(B,he),e(he,ic),e(he,jr),e(jr,cc),e(he,fc),e(he,Nr),e(Nr,hc),e(he,dc),e(B,mc),e(B,F),e(F,pc),e(F,Wr),e(Wr,gc),e(F,_c),e(F,Br),e(Br,uc),e(F,vc),e(F,ja),e(ja,bc),e(F,Ec),e(F,zr),e(zr,kc),e(F,Tc),d(a,Fn,h),d(a,de,h),v(At,de,null),e(de,$c),e(de,Dt),e(Dt,Cc),e(Dt,Na),e(Na,wc),e(Dt,yc),d(a,jn,h),d(a,me,h),e(me,ye),e(ye,Vr),v(St,Vr,null),e(me,Ac),e(me,qr),e(qr,Dc),d(a,Nn,h),d(a,p,h),v(Lt,p,null),e(p,Sc),e(p,Rr),e(Rr,Lc),e(p,Pc),e(p,Pt),e(Pt,Oc),e(Pt,Hr),e(Hr,Ic),e(Pt,Mc),e(p,xc),e(p,P),e(P,Fc),e(P,Ur),e(Ur,jc),e(P,Nc),e(P,Gr),e(Gr,Wc),e(P,Bc),e(P,Jr),e(Jr,zc),e(P,Vc),e(P,Yr),e(Yr,qc),e(P,Rc),e(P,Xr),e(Xr,Hc),e(P,Uc),e(p,Gc),e(p,Kr),e(Kr,Jc),e(p,Yc),v(Ot,p,null),e(p,Xc),e(p,Ae),v(It,Ae,null),e(Ae,Kc),e(Ae,Qr),e(Qr,Qc),e(p,Zc),e(p,De),v(Mt,De,null),e(De,ef),e(De,Zr),e(Zr,tf),e(p,af),e(p,Se),v(xt,Se,null),e(Se,rf),e(Se,en),e(en,nf),e(p,of),e(p,Le),v(Ft,Le,null),e(Le,sf),e(Le,jt),e(jt,lf),e(jt,Wa),e(Wa,cf),e(jt,ff),e(p,hf),e(p,Pe),v(Nt,Pe,null),e(Pe,df),e(Pe,tn),e(tn,mf),e(p,pf),e(p,Oe),v(Wt,Oe,null),e(Oe,gf),e(Oe,an),e(an,_f),e(p,uf),e(p,Ie),v(Bt,Ie,null),e(Ie,vf),e(Ie,rn),e(rn,bf),e(p,Ef),e(p,Me),v(zt,Me,null),e(Me,kf),e(Me,nn),e(nn,Tf),e(p,$f),e(p,xe),v(Vt,xe,null),e(xe,Cf),e(xe,on),e(on,wf),e(p,yf),e(p,Fe),v(qt,Fe,null),e(Fe,Af),e(Fe,sn),e(sn,Df),e(p,Sf),e(p,je),v(Rt,je,null),e(je,Lf),e(je,ln),e(ln,Pf),e(p,Of),e(p,Ne),v(Ht,Ne,null),e(Ne,If),e(Ne,cn),e(cn,Mf),d(a,Wn,h),d(a,We,h),e(We,xf),e(We,Ba),e(Ba,Ff),e(We,jf),d(a,Bn,h),v(Ut,a,h),d(a,zn,h),d(a,Be,h),e(Be,Nf),e(Be,fn),e(fn,Wf),e(Be,Bf),d(a,Vn,h),v(Gt,a,h),d(a,qn,h),d(a,pe,h),e(pe,ze),e(ze,hn),v(Jt,hn,null),e(pe,zf),e(pe,dn),e(dn,Vf),d(a,Rn,h),d(a,O,h),v(Yt,O,null),e(O,qf),e(O,ge),e(ge,Rf),e(ge,za),e(za,Hf),e(ge,Uf),e(ge,Va),e(Va,Gf),e(ge,Jf),e(O,Yf),v(Ve,O,null),e(O,Xf),e(O,qe),v(Xt,qe,null),e(qe,Kf),e(qe,Kt),e(Kt,Qf),e(Kt,mn),e(mn,Zf),e(Kt,eh),e(O,th),e(O,Re),v(Qt,Re,null),e(Re,ah),e(Re,Zt),e(Zt,rh),e(Zt,pn),e(pn,nh),e(Zt,oh),d(a,Hn,h),d(a,_e,h),e(_e,He),e(He,gn),v(ea,gn,null),e(_e,sh),e(_e,_n),e(_n,lh),d(a,Un,h),d(a,ue,h),v(ta,ue,null),e(ue,ih),e(ue,ve),e(ve,ch),e(ve,qa),e(qa,fh),e(ve,hh),e(ve,Ra),e(Ra,dh),e(ve,mh),Gn=!0},p(a,[h]){const aa={};h&2&&(aa.$$scope={dirty:h,ctx:a}),Ve.$set(aa)},i(a){Gn||(b(M.$$.fragment,a),b(at.$$.fragment,a),b(rt.$$.fragment,a),b(ot.$$.fragment,a),b(it.$$.fragment,a),b(ft.$$.fragment,a),b(dt.$$.fragment,a),b(pt.$$.fragment,a),b(_t.$$.fragment,a),b(vt.$$.fragment,a),b(Et.$$.fragment,a),b(Ct.$$.fragment,a),b(yt.$$.fragment,a),b(At.$$.fragment,a),b(St.$$.fragment,a),b(Lt.$$.fragment,a),b(Ot.$$.fragment,a),b(It.$$.fragment,a),b(Mt.$$.fragment,a),b(xt.$$.fragment,a),b(Ft.$$.fragment,a),b(Nt.$$.fragment,a),b(Wt.$$.fragment,a),b(Bt.$$.fragment,a),b(zt.$$.fragment,a),b(Vt.$$.fragment,a),b(qt.$$.fragment,a),b(Rt.$$.fragment,a),b(Ht.$$.fragment,a),b(Ut.$$.fragment,a),b(Gt.$$.fragment,a),b(Jt.$$.fragment,a),b(Yt.$$.fragment,a),b(Ve.$$.fragment,a),b(Xt.$$.fragment,a),b(Qt.$$.fragment,a),b(ea.$$.fragment,a),b(ta.$$.fragment,a),Gn=!0)},o(a){E(M.$$.fragment,a),E(at.$$.fragment,a),E(rt.$$.fragment,a),E(ot.$$.fragment,a),E(it.$$.fragment,a),E(ft.$$.fragment,a),E(dt.$$.fragment,a),E(pt.$$.fragment,a),E(_t.$$.fragment,a),E(vt.$$.fragment,a),E(Et.$$.fragment,a),E(Ct.$$.fragment,a),E(yt.$$.fragment,a),E(At.$$.fragment,a),E(St.$$.fragment,a),E(Lt.$$.fragment,a),E(Ot.$$.fragment,a),E(It.$$.fragment,a),E(Mt.$$.fragment,a),E(xt.$$.fragment,a),E(Ft.$$.fragment,a),E(Nt.$$.fragment,a),E(Wt.$$.fragment,a),E(Bt.$$.fragment,a),E(zt.$$.fragment,a),E(Vt.$$.fragment,a),E(qt.$$.fragment,a),E(Rt.$$.fragment,a),E(Ht.$$.fragment,a),E(Ut.$$.fragment,a),E(Gt.$$.fragment,a),E(Jt.$$.fragment,a),E(Yt.$$.fragment,a),E(Ve.$$.fragment,a),E(Xt.$$.fragment,a),E(Qt.$$.fragment,a),E(ea.$$.fragment,a),E(ta.$$.fragment,a),Gn=!1},d(a){t(w),a&&t(Y),a&&t(A),k(M),a&&t(x),a&&t(q),a&&t(Tn),a&&t(j),a&&t($n),a&&t(be),a&&t(Cn),a&&t(D),a&&t(wn),a&&t(S),a&&t(yn),a&&t(ae),k(at),a&&t(An),a&&t(we),a&&t(Dn),a&&t(R),k(rt),k(ot),a&&t(Sn),a&&t(ne),k(it),a&&t(Ln),a&&t(oe),k(ft),a&&t(Pn),a&&t(se),k(dt),a&&t(On),a&&t(H),k(pt),a&&t(In),a&&t(le),k(_t),a&&t(Mn),a&&t(G),k(vt),k(Et),a&&t(xn),a&&t(J),k(Ct),k(yt),a&&t(Fn),a&&t(de),k(At),a&&t(jn),a&&t(me),k(St),a&&t(Nn),a&&t(p),k(Lt),k(Ot),k(It),k(Mt),k(xt),k(Ft),k(Nt),k(Wt),k(Bt),k(zt),k(Vt),k(qt),k(Rt),k(Ht),a&&t(Wn),a&&t(We),a&&t(Bn),k(Ut,a),a&&t(zn),a&&t(Be),a&&t(Vn),k(Gt,a),a&&t(qn),a&&t(pe),k(Jt),a&&t(Rn),a&&t(O),k(Yt),k(Ve),k(Xt),k(Qt),a&&t(Hn),a&&t(_e),k(ea),a&&t(Un),a&&t(ue),k(ta)}}}const Nm={local:"callbacks",sections:[{local:"transformers.integrations.CometCallback",title:"Available Callbacks"},{local:"transformers.TrainerCallback",title:"TrainerCallback"},{local:"transformers.TrainerState",title:"TrainerState"},{local:"transformers.TrainerControl",title:"TrainerControl"}],title:"Callbacks"};function Wm(ar,w,Y){let{fw:A}=w;return ar.$$set=L=>{"fw"in L&&Y(0,A=L.fw)},[A]}class Um extends Pm{constructor(w){super();Om(this,w,Wm,jm,Im,{fw:0})}}export{Um as default,Nm as metadata};
