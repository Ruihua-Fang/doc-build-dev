import{S as Zl,i as en,s as rn,e as l,k as g,w as c,t as o,M as tn,c as n,d as t,m as f,a,x as u,h as s,b as d,F as r,g as m,y as h,q as v,o as _,B as b,v as on}from"../../chunks/vendor-6b77c823.js";import{T as sn}from"../../chunks/Tip-39098574.js";import{D as C}from"../../chunks/Docstring-17b815d9.js";import{C as Ir}from"../../chunks/CodeBlock-3a8b25a8.js";import{I as Ks}from"../../chunks/IconCopyLink-7a11ce68.js";function ln(ct){let y,be,O,p,A,G,Z,ee,Le,U,Y,Fe,M,L,re,te,xe,F,Ee,x,Pe,$e,T,ye,E,z,oe,se,ke,le,J,Ve,W,Ge;return{c(){y=l("p"),be=o("\u{1F917} Transformers has following logging levels:"),O=g(),p=l("ul"),A=l("li"),G=o("50: "),Z=l("code"),ee=o("transformers.logging.CRITICAL"),Le=o(" or "),U=l("code"),Y=o("transformers.logging.FATAL"),Fe=g(),M=l("li"),L=o("40: "),re=l("code"),te=o("transformers.logging.ERROR"),xe=g(),F=l("li"),Ee=o("30: "),x=l("code"),Pe=o("transformers.logging.WARNING"),$e=o(" or "),T=l("code"),ye=o("transformers.logging.WARN"),E=g(),z=l("li"),oe=o("20: "),se=l("code"),ke=o("transformers.logging.INFO"),le=g(),J=l("li"),Ve=o("10: "),W=l("code"),Ge=o("transformers.logging.DEBUG")},l(R){y=n(R,"P",{});var P=a(y);be=s(P,"\u{1F917} Transformers has following logging levels:"),P.forEach(t),O=f(R),p=n(R,"UL",{});var I=a(p);A=n(I,"LI",{});var ne=a(A);G=s(ne,"50: "),Z=n(ne,"CODE",{});var we=a(Z);ee=s(we,"transformers.logging.CRITICAL"),we.forEach(t),Le=s(ne," or "),U=n(ne,"CODE",{});var pr=a(U);Y=s(pr,"transformers.logging.FATAL"),pr.forEach(t),ne.forEach(t),Fe=f(I),M=n(I,"LI",{});var Me=a(M);L=s(Me,"40: "),re=n(Me,"CODE",{});var Re=a(re);te=s(Re,"transformers.logging.ERROR"),Re.forEach(t),Me.forEach(t),xe=f(I),F=n(I,"LI",{});var ae=a(F);Ee=s(ae,"30: "),x=n(ae,"CODE",{});var cr=a(x);Pe=s(cr,"transformers.logging.WARNING"),cr.forEach(t),$e=s(ae," or "),T=n(ae,"CODE",{});var We=a(T);ye=s(We,"transformers.logging.WARN"),We.forEach(t),ae.forEach(t),E=f(I),z=n(I,"LI",{});var B=a(z);oe=s(B,"20: "),se=n(B,"CODE",{});var Be=a(se);ke=s(Be,"transformers.logging.INFO"),Be.forEach(t),B.forEach(t),le=f(I),J=n(I,"LI",{});var $=a(J);Ve=s($,"10: "),W=n($,"CODE",{});var ur=a(W);Ge=s(ur,"transformers.logging.DEBUG"),ur.forEach(t),$.forEach(t),I.forEach(t)},m(R,P){m(R,y,P),r(y,be),m(R,O,P),m(R,p,P),r(p,A),r(A,G),r(A,Z),r(Z,ee),r(A,Le),r(A,U),r(U,Y),r(p,Fe),r(p,M),r(M,L),r(M,re),r(re,te),r(p,xe),r(p,F),r(F,Ee),r(F,x),r(x,Pe),r(F,$e),r(F,T),r(T,ye),r(p,E),r(p,z),r(z,oe),r(z,se),r(se,ke),r(p,le),r(p,J),r(J,Ve),r(J,W),r(W,Ge)},d(R){R&&t(y),R&&t(O),R&&t(p)}}}function nn(ct){let y,be,O,p,A,G,Z,ee,Le,U,Y,Fe,M,L,re,te,xe,F,Ee,x,Pe,$e,T,ye,E,z,oe,se,ke,le,J,Ve,W,Ge,R,P,I,ne,we,pr,Me,Re,ae,cr,We,B,Be,$,ur,Nr,to,oo,Dr,so,lo,Tr,no,ao,Sr,io,go,ut,qe,ht,Oe,fo,Cr,mo,po,vt,je,_t,w,co,Lr,uo,ho,Fr,vo,_o,xr,bo,Eo,Pr,$o,yo,kr,wo,Ro,bt,He,Et,K,Oo,hr,Ao,Io,vr,No,Do,$t,N,Ae,Vr,To,So,Gr,Co,Lo,Fo,_r,Mr,xo,Po,ko,Ie,Wr,Vo,Go,Br,Mo,Wo,Bo,br,qr,qo,jo,Ho,Er,jr,Uo,Yo,yt,k,zo,Hr,Jo,Ko,$r,Qo,Xo,yr,Zo,es,wt,ie,Ne,Ur,Ue,rs,Yr,ts,Rt,ge,Ye,os,ze,ss,zr,ls,ns,Ot,fe,Je,as,Ke,is,Jr,gs,fs,At,me,Qe,ms,Xe,ds,Kr,ps,cs,It,de,Ze,us,er,hs,Qr,vs,_s,Nt,pe,De,Xr,rr,bs,Zr,Es,Dt,q,tr,$s,et,ys,ws,Te,Tt,ce,or,Rs,rt,Os,St,j,sr,As,tt,Is,Ns,ot,Ds,Ct,ue,lr,Ts,st,Ss,Lt,he,nr,Cs,lt,Ls,Ft,S,ar,Fs,nt,xs,Ps,ir,ks,at,Vs,xt,H,gr,Gs,it,Ms,Ws,gt,Bs,Pt,ve,fr,qs,ft,js,kt,_e,mr,Hs,mt,Us,Vt;return G=new Ks({}),T=new Ir({props:{code:`import transformers

transformers.logging.set_verbosity_info()`,highlighted:`<span class="hljs-keyword">import</span> transformers

transformers.logging.set_verbosity_info()`}}),B=new Ir({props:{code:"TRANSFORMERS_VERBOSITY=error ./myprogram.py",highlighted:"TRANSFORMERS_VERBOSITY=error ./myprogram.py"}}),qe=new Ir({props:{code:"TRANSFORMERS_NO_ADVISORY_WARNINGS=1 ./myprogram.py",highlighted:"TRANSFORMERS_NO_ADVISORY_WARNINGS=1 ./myprogram.py"}}),je=new Ir({props:{code:`from transformers.utils import logging

logging.set_verbosity_info()
logger = logging.get_logger(__name__)
logger.info("INFO")
logger.warning("WARN")`,highlighted:`<span class="hljs-keyword">from</span> transformers.utils <span class="hljs-keyword">import</span> logging

logging.set_verbosity_info()
logger = logging.get_logger(__name__)
logger.info(<span class="hljs-string">&quot;INFO&quot;</span>)
logger.warning(<span class="hljs-string">&quot;WARN&quot;</span>)`}}),He=new Ir({props:{code:`from transformers.utils import logging

if __name__ == "__main__":
    logging.set_verbosity_info()
    # leave it empy or use a string
    logger = logging.get_logger()
    logger.info("INFO")
    logger.warning("WARN")`,highlighted:`<span class="hljs-keyword">from</span> transformers.utils <span class="hljs-keyword">import</span> logging

<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:
    logging.set_verbosity_info()
    <span class="hljs-comment"># leave it empy or use a string</span>
    logger = logging.get_logger()
    logger.info(<span class="hljs-string">&quot;INFO&quot;</span>)
    logger.warning(<span class="hljs-string">&quot;WARN&quot;</span>)`}}),Ue=new Ks({}),Ye=new C({props:{name:"transformers.utils.logging.set_verbosity_error",anchor:"transformers.utils.logging.set_verbosity_error",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16771/src/transformers/utils/logging.py#L184"}}),Je=new C({props:{name:"transformers.utils.logging.set_verbosity_warning",anchor:"transformers.utils.logging.set_verbosity_warning",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16771/src/transformers/utils/logging.py#L174"}}),Qe=new C({props:{name:"transformers.utils.logging.set_verbosity_info",anchor:"transformers.utils.logging.set_verbosity_info",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16771/src/transformers/utils/logging.py#L169"}}),Ze=new C({props:{name:"transformers.utils.logging.set_verbosity_debug",anchor:"transformers.utils.logging.set_verbosity_debug",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16771/src/transformers/utils/logging.py#L179"}}),rr=new Ks({}),tr=new C({props:{name:"transformers.utils.logging.get_verbosity",anchor:"transformers.utils.logging.get_verbosity",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16771/src/transformers/utils/logging.py#L127",returnDescription:`
<p>The logging level.</p>
`,returnType:`
<p><code>int</code></p>
`}}),Te=new sn({props:{$$slots:{default:[ln]},$$scope:{ctx:ct}}}),or=new C({props:{name:"transformers.utils.logging.set_verbosity",anchor:"transformers.utils.logging.set_verbosity",parameters:[{name:"verbosity",val:": int"}],parametersDescription:[{anchor:"transformers.utils.logging.set_verbosity.verbosity",description:`<strong>verbosity</strong> (<code>int</code>) &#x2014;
Logging level, e.g., one of:</p>
<ul>
<li><code>transformers.logging.CRITICAL</code> or <code>transformers.logging.FATAL</code></li>
<li><code>transformers.logging.ERROR</code></li>
<li><code>transformers.logging.WARNING</code> or <code>transformers.logging.WARN</code></li>
<li><code>transformers.logging.INFO</code></li>
<li><code>transformers.logging.DEBUG</code></li>
</ul>`,name:"verbosity"}],source:"https://github.com/huggingface/transformers/blob/pr_16771/src/transformers/utils/logging.py#L150"}}),sr=new C({props:{name:"transformers.utils.logging.get_logger",anchor:"transformers.utils.logging.get_logger",parameters:[{name:"name",val:": typing.Optional[str] = None"}],source:"https://github.com/huggingface/transformers/blob/pr_16771/src/transformers/utils/logging.py#L113"}}),lr=new C({props:{name:"transformers.utils.logging.enable_default_handler",anchor:"transformers.utils.logging.enable_default_handler",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16771/src/transformers/utils/logging.py#L198"}}),nr=new C({props:{name:"transformers.utils.logging.disable_default_handler",anchor:"transformers.utils.logging.disable_default_handler",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16771/src/transformers/utils/logging.py#L189"}}),ar=new C({props:{name:"transformers.utils.logging.enable_explicit_format",anchor:"transformers.utils.logging.enable_explicit_format",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16771/src/transformers/utils/logging.py#L244"}}),ir=new Ir({props:{code:"    [LEVELNAME|FILENAME|LINE NUMBER] TIME >> MESSAGE",highlighted:'    [LEVELNAME|<span class="hljs-type">FILENAME</span>|<span class="hljs-type">LINE</span> NUMBER] TIME &gt;&gt; MESSAGE'}}),gr=new C({props:{name:"transformers.utils.logging.reset_format",anchor:"transformers.utils.logging.reset_format",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16771/src/transformers/utils/logging.py#L259"}}),fr=new C({props:{name:"transformers.utils.logging.enable_progress_bar",anchor:"transformers.utils.logging.enable_progress_bar",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16771/src/transformers/utils/logging.py#L335"}}),mr=new C({props:{name:"transformers.utils.logging.disable_progress_bar",anchor:"transformers.utils.logging.disable_progress_bar",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16771/src/transformers/utils/logging.py#L341"}}),{c(){y=l("meta"),be=g(),O=l("h1"),p=l("a"),A=l("span"),c(G.$$.fragment),Z=g(),ee=l("span"),Le=o("Logging"),U=g(),Y=l("p"),Fe=o("\u{1F917} Transformers has a centralized logging system, so that you can setup the verbosity of the library easily."),M=g(),L=l("p"),re=o("Currently the default verbosity of the library is "),te=l("code"),xe=o("WARNING"),F=o("."),Ee=g(),x=l("p"),Pe=o(`To change the level of verbosity, just use one of the direct setters. For instance, here is how to change the verbosity
to the INFO level.`),$e=g(),c(T.$$.fragment),ye=g(),E=l("p"),z=o("You can also use the environment variable "),oe=l("code"),se=o("TRANSFORMERS_VERBOSITY"),ke=o(` to override the default verbosity. You can set it
to one of the following: `),le=l("code"),J=o("debug"),Ve=o(", "),W=l("code"),Ge=o("info"),R=o(", "),P=l("code"),I=o("warning"),ne=o(", "),we=l("code"),pr=o("error"),Me=o(", "),Re=l("code"),ae=o("critical"),cr=o(". For example:"),We=g(),c(B.$$.fragment),Be=g(),$=l("p"),ur=o("Additionally, some "),Nr=l("code"),to=o("warnings"),oo=o(` can be disabled by setting the environment variable
`),Dr=l("code"),so=o("TRANSFORMERS_NO_ADVISORY_WARNINGS"),lo=o(" to a true value, like "),Tr=l("em"),no=o("1"),ao=o(`. This will disable any warning that is logged using
`),Sr=l("code"),io=o("logger.warning_advice()"),go=o(". For example:"),ut=g(),c(qe.$$.fragment),ht=g(),Oe=l("p"),fo=o("Here is an example of how to use "),Cr=l("code"),mo=o("logging"),po=o(" in a module:"),vt=g(),c(je.$$.fragment),_t=g(),w=l("p"),co=o("Above, a "),Lr=l("code"),uo=o("logger"),ho=o(" instance is created from "),Fr=l("code"),vo=o("logging.get_logger(__name__)"),_o=o(". If you want to use "),xr=l("code"),bo=o("logging"),Eo=o(" in a script, you shouldn\u2019t pass "),Pr=l("code"),$o=o("__name__"),yo=o(" to "),kr=l("code"),wo=o("logging.get_logger"),Ro=o(". For example:"),bt=g(),c(He.$$.fragment),Et=g(),K=l("p"),Oo=o(`All the methods of this logging module are documented below, the main ones are
`),hr=l("a"),Ao=o("logging.get_verbosity()"),Io=o(` to get the current level of verbosity in the logger and
`),vr=l("a"),No=o("logging.set_verbosity()"),Do=o(` to set the verbosity to the level of your choice. In order (from the least
verbose to the most verbose), those levels (with their corresponding int values in parenthesis) are:`),$t=g(),N=l("ul"),Ae=l("li"),Vr=l("code"),To=o("transformers.logging.CRITICAL"),So=o(" or "),Gr=l("code"),Co=o("transformers.logging.FATAL"),Lo=o(` (int value, 50): only report the most
critical errors.`),Fo=g(),_r=l("li"),Mr=l("code"),xo=o("transformers.logging.ERROR"),Po=o(" (int value, 40): only report errors."),ko=g(),Ie=l("li"),Wr=l("code"),Vo=o("transformers.logging.WARNING"),Go=o(" or "),Br=l("code"),Mo=o("transformers.logging.WARN"),Wo=o(` (int value, 30): only reports error and
warnings. This the default level used by the library.`),Bo=g(),br=l("li"),qr=l("code"),qo=o("transformers.logging.INFO"),jo=o(" (int value, 20): reports error, warnings and basic information."),Ho=g(),Er=l("li"),jr=l("code"),Uo=o("transformers.logging.DEBUG"),Yo=o(" (int value, 10): report all information."),yt=g(),k=l("p"),zo=o("By default, "),Hr=l("code"),Jo=o("tqdm"),Ko=o(" progress bars will be displayed during model download. "),$r=l("a"),Qo=o("logging.disable_progress_bar()"),Xo=o(" and "),yr=l("a"),Zo=o("logging.enable_progress_bar()"),es=o(" can be used to suppress or unsuppress this behavior."),wt=g(),ie=l("h2"),Ne=l("a"),Ur=l("span"),c(Ue.$$.fragment),rs=g(),Yr=l("span"),ts=o("Base setters"),Rt=g(),ge=l("div"),c(Ye.$$.fragment),os=g(),ze=l("p"),ss=o("Set the verbosity to the "),zr=l("code"),ls=o("ERROR"),ns=o(" level."),Ot=g(),fe=l("div"),c(Je.$$.fragment),as=g(),Ke=l("p"),is=o("Set the verbosity to the "),Jr=l("code"),gs=o("WARNING"),fs=o(" level."),At=g(),me=l("div"),c(Qe.$$.fragment),ms=g(),Xe=l("p"),ds=o("Set the verbosity to the "),Kr=l("code"),ps=o("INFO"),cs=o(" level."),It=g(),de=l("div"),c(Ze.$$.fragment),us=g(),er=l("p"),hs=o("Set the verbosity to the "),Qr=l("code"),vs=o("DEBUG"),_s=o(" level."),Nt=g(),pe=l("h2"),De=l("a"),Xr=l("span"),c(rr.$$.fragment),bs=g(),Zr=l("span"),Es=o("Other functions"),Dt=g(),q=l("div"),c(tr.$$.fragment),$s=g(),et=l("p"),ys=o("Return the current level for the \u{1F917} Transformers\u2019s root logger as an int."),ws=g(),c(Te.$$.fragment),Tt=g(),ce=l("div"),c(or.$$.fragment),Rs=g(),rt=l("p"),Os=o("Set the verbosity level for the \u{1F917} Transformers\u2019s root logger."),St=g(),j=l("div"),c(sr.$$.fragment),As=g(),tt=l("p"),Is=o("Return a logger with the specified name."),Ns=g(),ot=l("p"),Ds=o("This function is not supposed to be directly accessed unless you are writing a custom transformers module."),Ct=g(),ue=l("div"),c(lr.$$.fragment),Ts=g(),st=l("p"),Ss=o("Enable the default handler of the HuggingFace Transformers\u2019s root logger."),Lt=g(),he=l("div"),c(nr.$$.fragment),Cs=g(),lt=l("p"),Ls=o("Disable the default handler of the HuggingFace Transformers\u2019s root logger."),Ft=g(),S=l("div"),c(ar.$$.fragment),Fs=g(),nt=l("p"),xs=o("Enable explicit formatting for every HuggingFace Transformers\u2019s logger. The explicit formatter is as follows:"),Ps=g(),c(ir.$$.fragment),ks=g(),at=l("p"),Vs=o("All handlers currently bound to the root logger are affected by this method."),xt=g(),H=l("div"),c(gr.$$.fragment),Gs=g(),it=l("p"),Ms=o("Resets the formatting for HuggingFace Transformers\u2019s loggers."),Ws=g(),gt=l("p"),Bs=o("All handlers currently bound to the root logger are affected by this method."),Pt=g(),ve=l("div"),c(fr.$$.fragment),qs=g(),ft=l("p"),js=o("Enable tqdm progress bar."),kt=g(),_e=l("div"),c(mr.$$.fragment),Hs=g(),mt=l("p"),Us=o("Disable tqdm progress bar."),this.h()},l(e){const i=tn('[data-svelte="svelte-1phssyn"]',document.head);y=n(i,"META",{name:!0,content:!0}),i.forEach(t),be=f(e),O=n(e,"H1",{class:!0});var dr=a(O);p=n(dr,"A",{id:!0,class:!0,href:!0});var Qs=a(p);A=n(Qs,"SPAN",{});var Xs=a(A);u(G.$$.fragment,Xs),Xs.forEach(t),Qs.forEach(t),Z=f(dr),ee=n(dr,"SPAN",{});var Zs=a(ee);Le=s(Zs,"Logging"),Zs.forEach(t),dr.forEach(t),U=f(e),Y=n(e,"P",{});var el=a(Y);Fe=s(el,"\u{1F917} Transformers has a centralized logging system, so that you can setup the verbosity of the library easily."),el.forEach(t),M=f(e),L=n(e,"P",{});var Gt=a(L);re=s(Gt,"Currently the default verbosity of the library is "),te=n(Gt,"CODE",{});var rl=a(te);xe=s(rl,"WARNING"),rl.forEach(t),F=s(Gt,"."),Gt.forEach(t),Ee=f(e),x=n(e,"P",{});var tl=a(x);Pe=s(tl,`To change the level of verbosity, just use one of the direct setters. For instance, here is how to change the verbosity
to the INFO level.`),tl.forEach(t),$e=f(e),u(T.$$.fragment,e),ye=f(e),E=n(e,"P",{});var D=a(E);z=s(D,"You can also use the environment variable "),oe=n(D,"CODE",{});var ol=a(oe);se=s(ol,"TRANSFORMERS_VERBOSITY"),ol.forEach(t),ke=s(D,` to override the default verbosity. You can set it
to one of the following: `),le=n(D,"CODE",{});var sl=a(le);J=s(sl,"debug"),sl.forEach(t),Ve=s(D,", "),W=n(D,"CODE",{});var ll=a(W);Ge=s(ll,"info"),ll.forEach(t),R=s(D,", "),P=n(D,"CODE",{});var nl=a(P);I=s(nl,"warning"),nl.forEach(t),ne=s(D,", "),we=n(D,"CODE",{});var al=a(we);pr=s(al,"error"),al.forEach(t),Me=s(D,", "),Re=n(D,"CODE",{});var il=a(Re);ae=s(il,"critical"),il.forEach(t),cr=s(D,". For example:"),D.forEach(t),We=f(e),u(B.$$.fragment,e),Be=f(e),$=n(e,"P",{});var Q=a($);ur=s(Q,"Additionally, some "),Nr=n(Q,"CODE",{});var gl=a(Nr);to=s(gl,"warnings"),gl.forEach(t),oo=s(Q,` can be disabled by setting the environment variable
`),Dr=n(Q,"CODE",{});var fl=a(Dr);so=s(fl,"TRANSFORMERS_NO_ADVISORY_WARNINGS"),fl.forEach(t),lo=s(Q," to a true value, like "),Tr=n(Q,"EM",{});var ml=a(Tr);no=s(ml,"1"),ml.forEach(t),ao=s(Q,`. This will disable any warning that is logged using
`),Sr=n(Q,"CODE",{});var dl=a(Sr);io=s(dl,"logger.warning_advice()"),dl.forEach(t),go=s(Q,". For example:"),Q.forEach(t),ut=f(e),u(qe.$$.fragment,e),ht=f(e),Oe=n(e,"P",{});var Mt=a(Oe);fo=s(Mt,"Here is an example of how to use "),Cr=n(Mt,"CODE",{});var pl=a(Cr);mo=s(pl,"logging"),pl.forEach(t),po=s(Mt," in a module:"),Mt.forEach(t),vt=f(e),u(je.$$.fragment,e),_t=f(e),w=n(e,"P",{});var V=a(w);co=s(V,"Above, a "),Lr=n(V,"CODE",{});var cl=a(Lr);uo=s(cl,"logger"),cl.forEach(t),ho=s(V," instance is created from "),Fr=n(V,"CODE",{});var ul=a(Fr);vo=s(ul,"logging.get_logger(__name__)"),ul.forEach(t),_o=s(V,". If you want to use "),xr=n(V,"CODE",{});var hl=a(xr);bo=s(hl,"logging"),hl.forEach(t),Eo=s(V," in a script, you shouldn\u2019t pass "),Pr=n(V,"CODE",{});var vl=a(Pr);$o=s(vl,"__name__"),vl.forEach(t),yo=s(V," to "),kr=n(V,"CODE",{});var _l=a(kr);wo=s(_l,"logging.get_logger"),_l.forEach(t),Ro=s(V,". For example:"),V.forEach(t),bt=f(e),u(He.$$.fragment,e),Et=f(e),K=n(e,"P",{});var wr=a(K);Oo=s(wr,`All the methods of this logging module are documented below, the main ones are
`),hr=n(wr,"A",{href:!0});var bl=a(hr);Ao=s(bl,"logging.get_verbosity()"),bl.forEach(t),Io=s(wr,` to get the current level of verbosity in the logger and
`),vr=n(wr,"A",{href:!0});var El=a(vr);No=s(El,"logging.set_verbosity()"),El.forEach(t),Do=s(wr,` to set the verbosity to the level of your choice. In order (from the least
verbose to the most verbose), those levels (with their corresponding int values in parenthesis) are:`),wr.forEach(t),$t=f(e),N=n(e,"UL",{});var X=a(N);Ae=n(X,"LI",{});var dt=a(Ae);Vr=n(dt,"CODE",{});var $l=a(Vr);To=s($l,"transformers.logging.CRITICAL"),$l.forEach(t),So=s(dt," or "),Gr=n(dt,"CODE",{});var yl=a(Gr);Co=s(yl,"transformers.logging.FATAL"),yl.forEach(t),Lo=s(dt,` (int value, 50): only report the most
critical errors.`),dt.forEach(t),Fo=f(X),_r=n(X,"LI",{});var Ys=a(_r);Mr=n(Ys,"CODE",{});var wl=a(Mr);xo=s(wl,"transformers.logging.ERROR"),wl.forEach(t),Po=s(Ys," (int value, 40): only report errors."),Ys.forEach(t),ko=f(X),Ie=n(X,"LI",{});var pt=a(Ie);Wr=n(pt,"CODE",{});var Rl=a(Wr);Vo=s(Rl,"transformers.logging.WARNING"),Rl.forEach(t),Go=s(pt," or "),Br=n(pt,"CODE",{});var Ol=a(Br);Mo=s(Ol,"transformers.logging.WARN"),Ol.forEach(t),Wo=s(pt,` (int value, 30): only reports error and
warnings. This the default level used by the library.`),pt.forEach(t),Bo=f(X),br=n(X,"LI",{});var zs=a(br);qr=n(zs,"CODE",{});var Al=a(qr);qo=s(Al,"transformers.logging.INFO"),Al.forEach(t),jo=s(zs," (int value, 20): reports error, warnings and basic information."),zs.forEach(t),Ho=f(X),Er=n(X,"LI",{});var Js=a(Er);jr=n(Js,"CODE",{});var Il=a(jr);Uo=s(Il,"transformers.logging.DEBUG"),Il.forEach(t),Yo=s(Js," (int value, 10): report all information."),Js.forEach(t),X.forEach(t),yt=f(e),k=n(e,"P",{});var Se=a(k);zo=s(Se,"By default, "),Hr=n(Se,"CODE",{});var Nl=a(Hr);Jo=s(Nl,"tqdm"),Nl.forEach(t),Ko=s(Se," progress bars will be displayed during model download. "),$r=n(Se,"A",{href:!0});var Dl=a($r);Qo=s(Dl,"logging.disable_progress_bar()"),Dl.forEach(t),Xo=s(Se," and "),yr=n(Se,"A",{href:!0});var Tl=a(yr);Zo=s(Tl,"logging.enable_progress_bar()"),Tl.forEach(t),es=s(Se," can be used to suppress or unsuppress this behavior."),Se.forEach(t),wt=f(e),ie=n(e,"H2",{class:!0});var Wt=a(ie);Ne=n(Wt,"A",{id:!0,class:!0,href:!0});var Sl=a(Ne);Ur=n(Sl,"SPAN",{});var Cl=a(Ur);u(Ue.$$.fragment,Cl),Cl.forEach(t),Sl.forEach(t),rs=f(Wt),Yr=n(Wt,"SPAN",{});var Ll=a(Yr);ts=s(Ll,"Base setters"),Ll.forEach(t),Wt.forEach(t),Rt=f(e),ge=n(e,"DIV",{class:!0});var Bt=a(ge);u(Ye.$$.fragment,Bt),os=f(Bt),ze=n(Bt,"P",{});var qt=a(ze);ss=s(qt,"Set the verbosity to the "),zr=n(qt,"CODE",{});var Fl=a(zr);ls=s(Fl,"ERROR"),Fl.forEach(t),ns=s(qt," level."),qt.forEach(t),Bt.forEach(t),Ot=f(e),fe=n(e,"DIV",{class:!0});var jt=a(fe);u(Je.$$.fragment,jt),as=f(jt),Ke=n(jt,"P",{});var Ht=a(Ke);is=s(Ht,"Set the verbosity to the "),Jr=n(Ht,"CODE",{});var xl=a(Jr);gs=s(xl,"WARNING"),xl.forEach(t),fs=s(Ht," level."),Ht.forEach(t),jt.forEach(t),At=f(e),me=n(e,"DIV",{class:!0});var Ut=a(me);u(Qe.$$.fragment,Ut),ms=f(Ut),Xe=n(Ut,"P",{});var Yt=a(Xe);ds=s(Yt,"Set the verbosity to the "),Kr=n(Yt,"CODE",{});var Pl=a(Kr);ps=s(Pl,"INFO"),Pl.forEach(t),cs=s(Yt," level."),Yt.forEach(t),Ut.forEach(t),It=f(e),de=n(e,"DIV",{class:!0});var zt=a(de);u(Ze.$$.fragment,zt),us=f(zt),er=n(zt,"P",{});var Jt=a(er);hs=s(Jt,"Set the verbosity to the "),Qr=n(Jt,"CODE",{});var kl=a(Qr);vs=s(kl,"DEBUG"),kl.forEach(t),_s=s(Jt," level."),Jt.forEach(t),zt.forEach(t),Nt=f(e),pe=n(e,"H2",{class:!0});var Kt=a(pe);De=n(Kt,"A",{id:!0,class:!0,href:!0});var Vl=a(De);Xr=n(Vl,"SPAN",{});var Gl=a(Xr);u(rr.$$.fragment,Gl),Gl.forEach(t),Vl.forEach(t),bs=f(Kt),Zr=n(Kt,"SPAN",{});var Ml=a(Zr);Es=s(Ml,"Other functions"),Ml.forEach(t),Kt.forEach(t),Dt=f(e),q=n(e,"DIV",{class:!0});var Rr=a(q);u(tr.$$.fragment,Rr),$s=f(Rr),et=n(Rr,"P",{});var Wl=a(et);ys=s(Wl,"Return the current level for the \u{1F917} Transformers\u2019s root logger as an int."),Wl.forEach(t),ws=f(Rr),u(Te.$$.fragment,Rr),Rr.forEach(t),Tt=f(e),ce=n(e,"DIV",{class:!0});var Qt=a(ce);u(or.$$.fragment,Qt),Rs=f(Qt),rt=n(Qt,"P",{});var Bl=a(rt);Os=s(Bl,"Set the verbosity level for the \u{1F917} Transformers\u2019s root logger."),Bl.forEach(t),Qt.forEach(t),St=f(e),j=n(e,"DIV",{class:!0});var Or=a(j);u(sr.$$.fragment,Or),As=f(Or),tt=n(Or,"P",{});var ql=a(tt);Is=s(ql,"Return a logger with the specified name."),ql.forEach(t),Ns=f(Or),ot=n(Or,"P",{});var jl=a(ot);Ds=s(jl,"This function is not supposed to be directly accessed unless you are writing a custom transformers module."),jl.forEach(t),Or.forEach(t),Ct=f(e),ue=n(e,"DIV",{class:!0});var Xt=a(ue);u(lr.$$.fragment,Xt),Ts=f(Xt),st=n(Xt,"P",{});var Hl=a(st);Ss=s(Hl,"Enable the default handler of the HuggingFace Transformers\u2019s root logger."),Hl.forEach(t),Xt.forEach(t),Lt=f(e),he=n(e,"DIV",{class:!0});var Zt=a(he);u(nr.$$.fragment,Zt),Cs=f(Zt),lt=n(Zt,"P",{});var Ul=a(lt);Ls=s(Ul,"Disable the default handler of the HuggingFace Transformers\u2019s root logger."),Ul.forEach(t),Zt.forEach(t),Ft=f(e),S=n(e,"DIV",{class:!0});var Ce=a(S);u(ar.$$.fragment,Ce),Fs=f(Ce),nt=n(Ce,"P",{});var Yl=a(nt);xs=s(Yl,"Enable explicit formatting for every HuggingFace Transformers\u2019s logger. The explicit formatter is as follows:"),Yl.forEach(t),Ps=f(Ce),u(ir.$$.fragment,Ce),ks=f(Ce),at=n(Ce,"P",{});var zl=a(at);Vs=s(zl,"All handlers currently bound to the root logger are affected by this method."),zl.forEach(t),Ce.forEach(t),xt=f(e),H=n(e,"DIV",{class:!0});var Ar=a(H);u(gr.$$.fragment,Ar),Gs=f(Ar),it=n(Ar,"P",{});var Jl=a(it);Ms=s(Jl,"Resets the formatting for HuggingFace Transformers\u2019s loggers."),Jl.forEach(t),Ws=f(Ar),gt=n(Ar,"P",{});var Kl=a(gt);Bs=s(Kl,"All handlers currently bound to the root logger are affected by this method."),Kl.forEach(t),Ar.forEach(t),Pt=f(e),ve=n(e,"DIV",{class:!0});var eo=a(ve);u(fr.$$.fragment,eo),qs=f(eo),ft=n(eo,"P",{});var Ql=a(ft);js=s(Ql,"Enable tqdm progress bar."),Ql.forEach(t),eo.forEach(t),kt=f(e),_e=n(e,"DIV",{class:!0});var ro=a(_e);u(mr.$$.fragment,ro),Hs=f(ro),mt=n(ro,"P",{});var Xl=a(mt);Us=s(Xl,"Disable tqdm progress bar."),Xl.forEach(t),ro.forEach(t),this.h()},h(){d(y,"name","hf:doc:metadata"),d(y,"content",JSON.stringify(an)),d(p,"id","logging"),d(p,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(p,"href","#logging"),d(O,"class","relative group"),d(hr,"href","/docs/transformers/pr_16771/en/main_classes/logging#transformers.utils.logging.get_verbosity"),d(vr,"href","/docs/transformers/pr_16771/en/main_classes/logging#transformers.utils.logging.set_verbosity"),d($r,"href","/docs/transformers/pr_16771/en/main_classes/logging#transformers.utils.logging.disable_progress_bar"),d(yr,"href","/docs/transformers/pr_16771/en/main_classes/logging#transformers.utils.logging.enable_progress_bar"),d(Ne,"id","transformers.utils.logging.set_verbosity_error"),d(Ne,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(Ne,"href","#transformers.utils.logging.set_verbosity_error"),d(ie,"class","relative group"),d(ge,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),d(fe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),d(me,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),d(de,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),d(De,"id","transformers.utils.logging.get_verbosity"),d(De,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(De,"href","#transformers.utils.logging.get_verbosity"),d(pe,"class","relative group"),d(q,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),d(ce,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),d(j,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),d(ue,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),d(he,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),d(S,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),d(H,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),d(ve,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),d(_e,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(e,i){r(document.head,y),m(e,be,i),m(e,O,i),r(O,p),r(p,A),h(G,A,null),r(O,Z),r(O,ee),r(ee,Le),m(e,U,i),m(e,Y,i),r(Y,Fe),m(e,M,i),m(e,L,i),r(L,re),r(L,te),r(te,xe),r(L,F),m(e,Ee,i),m(e,x,i),r(x,Pe),m(e,$e,i),h(T,e,i),m(e,ye,i),m(e,E,i),r(E,z),r(E,oe),r(oe,se),r(E,ke),r(E,le),r(le,J),r(E,Ve),r(E,W),r(W,Ge),r(E,R),r(E,P),r(P,I),r(E,ne),r(E,we),r(we,pr),r(E,Me),r(E,Re),r(Re,ae),r(E,cr),m(e,We,i),h(B,e,i),m(e,Be,i),m(e,$,i),r($,ur),r($,Nr),r(Nr,to),r($,oo),r($,Dr),r(Dr,so),r($,lo),r($,Tr),r(Tr,no),r($,ao),r($,Sr),r(Sr,io),r($,go),m(e,ut,i),h(qe,e,i),m(e,ht,i),m(e,Oe,i),r(Oe,fo),r(Oe,Cr),r(Cr,mo),r(Oe,po),m(e,vt,i),h(je,e,i),m(e,_t,i),m(e,w,i),r(w,co),r(w,Lr),r(Lr,uo),r(w,ho),r(w,Fr),r(Fr,vo),r(w,_o),r(w,xr),r(xr,bo),r(w,Eo),r(w,Pr),r(Pr,$o),r(w,yo),r(w,kr),r(kr,wo),r(w,Ro),m(e,bt,i),h(He,e,i),m(e,Et,i),m(e,K,i),r(K,Oo),r(K,hr),r(hr,Ao),r(K,Io),r(K,vr),r(vr,No),r(K,Do),m(e,$t,i),m(e,N,i),r(N,Ae),r(Ae,Vr),r(Vr,To),r(Ae,So),r(Ae,Gr),r(Gr,Co),r(Ae,Lo),r(N,Fo),r(N,_r),r(_r,Mr),r(Mr,xo),r(_r,Po),r(N,ko),r(N,Ie),r(Ie,Wr),r(Wr,Vo),r(Ie,Go),r(Ie,Br),r(Br,Mo),r(Ie,Wo),r(N,Bo),r(N,br),r(br,qr),r(qr,qo),r(br,jo),r(N,Ho),r(N,Er),r(Er,jr),r(jr,Uo),r(Er,Yo),m(e,yt,i),m(e,k,i),r(k,zo),r(k,Hr),r(Hr,Jo),r(k,Ko),r(k,$r),r($r,Qo),r(k,Xo),r(k,yr),r(yr,Zo),r(k,es),m(e,wt,i),m(e,ie,i),r(ie,Ne),r(Ne,Ur),h(Ue,Ur,null),r(ie,rs),r(ie,Yr),r(Yr,ts),m(e,Rt,i),m(e,ge,i),h(Ye,ge,null),r(ge,os),r(ge,ze),r(ze,ss),r(ze,zr),r(zr,ls),r(ze,ns),m(e,Ot,i),m(e,fe,i),h(Je,fe,null),r(fe,as),r(fe,Ke),r(Ke,is),r(Ke,Jr),r(Jr,gs),r(Ke,fs),m(e,At,i),m(e,me,i),h(Qe,me,null),r(me,ms),r(me,Xe),r(Xe,ds),r(Xe,Kr),r(Kr,ps),r(Xe,cs),m(e,It,i),m(e,de,i),h(Ze,de,null),r(de,us),r(de,er),r(er,hs),r(er,Qr),r(Qr,vs),r(er,_s),m(e,Nt,i),m(e,pe,i),r(pe,De),r(De,Xr),h(rr,Xr,null),r(pe,bs),r(pe,Zr),r(Zr,Es),m(e,Dt,i),m(e,q,i),h(tr,q,null),r(q,$s),r(q,et),r(et,ys),r(q,ws),h(Te,q,null),m(e,Tt,i),m(e,ce,i),h(or,ce,null),r(ce,Rs),r(ce,rt),r(rt,Os),m(e,St,i),m(e,j,i),h(sr,j,null),r(j,As),r(j,tt),r(tt,Is),r(j,Ns),r(j,ot),r(ot,Ds),m(e,Ct,i),m(e,ue,i),h(lr,ue,null),r(ue,Ts),r(ue,st),r(st,Ss),m(e,Lt,i),m(e,he,i),h(nr,he,null),r(he,Cs),r(he,lt),r(lt,Ls),m(e,Ft,i),m(e,S,i),h(ar,S,null),r(S,Fs),r(S,nt),r(nt,xs),r(S,Ps),h(ir,S,null),r(S,ks),r(S,at),r(at,Vs),m(e,xt,i),m(e,H,i),h(gr,H,null),r(H,Gs),r(H,it),r(it,Ms),r(H,Ws),r(H,gt),r(gt,Bs),m(e,Pt,i),m(e,ve,i),h(fr,ve,null),r(ve,qs),r(ve,ft),r(ft,js),m(e,kt,i),m(e,_e,i),h(mr,_e,null),r(_e,Hs),r(_e,mt),r(mt,Us),Vt=!0},p(e,[i]){const dr={};i&2&&(dr.$$scope={dirty:i,ctx:e}),Te.$set(dr)},i(e){Vt||(v(G.$$.fragment,e),v(T.$$.fragment,e),v(B.$$.fragment,e),v(qe.$$.fragment,e),v(je.$$.fragment,e),v(He.$$.fragment,e),v(Ue.$$.fragment,e),v(Ye.$$.fragment,e),v(Je.$$.fragment,e),v(Qe.$$.fragment,e),v(Ze.$$.fragment,e),v(rr.$$.fragment,e),v(tr.$$.fragment,e),v(Te.$$.fragment,e),v(or.$$.fragment,e),v(sr.$$.fragment,e),v(lr.$$.fragment,e),v(nr.$$.fragment,e),v(ar.$$.fragment,e),v(ir.$$.fragment,e),v(gr.$$.fragment,e),v(fr.$$.fragment,e),v(mr.$$.fragment,e),Vt=!0)},o(e){_(G.$$.fragment,e),_(T.$$.fragment,e),_(B.$$.fragment,e),_(qe.$$.fragment,e),_(je.$$.fragment,e),_(He.$$.fragment,e),_(Ue.$$.fragment,e),_(Ye.$$.fragment,e),_(Je.$$.fragment,e),_(Qe.$$.fragment,e),_(Ze.$$.fragment,e),_(rr.$$.fragment,e),_(tr.$$.fragment,e),_(Te.$$.fragment,e),_(or.$$.fragment,e),_(sr.$$.fragment,e),_(lr.$$.fragment,e),_(nr.$$.fragment,e),_(ar.$$.fragment,e),_(ir.$$.fragment,e),_(gr.$$.fragment,e),_(fr.$$.fragment,e),_(mr.$$.fragment,e),Vt=!1},d(e){t(y),e&&t(be),e&&t(O),b(G),e&&t(U),e&&t(Y),e&&t(M),e&&t(L),e&&t(Ee),e&&t(x),e&&t($e),b(T,e),e&&t(ye),e&&t(E),e&&t(We),b(B,e),e&&t(Be),e&&t($),e&&t(ut),b(qe,e),e&&t(ht),e&&t(Oe),e&&t(vt),b(je,e),e&&t(_t),e&&t(w),e&&t(bt),b(He,e),e&&t(Et),e&&t(K),e&&t($t),e&&t(N),e&&t(yt),e&&t(k),e&&t(wt),e&&t(ie),b(Ue),e&&t(Rt),e&&t(ge),b(Ye),e&&t(Ot),e&&t(fe),b(Je),e&&t(At),e&&t(me),b(Qe),e&&t(It),e&&t(de),b(Ze),e&&t(Nt),e&&t(pe),b(rr),e&&t(Dt),e&&t(q),b(tr),b(Te),e&&t(Tt),e&&t(ce),b(or),e&&t(St),e&&t(j),b(sr),e&&t(Ct),e&&t(ue),b(lr),e&&t(Lt),e&&t(he),b(nr),e&&t(Ft),e&&t(S),b(ar),b(ir),e&&t(xt),e&&t(H),b(gr),e&&t(Pt),e&&t(ve),b(fr),e&&t(kt),e&&t(_e),b(mr)}}}const an={local:"logging",sections:[{local:"transformers.utils.logging.set_verbosity_error",title:"Base setters"},{local:"transformers.utils.logging.get_verbosity",title:"Other functions"}],title:"Logging"};function gn(ct){return on(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class un extends Zl{constructor(y){super();en(this,y,gn,nn,rn,{})}}export{un as default,an as metadata};
