import{S as np,i as op,s as sp,e as o,k as c,w as g,t as a,M as lp,c as s,d as t,m as d,a as l,x as u,h as n,b as i,F as e,g as m,y as b,q as _,o as v,B as E,v as ip,L as cp}from"../../chunks/vendor-6b77c823.js";import{T as dp}from"../../chunks/Tip-39098574.js";import{D as T}from"../../chunks/Docstring-1088f2fb.js";import{C as zf}from"../../chunks/CodeBlock-3a8b25a8.js";import{I as On}from"../../chunks/IconCopyLink-7a11ce68.js";import{E as fp}from"../../chunks/ExampleCodeBlock-5212b321.js";function mp(fr){let w,W,A,D,M;return D=new zf({props:{code:`class PrinterCallback(TrainerCallback):
    def on_log(self, args, state, control, logs=None, **kwargs):
        _ = logs.pop("total_flos", None)
        if state.is_local_process_zero:
            print(logs)`,highlighted:`<span class="hljs-keyword">class</span> <span class="hljs-title class_">PrinterCallback</span>(<span class="hljs-title class_ inherited__">TrainerCallback</span>):
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_log</span>(<span class="hljs-params">self, args, state, control, logs=<span class="hljs-literal">None</span>, **kwargs</span>):
        _ = logs.pop(<span class="hljs-string">&quot;total_flos&quot;</span>, <span class="hljs-literal">None</span>)
        <span class="hljs-keyword">if</span> state.is_local_process_zero:
            <span class="hljs-built_in">print</span>(logs)`}}),{c(){w=o("p"),W=a("Example:"),A=c(),g(D.$$.fragment)},l(C){w=s(C,"P",{});var F=l(w);W=n(F,"Example:"),F.forEach(t),A=d(C),u(D.$$.fragment,C)},m(C,F){m(C,w,F),e(w,W),m(C,A,F),b(D,C,F),M=!0},p:cp,i(C){M||(_(D.$$.fragment,C),M=!0)},o(C){v(D.$$.fragment,C),M=!1},d(C){C&&t(w),C&&t(A),E(D,C)}}}function hp(fr){let w,W,A,D,M,C,F,re;return{c(){w=o("p"),W=a(`In all this class, one step is to be understood as one update step. When using gradient accumulation, one update
step may require several forward and backward passes: if you use `),A=o("code"),D=a("gradient_accumulation_steps=n"),M=a(`, then one update
step requires going through `),C=o("em"),F=a("n"),re=a(" batches.")},l(ae){w=s(ae,"P",{});var N=l(w);W=n(N,`In all this class, one step is to be understood as one update step. When using gradient accumulation, one update
step may require several forward and backward passes: if you use `),A=s(N,"CODE",{});var H=l(A);D=n(H,"gradient_accumulation_steps=n"),H.forEach(t),M=n(N,`, then one update
step requires going through `),C=s(N,"EM",{});var mr=l(C);F=n(mr,"n"),mr.forEach(t),re=n(N," batches."),N.forEach(t)},m(ae,N){m(ae,w,N),e(w,W),e(w,A),e(A,D),e(w,M),e(w,C),e(C,F),e(w,re)},d(ae){ae&&t(w)}}}function pp(fr){let w,W,A,D,M,C,F,re,ae,N,H,mr,hr,Yo,Xo,Pn,z,Ko,pr,Qo,Zo,gr,es,ts,ur,rs,as,In,$e,ns,br,os,ss,Mn,L,_r,vr,ls,is,cs,Z,Er,ds,fs,kr,ms,hs,$r,ps,gs,us,Tr,Cr,bs,_s,vs,Te,wr,Es,ks,at,$s,Ts,Cs,Ce,yr,ws,ys,nt,As,Ds,Ls,we,Ar,Ss,xs,ot,Os,Ps,Is,ye,Dr,Ms,Fs,st,Ns,js,Ws,Ae,Lr,zs,Bs,lt,Vs,Rs,Fn,x,qs,Sr,Us,Hs,xr,Gs,Js,Or,Ys,Xs,Pr,Ks,Qs,Ir,Zs,el,Nn,ne,De,ma,it,tl,ha,rl,jn,Le,al,Mr,nl,ol,Wn,G,ct,sl,oe,ll,Fr,il,cl,dt,dl,fl,ml,B,ft,hl,pa,pl,gl,y,ul,ga,bl,_l,ua,vl,El,ba,kl,$l,_a,Tl,Cl,va,wl,yl,Ea,Al,Dl,ka,Ll,Sl,$a,xl,Ol,Ta,Pl,Il,Ml,mt,Fl,ht,Nl,jl,zn,se,pt,Wl,gt,zl,Nr,Bl,Vl,Bn,le,ut,Rl,bt,ql,jr,Ul,Hl,Vn,ie,_t,Gl,vt,Jl,Wr,Yl,Xl,Rn,J,Et,Kl,kt,Ql,zr,Zl,ei,ti,Y,ri,Br,ai,ni,Ca,oi,si,Vr,li,ii,qn,ce,$t,ci,de,di,Rr,fi,mi,Tt,hi,pi,Un,X,Ct,gi,fe,ui,qr,bi,_i,wt,vi,Ei,ki,V,yt,$i,At,Ti,wa,Ci,wi,yi,Dt,Ai,Lt,Di,Li,Si,h,xi,ya,Oi,Pi,Aa,Ii,Mi,Da,Fi,Ni,La,ji,Wi,Sa,zi,Bi,xa,Vi,Ri,Oa,qi,Ui,Pa,Hi,Gi,Ia,Ji,Yi,Ma,Xi,Ki,Fa,Qi,Zi,Na,ec,tc,ja,rc,ac,Wa,nc,oc,za,sc,lc,Ba,ic,cc,Va,dc,fc,Ra,mc,hc,qa,pc,gc,Hn,K,St,uc,Q,bc,Ur,_c,vc,xt,Ec,kc,Ua,$c,Tc,Cc,R,Ot,wc,Ha,yc,Ac,me,Dc,Ga,Lc,Sc,Ja,xc,Oc,Pc,j,Ic,Ya,Mc,Fc,Xa,Nc,jc,Hr,Wc,zc,Ka,Bc,Vc,Gn,he,Pt,Rc,pe,qc,Gr,Uc,Hc,It,Gc,Jc,Jn,ge,Mt,Yc,Ft,Xc,Jr,Kc,Qc,Yn,ue,Se,Qa,Nt,Zc,Za,ed,Xn,k,jt,td,en,rd,ad,Wt,nd,tn,od,sd,ld,P,id,rn,cd,dd,an,fd,md,nn,hd,pd,on,gd,ud,sn,bd,_d,vd,xe,Ed,Oe,zt,kd,ln,$d,Td,Pe,Bt,Cd,cn,wd,yd,Ie,Vt,Ad,dn,Dd,Ld,Me,Rt,Sd,qt,xd,Yr,Od,Pd,Id,Fe,Ut,Md,fn,Fd,Nd,Ne,Ht,jd,mn,Wd,zd,je,Gt,Bd,hn,Vd,Rd,We,Jt,qd,pn,Ud,Hd,ze,Yt,Gd,gn,Jd,Yd,Be,Xt,Xd,un,Kd,Qd,Ve,Kt,Zd,bn,ef,tf,Re,Qt,rf,_n,af,Kn,qe,nf,Xr,of,sf,Qn,Zt,Zn,Ue,lf,vn,cf,df,eo,er,to,be,He,En,tr,ff,kn,mf,ro,I,rr,hf,_e,pf,Kr,gf,uf,Qr,bf,_f,vf,Ge,Ef,Je,ar,kf,nr,$f,$n,Tf,Cf,wf,Ye,or,yf,sr,Af,Tn,Df,Lf,ao,ve,Xe,Cn,lr,Sf,wn,xf,no,Ee,ir,Of,ke,Pf,Zr,If,Mf,ea,Ff,Nf,oo;return C=new On({}),it=new On({}),ct=new T({props:{name:"class transformers.integrations.CometCallback",anchor:"transformers.integrations.CometCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/integrations.py#L661"}}),ft=new T({props:{name:"setup",anchor:"transformers.integrations.CometCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/integrations.py#L672"}}),pt=new T({props:{name:"class transformers.DefaultFlowCallback",anchor:"transformers.DefaultFlowCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L406"}}),ut=new T({props:{name:"class transformers.PrinterCallback",anchor:"transformers.PrinterCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L498"}}),_t=new T({props:{name:"class transformers.ProgressCallback",anchor:"transformers.ProgressCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L456"}}),Et=new T({props:{name:"class transformers.EarlyStoppingCallback",anchor:"transformers.EarlyStoppingCallback",parameters:[{name:"early_stopping_patience",val:": int = 1"},{name:"early_stopping_threshold",val:": typing.Optional[float] = 0.0"}],parametersDescription:[{anchor:"transformers.EarlyStoppingCallback.early_stopping_patience",description:`<strong>early_stopping_patience</strong> (<code>int</code>) &#x2014;
Use with <code>metric_for_best_model</code> to stop training when the specified metric worsens for
<code>early_stopping_patience</code> evaluation calls.`,name:"early_stopping_patience"},{anchor:"transformers.EarlyStoppingCallback.early_stopping_threshold(float,",description:`<strong>early_stopping_threshold(<code>float</code>,</strong> <em>optional</em>) &#x2014;
Use with TrainingArguments <code>metric_for_best_model</code> and <code>early_stopping_patience</code> to denote how much the
specified metric must improve to satisfy early stopping conditions. \``,name:"early_stopping_threshold(float,"}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L509"}}),$t=new T({props:{name:"class transformers.integrations.TensorBoardCallback",anchor:"transformers.integrations.TensorBoardCallback",parameters:[{name:"tb_writer",val:" = None"}],parametersDescription:[{anchor:"transformers.integrations.TensorBoardCallback.tb_writer",description:`<strong>tb_writer</strong> (<code>SummaryWriter</code>, <em>optional</em>) &#x2014;
The writer to use. Will instantiate one if not set.`,name:"tb_writer"}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/integrations.py#L447"}}),Ct=new T({props:{name:"class transformers.integrations.WandbCallback",anchor:"transformers.integrations.WandbCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/integrations.py#L535"}}),yt=new T({props:{name:"setup",anchor:"transformers.integrations.WandbCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/integrations.py#L552"}}),St=new T({props:{name:"class transformers.integrations.MLflowCallback",anchor:"transformers.integrations.MLflowCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/integrations.py#L760"}}),Ot=new T({props:{name:"setup",anchor:"transformers.integrations.MLflowCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/integrations.py#L778"}}),Pt=new T({props:{name:"class transformers.integrations.AzureMLCallback",anchor:"transformers.integrations.AzureMLCallback",parameters:[{name:"azureml_run",val:" = None"}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/integrations.py#L737"}}),Mt=new T({props:{name:"class transformers.integrations.CodeCarbonCallback",anchor:"transformers.integrations.CodeCarbonCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/integrations.py#L922"}}),Nt=new On({}),jt=new T({props:{name:"class transformers.TrainerCallback",anchor:"transformers.TrainerCallback",parameters:[],parametersDescription:[{anchor:"transformers.TrainerCallback.args",description:`<strong>args</strong> (<a href="/docs/transformers/pr_17013/en/main_classes/trainer#transformers.TrainingArguments">TrainingArguments</a>) &#x2014;
The training arguments used to instantiate the <a href="/docs/transformers/pr_17013/en/main_classes/trainer#transformers.Trainer">Trainer</a>.`,name:"args"},{anchor:"transformers.TrainerCallback.state",description:`<strong>state</strong> (<a href="/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerState">TrainerState</a>) &#x2014;
The current state of the <a href="/docs/transformers/pr_17013/en/main_classes/trainer#transformers.Trainer">Trainer</a>.`,name:"state"},{anchor:"transformers.TrainerCallback.control",description:`<strong>control</strong> (<a href="/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerControl">TrainerControl</a>) &#x2014;
The object that is returned to the <a href="/docs/transformers/pr_17013/en/main_classes/trainer#transformers.Trainer">Trainer</a> and can be used to make some decisions.`,name:"control"},{anchor:"transformers.TrainerCallback.model",description:`<strong>model</strong> (<a href="/docs/transformers/pr_17013/en/main_classes/model#transformers.PreTrainedModel">PreTrainedModel</a> or <code>torch.nn.Module</code>) &#x2014;
The model being trained.`,name:"model"},{anchor:"transformers.TrainerCallback.tokenizer",description:`<strong>tokenizer</strong> (<a href="/docs/transformers/pr_17013/en/main_classes/tokenizer#transformers.PreTrainedTokenizer">PreTrainedTokenizer</a>) &#x2014;
The tokenizer used for encoding the data.`,name:"tokenizer"},{anchor:"transformers.TrainerCallback.optimizer",description:`<strong>optimizer</strong> (<code>torch.optim.Optimizer</code>) &#x2014;
The optimizer used for the training steps.`,name:"optimizer"},{anchor:"transformers.TrainerCallback.lr_scheduler",description:`<strong>lr_scheduler</strong> (<code>torch.optim.lr_scheduler.LambdaLR</code>) &#x2014;
The scheduler used for setting the learning rate.`,name:"lr_scheduler"},{anchor:"transformers.TrainerCallback.train_dataloader",description:`<strong>train_dataloader</strong> (<code>torch.utils.data.DataLoader</code>, <em>optional</em>) &#x2014;
The current dataloader used for training.`,name:"train_dataloader"},{anchor:"transformers.TrainerCallback.eval_dataloader",description:`<strong>eval_dataloader</strong> (<code>torch.utils.data.DataLoader</code>, <em>optional</em>) &#x2014;
The current dataloader used for training.`,name:"eval_dataloader"},{anchor:"transformers.TrainerCallback.metrics",description:`<strong>metrics</strong> (<code>Dict[str, float]</code>) &#x2014;
The metrics computed by the last evaluation phase.</p>
<p>Those are only accessible in the event <code>on_evaluate</code>.`,name:"metrics"},{anchor:"transformers.TrainerCallback.logs",description:`<strong>logs</strong>  (<code>Dict[str, float]</code>) &#x2014;
The values to log.</p>
<p>Those are only accessible in the event <code>on_log</code>.`,name:"logs"}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L159"}}),xe=new fp({props:{anchor:"transformers.TrainerCallback.example",$$slots:{default:[mp]},$$scope:{ctx:fr}}}),zt=new T({props:{name:"on_epoch_begin",anchor:"transformers.TrainerCallback.on_epoch_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L227"}}),Bt=new T({props:{name:"on_epoch_end",anchor:"transformers.TrainerCallback.on_epoch_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L233"}}),Vt=new T({props:{name:"on_evaluate",anchor:"transformers.TrainerCallback.on_evaluate",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L259"}}),Rt=new T({props:{name:"on_init_end",anchor:"transformers.TrainerCallback.on_init_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L209"}}),Ut=new T({props:{name:"on_log",anchor:"transformers.TrainerCallback.on_log",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L271"}}),Ht=new T({props:{name:"on_prediction_step",anchor:"transformers.TrainerCallback.on_prediction_step",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L277"}}),Gt=new T({props:{name:"on_save",anchor:"transformers.TrainerCallback.on_save",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L265"}}),Jt=new T({props:{name:"on_step_begin",anchor:"transformers.TrainerCallback.on_step_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L239"}}),Yt=new T({props:{name:"on_step_end",anchor:"transformers.TrainerCallback.on_step_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L252"}}),Xt=new T({props:{name:"on_substep_end",anchor:"transformers.TrainerCallback.on_substep_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L246"}}),Kt=new T({props:{name:"on_train_begin",anchor:"transformers.TrainerCallback.on_train_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L215"}}),Qt=new T({props:{name:"on_train_end",anchor:"transformers.TrainerCallback.on_train_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L221"}}),Zt=new zf({props:{code:`class MyCallback(TrainerCallback):
    "A callback that prints a message at the beginning of training"

    def on_train_begin(self, args, state, control, **kwargs):
        print("Starting training")


trainer = Trainer(
    model,
    args,
    train_dataset=train_dataset,
    eval_dataset=eval_dataset,
    callbacks=[MyCallback],  # We can either pass the callback class this way or an instance of it (MyCallback())
)`,highlighted:`<span class="hljs-keyword">class</span> <span class="hljs-title class_">MyCallback</span>(<span class="hljs-title class_ inherited__">TrainerCallback</span>):
    <span class="hljs-string">&quot;A callback that prints a message at the beginning of training&quot;</span>

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_train_begin</span>(<span class="hljs-params">self, args, state, control, **kwargs</span>):
        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Starting training&quot;</span>)


trainer = Trainer(
    model,
    args,
    train_dataset=train_dataset,
    eval_dataset=eval_dataset,
    callbacks=[MyCallback],  <span class="hljs-comment"># We can either pass the callback class this way or an instance of it (MyCallback())</span>
)`}}),er=new zf({props:{code:`trainer = Trainer(...)
trainer.add_callback(MyCallback)
# Alternatively, we can pass an instance of the callback class
trainer.add_callback(MyCallback())`,highlighted:`trainer = Trainer(...)
trainer.add_callback(MyCallback)
<span class="hljs-comment"># Alternatively, we can pass an instance of the callback class</span>
trainer.add_callback(MyCallback())`}}),tr=new On({}),rr=new T({props:{name:"class transformers.TrainerState",anchor:"transformers.TrainerState",parameters:[{name:"epoch",val:": typing.Optional[float] = None"},{name:"global_step",val:": int = 0"},{name:"max_steps",val:": int = 0"},{name:"num_train_epochs",val:": int = 0"},{name:"total_flos",val:": float = 0"},{name:"log_history",val:": typing.List[typing.Dict[str, float]] = None"},{name:"best_metric",val:": typing.Optional[float] = None"},{name:"best_model_checkpoint",val:": typing.Optional[str] = None"},{name:"is_local_process_zero",val:": bool = True"},{name:"is_world_process_zero",val:": bool = True"},{name:"is_hyper_param_search",val:": bool = False"},{name:"trial_name",val:": str = None"},{name:"trial_params",val:": typing.Dict[str, typing.Union[str, float, int, bool]] = None"}],parametersDescription:[{anchor:"transformers.TrainerState.epoch",description:`<strong>epoch</strong> (<code>float</code>, <em>optional</em>) &#x2014;
Only set during training, will represent the epoch the training is at (the decimal part being the
percentage of the current epoch completed).`,name:"epoch"},{anchor:"transformers.TrainerState.global_step",description:`<strong>global_step</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
During training, represents the number of update steps completed.`,name:"global_step"},{anchor:"transformers.TrainerState.max_steps",description:`<strong>max_steps</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
The number of update steps to do during the current training.`,name:"max_steps"},{anchor:"transformers.TrainerState.total_flos",description:`<strong>total_flos</strong> (<code>float</code>, <em>optional</em>, defaults to 0) &#x2014;
The total number of floating operations done by the model since the beginning of training (stored as floats
to avoid overflow).`,name:"total_flos"},{anchor:"transformers.TrainerState.log_history",description:`<strong>log_history</strong> (<code>List[Dict[str, float]]</code>, <em>optional</em>) &#x2014;
The list of logs done since the beginning of training.`,name:"log_history"},{anchor:"transformers.TrainerState.best_metric",description:`<strong>best_metric</strong> (<code>float</code>, <em>optional</em>) &#x2014;
When tracking the best model, the value of the best metric encountered so far.`,name:"best_metric"},{anchor:"transformers.TrainerState.best_model_checkpoint",description:`<strong>best_model_checkpoint</strong> (<code>str</code>, <em>optional</em>) &#x2014;
When tracking the best model, the value of the name of the checkpoint for the best model encountered so
far.`,name:"best_model_checkpoint"},{anchor:"transformers.TrainerState.is_local_process_zero",description:`<strong>is_local_process_zero</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not this process is the local (e.g., on one machine if training in a distributed fashion on
several machines) main process.`,name:"is_local_process_zero"},{anchor:"transformers.TrainerState.is_world_process_zero",description:`<strong>is_world_process_zero</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not this process is the global main process (when training in a distributed fashion on several
machines, this is only going to be <code>True</code> for one process).`,name:"is_world_process_zero"},{anchor:"transformers.TrainerState.is_hyper_param_search",description:`<strong>is_hyper_param_search</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether we are in the process of a hyper parameter search using Trainer.hyperparameter_search. This will
impact the way data will be logged in TensorBoard.`,name:"is_hyper_param_search"}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L35"}}),Ge=new dp({props:{$$slots:{default:[hp]},$$scope:{ctx:fr}}}),ar=new T({props:{name:"load_from_json",anchor:"transformers.TrainerState.load_from_json",parameters:[{name:"json_path",val:": str"}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L101"}}),or=new T({props:{name:"save_to_json",anchor:"transformers.TrainerState.save_to_json",parameters:[{name:"json_path",val:": str"}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L95"}}),lr=new On({}),ir=new T({props:{name:"class transformers.TrainerControl",anchor:"transformers.TrainerControl",parameters:[{name:"should_training_stop",val:": bool = False"},{name:"should_epoch_stop",val:": bool = False"},{name:"should_save",val:": bool = False"},{name:"should_evaluate",val:": bool = False"},{name:"should_log",val:": bool = False"}],parametersDescription:[{anchor:"transformers.TrainerControl.should_training_stop",description:`<strong>should_training_stop</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the training should be interrupted.</p>
<p>If <code>True</code>, this variable will not be set back to <code>False</code>. The training will just stop.`,name:"should_training_stop"},{anchor:"transformers.TrainerControl.should_epoch_stop",description:`<strong>should_epoch_stop</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the current epoch should be interrupted.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next epoch.`,name:"should_epoch_stop"},{anchor:"transformers.TrainerControl.should_save",description:`<strong>should_save</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the model should be saved at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_save"},{anchor:"transformers.TrainerControl.should_evaluate",description:`<strong>should_evaluate</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the model should be evaluated at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_evaluate"},{anchor:"transformers.TrainerControl.should_log",description:`<strong>should_log</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the logs should be reported at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_log"}],source:"https://github.com/huggingface/transformers/blob/vr_17013/src/transformers/trainer_callback.py#L110"}}),{c(){w=o("meta"),W=c(),A=o("h1"),D=o("a"),M=o("span"),g(C.$$.fragment),F=c(),re=o("span"),ae=a("Callbacks"),N=c(),H=o("p"),mr=a(`Callbacks are objects that can customize the behavior of the training loop in the PyTorch
`),hr=o("a"),Yo=a("Trainer"),Xo=a(` (this feature is not yet implemented in TensorFlow) that can inspect the training loop
state (for progress reporting, logging on TensorBoard or other ML platforms\u2026) and take decisions (like early
stopping).`),Pn=c(),z=o("p"),Ko=a("Callbacks are \u201Cread only\u201D pieces of code, apart from the "),pr=o("a"),Qo=a("TrainerControl"),Zo=a(` object they return, they
cannot change anything in the training loop. For customizations that require changes in the training loop, you should
subclass `),gr=o("a"),es=a("Trainer"),ts=a(" and override the methods you need (see "),ur=o("a"),rs=a("trainer"),as=a(" for examples)."),In=c(),$e=o("p"),ns=a("By default a "),br=o("a"),os=a("Trainer"),ss=a(" will use the following callbacks:"),Mn=c(),L=o("ul"),_r=o("li"),vr=o("a"),ls=a("DefaultFlowCallback"),is=a(" which handles the default behavior for logging, saving and evaluation."),cs=c(),Z=o("li"),Er=o("a"),ds=a("PrinterCallback"),fs=a(" or "),kr=o("a"),ms=a("ProgressCallback"),hs=a(` to display progress and print the
logs (the first one is used if you deactivate tqdm through the `),$r=o("a"),ps=a("TrainingArguments"),gs=a(`, otherwise
it\u2019s the second one).`),us=c(),Tr=o("li"),Cr=o("a"),bs=a("TensorBoardCallback"),_s=a(` if tensorboard is accessible (either through PyTorch >= 1.4
or tensorboardX).`),vs=c(),Te=o("li"),wr=o("a"),Es=a("WandbCallback"),ks=a(" if "),at=o("a"),$s=a("wandb"),Ts=a(" is installed."),Cs=c(),Ce=o("li"),yr=o("a"),ws=a("CometCallback"),ys=a(" if "),nt=o("a"),As=a("comet_ml"),Ds=a(" is installed."),Ls=c(),we=o("li"),Ar=o("a"),Ss=a("MLflowCallback"),xs=a(" if "),ot=o("a"),Os=a("mlflow"),Ps=a(" is installed."),Is=c(),ye=o("li"),Dr=o("a"),Ms=a("AzureMLCallback"),Fs=a(" if "),st=o("a"),Ns=a("azureml-sdk"),js=a(` is
installed.`),Ws=c(),Ae=o("li"),Lr=o("a"),zs=a("CodeCarbonCallback"),Bs=a(" if "),lt=o("a"),Vs=a("codecarbon"),Rs=a(` is
installed.`),Fn=c(),x=o("p"),qs=a("The main class that implements callbacks is "),Sr=o("a"),Us=a("TrainerCallback"),Hs=a(`. It gets the
`),xr=o("a"),Gs=a("TrainingArguments"),Js=a(" used to instantiate the "),Or=o("a"),Ys=a("Trainer"),Xs=a(`, can access that
Trainer\u2019s internal state via `),Pr=o("a"),Ks=a("TrainerState"),Qs=a(`, and can take some actions on the training loop via
`),Ir=o("a"),Zs=a("TrainerControl"),el=a("."),Nn=c(),ne=o("h2"),De=o("a"),ma=o("span"),g(it.$$.fragment),tl=c(),ha=o("span"),rl=a("Available Callbacks"),jn=c(),Le=o("p"),al=a("Here is the list of the available "),Mr=o("a"),nl=a("TrainerCallback"),ol=a(" in the library:"),Wn=c(),G=o("div"),g(ct.$$.fragment),sl=c(),oe=o("p"),ll=a("A "),Fr=o("a"),il=a("TrainerCallback"),cl=a(" that sends the logs to "),dt=o("a"),dl=a("Comet ML"),fl=a("."),ml=c(),B=o("div"),g(ft.$$.fragment),hl=c(),pa=o("p"),pl=a("Setup the optional Comet.ml integration."),gl=c(),y=o("p"),ul=a(`Environment:
COMET_MODE (`),ga=o("code"),bl=a("str"),_l=a(", "),ua=o("em"),vl=a("optional"),El=a(`):
Whether to create an online, offline experiment or disable Comet logging. Can be \u201COFFLINE\u201D, \u201CONLINE\u201D,
or \u201CDISABLED\u201D. Defaults to \u201CONLINE\u201D.
COMET_PROJECT_NAME (`),ba=o("code"),kl=a("str"),$l=a(", "),_a=o("em"),Tl=a("optional"),Cl=a(`):
Comet project name for experiments
COMET_OFFLINE_DIRECTORY (`),va=o("code"),wl=a("str"),yl=a(", "),Ea=o("em"),Al=a("optional"),Dl=a(`):
Folder to use for saving offline experiments when `),ka=o("code"),Ll=a("COMET_MODE"),Sl=a(` is \u201COFFLINE\u201D
COMET_LOG_ASSETS (`),$a=o("code"),xl=a("str"),Ol=a(", "),Ta=o("em"),Pl=a("optional"),Il=a(`):
Whether or not to log training assets (tf event logs, checkpoints, etc), to Comet. Can be \u201CTRUE\u201D, or
\u201CFALSE\u201D. Defaults to \u201CTRUE\u201D.`),Ml=c(),mt=o("p"),Fl=a(`For a number of configurable items in the environment, see
`),ht=o("a"),Nl=a("here"),jl=a("."),zn=c(),se=o("div"),g(pt.$$.fragment),Wl=c(),gt=o("p"),zl=a("A "),Nr=o("a"),Bl=a("TrainerCallback"),Vl=a(" that handles the default flow of the training loop for logs, evaluation and checkpoints."),Bn=c(),le=o("div"),g(ut.$$.fragment),Rl=c(),bt=o("p"),ql=a("A bare "),jr=o("a"),Ul=a("TrainerCallback"),Hl=a(" that just prints the logs."),Vn=c(),ie=o("div"),g(_t.$$.fragment),Gl=c(),vt=o("p"),Jl=a("A "),Wr=o("a"),Yl=a("TrainerCallback"),Xl=a(" that displays the progress of training or evaluation."),Rn=c(),J=o("div"),g(Et.$$.fragment),Kl=c(),kt=o("p"),Ql=a("A "),zr=o("a"),Zl=a("TrainerCallback"),ei=a(" that handles early stopping."),ti=c(),Y=o("p"),ri=a("This callback depends on "),Br=o("a"),ai=a("TrainingArguments"),ni=a(" argument "),Ca=o("em"),oi=a("load_best_model_at_end"),si=a(` functionality to set best_metric
in `),Vr=o("a"),li=a("TrainerState"),ii=a("."),qn=c(),ce=o("div"),g($t.$$.fragment),ci=c(),de=o("p"),di=a("A "),Rr=o("a"),fi=a("TrainerCallback"),mi=a(" that sends the logs to "),Tt=o("a"),hi=a("TensorBoard"),pi=a("."),Un=c(),X=o("div"),g(Ct.$$.fragment),gi=c(),fe=o("p"),ui=a("A "),qr=o("a"),bi=a("TrainerCallback"),_i=a(" that sends the logs to "),wt=o("a"),vi=a("Weight and Biases"),Ei=a("."),ki=c(),V=o("div"),g(yt.$$.fragment),$i=c(),At=o("p"),Ti=a("Setup the optional Weights & Biases ("),wa=o("em"),Ci=a("wandb"),wi=a(") integration."),yi=c(),Dt=o("p"),Ai=a(`One can subclass and override this method to customize the setup if needed. Find more information
`),Lt=o("a"),Di=a("here"),Li=a(`. You can also override the following environment
variables:`),Si=c(),h=o("p"),xi=a(`Environment:
WANDB_LOG_MODEL (`),ya=o("code"),Oi=a("bool"),Pi=a(", "),Aa=o("em"),Ii=a("optional"),Mi=a(", defaults to "),Da=o("code"),Fi=a("False"),Ni=a(`):
Whether or not to log model as artifact at the end of training. Use along with
`),La=o("em"),ji=a("TrainingArguments.load_best_model_at_end"),Wi=a(` to upload best model.
WANDB_WATCH (`),Sa=o("code"),zi=a("str"),Bi=a(", "),xa=o("em"),Vi=a("optional"),Ri=a(" defaults to "),Oa=o("code"),qi=a('"gradients"'),Ui=a(`):
Can be `),Pa=o("code"),Hi=a('"gradients"'),Gi=a(", "),Ia=o("code"),Ji=a('"all"'),Yi=a(" or "),Ma=o("code"),Xi=a('"false"'),Ki=a(". Set to "),Fa=o("code"),Qi=a('"false"'),Zi=a(" to disable gradient logging or "),Na=o("code"),ec=a('"all"'),tc=a(` to
log gradients and parameters.
WANDB_PROJECT (`),ja=o("code"),rc=a("str"),ac=a(", "),Wa=o("em"),nc=a("optional"),oc=a(", defaults to "),za=o("code"),sc=a('"huggingface"'),lc=a(`):
Set this to a custom string to store results in a different project.
WANDB_DISABLED (`),Ba=o("code"),ic=a("bool"),cc=a(", "),Va=o("em"),dc=a("optional"),fc=a(", defaults to "),Ra=o("code"),mc=a("False"),hc=a(`):
Whether or not to disable wandb entirely. Set `),qa=o("em"),pc=a("WANDB_DISABLED=true"),gc=a(" to disable."),Hn=c(),K=o("div"),g(St.$$.fragment),uc=c(),Q=o("p"),bc=a("A "),Ur=o("a"),_c=a("TrainerCallback"),vc=a(" that sends the logs to "),xt=o("a"),Ec=a("MLflow"),kc=a(`. Can be disabled by setting
environment variable `),Ua=o("code"),$c=a("DISABLE_MLFLOW_INTEGRATION = TRUE"),Tc=a("."),Cc=c(),R=o("div"),g(Ot.$$.fragment),wc=c(),Ha=o("p"),yc=a("Setup the optional MLflow integration."),Ac=c(),me=o("p"),Dc=a(`Environment:
HF_MLFLOW_LOG_ARTIFACTS (`),Ga=o("code"),Lc=a("str"),Sc=a(", "),Ja=o("em"),xc=a("optional"),Oc=a(`):
Whether to use MLflow .log_artifact() facility to log artifacts.`),Pc=c(),j=o("p"),Ic=a("This only makes sense if logging to a remote server, e.g. s3 or GCS. If set to "),Ya=o("code"),Mc=a("True"),Fc=a(" or "),Xa=o("em"),Nc=a("1"),jc=a(`, will copy
whatever is in `),Hr=o("a"),Wc=a("TrainingArguments"),zc=a("\u2019s "),Ka=o("code"),Bc=a("output_dir"),Vc=a(` to the local or remote artifact storage. Using it
without a remote storage will just copy the files to your artifact location.`),Gn=c(),he=o("div"),g(Pt.$$.fragment),Rc=c(),pe=o("p"),qc=a("A "),Gr=o("a"),Uc=a("TrainerCallback"),Hc=a(" that sends the logs to "),It=o("a"),Gc=a("AzureML"),Jc=a("."),Jn=c(),ge=o("div"),g(Mt.$$.fragment),Yc=c(),Ft=o("p"),Xc=a("A "),Jr=o("a"),Kc=a("TrainerCallback"),Qc=a(" that tracks the CO2 emission of training."),Yn=c(),ue=o("h2"),Se=o("a"),Qa=o("span"),g(Nt.$$.fragment),Zc=c(),Za=o("span"),ed=a("TrainerCallback"),Xn=c(),k=o("div"),g(jt.$$.fragment),td=c(),en=o("p"),rd=a(`A class for objects that will inspect the state of the training loop at some events and take some decisions. At
each of those events the following arguments are available:`),ad=c(),Wt=o("p"),nd=a("The "),tn=o("code"),od=a("control"),sd=a(` object is the only one that can be changed by the callback, in which case the event that changes it
should return the modified version.`),ld=c(),P=o("p"),id=a("The argument "),rn=o("code"),cd=a("args"),dd=a(", "),an=o("code"),fd=a("state"),md=a(" and "),nn=o("code"),hd=a("control"),pd=a(" are positionals for all events, all the others are grouped in "),on=o("code"),gd=a("kwargs"),ud=a(`.
You can unpack the ones you need in the signature of the event using them. As an example, see the code of the
simple `),sn=o("code"),bd=a("PrinterCallback"),_d=a("."),vd=c(),g(xe.$$.fragment),Ed=c(),Oe=o("div"),g(zt.$$.fragment),kd=c(),ln=o("p"),$d=a("Event called at the beginning of an epoch."),Td=c(),Pe=o("div"),g(Bt.$$.fragment),Cd=c(),cn=o("p"),wd=a("Event called at the end of an epoch."),yd=c(),Ie=o("div"),g(Vt.$$.fragment),Ad=c(),dn=o("p"),Dd=a("Event called after an evaluation phase."),Ld=c(),Me=o("div"),g(Rt.$$.fragment),Sd=c(),qt=o("p"),xd=a("Event called at the end of the initialization of the "),Yr=o("a"),Od=a("Trainer"),Pd=a("."),Id=c(),Fe=o("div"),g(Ut.$$.fragment),Md=c(),fn=o("p"),Fd=a("Event called after logging the last logs."),Nd=c(),Ne=o("div"),g(Ht.$$.fragment),jd=c(),mn=o("p"),Wd=a("Event called after a prediction step."),zd=c(),je=o("div"),g(Gt.$$.fragment),Bd=c(),hn=o("p"),Vd=a("Event called after a checkpoint save."),Rd=c(),We=o("div"),g(Jt.$$.fragment),qd=c(),pn=o("p"),Ud=a(`Event called at the beginning of a training step. If using gradient accumulation, one training step might take
several inputs.`),Hd=c(),ze=o("div"),g(Yt.$$.fragment),Gd=c(),gn=o("p"),Jd=a(`Event called at the end of a training step. If using gradient accumulation, one training step might take
several inputs.`),Yd=c(),Be=o("div"),g(Xt.$$.fragment),Xd=c(),un=o("p"),Kd=a("Event called at the end of an substep during gradient accumulation."),Qd=c(),Ve=o("div"),g(Kt.$$.fragment),Zd=c(),bn=o("p"),ef=a("Event called at the beginning of training."),tf=c(),Re=o("div"),g(Qt.$$.fragment),rf=c(),_n=o("p"),af=a("Event called at the end of training."),Kn=c(),qe=o("p"),nf=a("Here is an example of how to register a custom callback with the PyTorch "),Xr=o("a"),of=a("Trainer"),sf=a(":"),Qn=c(),g(Zt.$$.fragment),Zn=c(),Ue=o("p"),lf=a("Another way to register a callback is to call "),vn=o("code"),cf=a("trainer.add_callback()"),df=a(" as follows:"),eo=c(),g(er.$$.fragment),to=c(),be=o("h2"),He=o("a"),En=o("span"),g(tr.$$.fragment),ff=c(),kn=o("span"),mf=a("TrainerState"),ro=c(),I=o("div"),g(rr.$$.fragment),hf=c(),_e=o("p"),pf=a("A class containing the "),Kr=o("a"),gf=a("Trainer"),uf=a(` inner state that will be saved along the model and optimizer when checkpointing
and passed to the `),Qr=o("a"),bf=a("TrainerCallback"),_f=a("."),vf=c(),g(Ge.$$.fragment),Ef=c(),Je=o("div"),g(ar.$$.fragment),kf=c(),nr=o("p"),$f=a("Create an instance from the content of "),$n=o("code"),Tf=a("json_path"),Cf=a("."),wf=c(),Ye=o("div"),g(or.$$.fragment),yf=c(),sr=o("p"),Af=a("Save the content of this instance in JSON format inside "),Tn=o("code"),Df=a("json_path"),Lf=a("."),ao=c(),ve=o("h2"),Xe=o("a"),Cn=o("span"),g(lr.$$.fragment),Sf=c(),wn=o("span"),xf=a("TrainerControl"),no=c(),Ee=o("div"),g(ir.$$.fragment),Of=c(),ke=o("p"),Pf=a("A class that handles the "),Zr=o("a"),If=a("Trainer"),Mf=a(" control flow. This class is used by the "),ea=o("a"),Ff=a("TrainerCallback"),Nf=a(` to activate some
switches in the training loop.`),this.h()},l(r){const f=lp('[data-svelte="svelte-1phssyn"]',document.head);w=s(f,"META",{name:!0,content:!0}),f.forEach(t),W=d(r),A=s(r,"H1",{class:!0});var cr=l(A);D=s(cr,"A",{id:!0,class:!0,href:!0});var yn=l(D);M=s(yn,"SPAN",{});var Bf=l(M);u(C.$$.fragment,Bf),Bf.forEach(t),yn.forEach(t),F=d(cr),re=s(cr,"SPAN",{});var Vf=l(re);ae=n(Vf,"Callbacks"),Vf.forEach(t),cr.forEach(t),N=d(r),H=s(r,"P",{});var so=l(H);mr=n(so,`Callbacks are objects that can customize the behavior of the training loop in the PyTorch
`),hr=s(so,"A",{href:!0});var Rf=l(hr);Yo=n(Rf,"Trainer"),Rf.forEach(t),Xo=n(so,` (this feature is not yet implemented in TensorFlow) that can inspect the training loop
state (for progress reporting, logging on TensorBoard or other ML platforms\u2026) and take decisions (like early
stopping).`),so.forEach(t),Pn=d(r),z=s(r,"P",{});var Ke=l(z);Ko=n(Ke,"Callbacks are \u201Cread only\u201D pieces of code, apart from the "),pr=s(Ke,"A",{href:!0});var qf=l(pr);Qo=n(qf,"TrainerControl"),qf.forEach(t),Zo=n(Ke,` object they return, they
cannot change anything in the training loop. For customizations that require changes in the training loop, you should
subclass `),gr=s(Ke,"A",{href:!0});var Uf=l(gr);es=n(Uf,"Trainer"),Uf.forEach(t),ts=n(Ke," and override the methods you need (see "),ur=s(Ke,"A",{href:!0});var Hf=l(ur);rs=n(Hf,"trainer"),Hf.forEach(t),as=n(Ke," for examples)."),Ke.forEach(t),In=d(r),$e=s(r,"P",{});var lo=l($e);ns=n(lo,"By default a "),br=s(lo,"A",{href:!0});var Gf=l(br);os=n(Gf,"Trainer"),Gf.forEach(t),ss=n(lo," will use the following callbacks:"),lo.forEach(t),Mn=d(r),L=s(r,"UL",{});var O=l(L);_r=s(O,"LI",{});var jf=l(_r);vr=s(jf,"A",{href:!0});var Jf=l(vr);ls=n(Jf,"DefaultFlowCallback"),Jf.forEach(t),is=n(jf," which handles the default behavior for logging, saving and evaluation."),jf.forEach(t),cs=d(O),Z=s(O,"LI",{});var dr=l(Z);Er=s(dr,"A",{href:!0});var Yf=l(Er);ds=n(Yf,"PrinterCallback"),Yf.forEach(t),fs=n(dr," or "),kr=s(dr,"A",{href:!0});var Xf=l(kr);ms=n(Xf,"ProgressCallback"),Xf.forEach(t),hs=n(dr,` to display progress and print the
logs (the first one is used if you deactivate tqdm through the `),$r=s(dr,"A",{href:!0});var Kf=l($r);ps=n(Kf,"TrainingArguments"),Kf.forEach(t),gs=n(dr,`, otherwise
it\u2019s the second one).`),dr.forEach(t),us=d(O),Tr=s(O,"LI",{});var Wf=l(Tr);Cr=s(Wf,"A",{href:!0});var Qf=l(Cr);bs=n(Qf,"TensorBoardCallback"),Qf.forEach(t),_s=n(Wf,` if tensorboard is accessible (either through PyTorch >= 1.4
or tensorboardX).`),Wf.forEach(t),vs=d(O),Te=s(O,"LI",{});var An=l(Te);wr=s(An,"A",{href:!0});var Zf=l(wr);Es=n(Zf,"WandbCallback"),Zf.forEach(t),ks=n(An," if "),at=s(An,"A",{href:!0,rel:!0});var em=l(at);$s=n(em,"wandb"),em.forEach(t),Ts=n(An," is installed."),An.forEach(t),Cs=d(O),Ce=s(O,"LI",{});var Dn=l(Ce);yr=s(Dn,"A",{href:!0});var tm=l(yr);ws=n(tm,"CometCallback"),tm.forEach(t),ys=n(Dn," if "),nt=s(Dn,"A",{href:!0,rel:!0});var rm=l(nt);As=n(rm,"comet_ml"),rm.forEach(t),Ds=n(Dn," is installed."),Dn.forEach(t),Ls=d(O),we=s(O,"LI",{});var Ln=l(we);Ar=s(Ln,"A",{href:!0});var am=l(Ar);Ss=n(am,"MLflowCallback"),am.forEach(t),xs=n(Ln," if "),ot=s(Ln,"A",{href:!0,rel:!0});var nm=l(ot);Os=n(nm,"mlflow"),nm.forEach(t),Ps=n(Ln," is installed."),Ln.forEach(t),Is=d(O),ye=s(O,"LI",{});var Sn=l(ye);Dr=s(Sn,"A",{href:!0});var om=l(Dr);Ms=n(om,"AzureMLCallback"),om.forEach(t),Fs=n(Sn," if "),st=s(Sn,"A",{href:!0,rel:!0});var sm=l(st);Ns=n(sm,"azureml-sdk"),sm.forEach(t),js=n(Sn,` is
installed.`),Sn.forEach(t),Ws=d(O),Ae=s(O,"LI",{});var xn=l(Ae);Lr=s(xn,"A",{href:!0});var lm=l(Lr);zs=n(lm,"CodeCarbonCallback"),lm.forEach(t),Bs=n(xn," if "),lt=s(xn,"A",{href:!0,rel:!0});var im=l(lt);Vs=n(im,"codecarbon"),im.forEach(t),Rs=n(xn,` is
installed.`),xn.forEach(t),O.forEach(t),Fn=d(r),x=s(r,"P",{});var q=l(x);qs=n(q,"The main class that implements callbacks is "),Sr=s(q,"A",{href:!0});var cm=l(Sr);Us=n(cm,"TrainerCallback"),cm.forEach(t),Hs=n(q,`. It gets the
`),xr=s(q,"A",{href:!0});var dm=l(xr);Gs=n(dm,"TrainingArguments"),dm.forEach(t),Js=n(q," used to instantiate the "),Or=s(q,"A",{href:!0});var fm=l(Or);Ys=n(fm,"Trainer"),fm.forEach(t),Xs=n(q,`, can access that
Trainer\u2019s internal state via `),Pr=s(q,"A",{href:!0});var mm=l(Pr);Ks=n(mm,"TrainerState"),mm.forEach(t),Qs=n(q,`, and can take some actions on the training loop via
`),Ir=s(q,"A",{href:!0});var hm=l(Ir);Zs=n(hm,"TrainerControl"),hm.forEach(t),el=n(q,"."),q.forEach(t),Nn=d(r),ne=s(r,"H2",{class:!0});var io=l(ne);De=s(io,"A",{id:!0,class:!0,href:!0});var pm=l(De);ma=s(pm,"SPAN",{});var gm=l(ma);u(it.$$.fragment,gm),gm.forEach(t),pm.forEach(t),tl=d(io),ha=s(io,"SPAN",{});var um=l(ha);rl=n(um,"Available Callbacks"),um.forEach(t),io.forEach(t),jn=d(r),Le=s(r,"P",{});var co=l(Le);al=n(co,"Here is the list of the available "),Mr=s(co,"A",{href:!0});var bm=l(Mr);nl=n(bm,"TrainerCallback"),bm.forEach(t),ol=n(co," in the library:"),co.forEach(t),Wn=d(r),G=s(r,"DIV",{class:!0});var ta=l(G);u(ct.$$.fragment,ta),sl=d(ta),oe=s(ta,"P",{});var ra=l(oe);ll=n(ra,"A "),Fr=s(ra,"A",{href:!0});var _m=l(Fr);il=n(_m,"TrainerCallback"),_m.forEach(t),cl=n(ra," that sends the logs to "),dt=s(ra,"A",{href:!0,rel:!0});var vm=l(dt);dl=n(vm,"Comet ML"),vm.forEach(t),fl=n(ra,"."),ra.forEach(t),ml=d(ta),B=s(ta,"DIV",{class:!0});var Qe=l(B);u(ft.$$.fragment,Qe),hl=d(Qe),pa=s(Qe,"P",{});var Em=l(pa);pl=n(Em,"Setup the optional Comet.ml integration."),Em.forEach(t),gl=d(Qe),y=s(Qe,"P",{});var S=l(y);ul=n(S,`Environment:
COMET_MODE (`),ga=s(S,"CODE",{});var km=l(ga);bl=n(km,"str"),km.forEach(t),_l=n(S,", "),ua=s(S,"EM",{});var $m=l(ua);vl=n($m,"optional"),$m.forEach(t),El=n(S,`):
Whether to create an online, offline experiment or disable Comet logging. Can be \u201COFFLINE\u201D, \u201CONLINE\u201D,
or \u201CDISABLED\u201D. Defaults to \u201CONLINE\u201D.
COMET_PROJECT_NAME (`),ba=s(S,"CODE",{});var Tm=l(ba);kl=n(Tm,"str"),Tm.forEach(t),$l=n(S,", "),_a=s(S,"EM",{});var Cm=l(_a);Tl=n(Cm,"optional"),Cm.forEach(t),Cl=n(S,`):
Comet project name for experiments
COMET_OFFLINE_DIRECTORY (`),va=s(S,"CODE",{});var wm=l(va);wl=n(wm,"str"),wm.forEach(t),yl=n(S,", "),Ea=s(S,"EM",{});var ym=l(Ea);Al=n(ym,"optional"),ym.forEach(t),Dl=n(S,`):
Folder to use for saving offline experiments when `),ka=s(S,"CODE",{});var Am=l(ka);Ll=n(Am,"COMET_MODE"),Am.forEach(t),Sl=n(S,` is \u201COFFLINE\u201D
COMET_LOG_ASSETS (`),$a=s(S,"CODE",{});var Dm=l($a);xl=n(Dm,"str"),Dm.forEach(t),Ol=n(S,", "),Ta=s(S,"EM",{});var Lm=l(Ta);Pl=n(Lm,"optional"),Lm.forEach(t),Il=n(S,`):
Whether or not to log training assets (tf event logs, checkpoints, etc), to Comet. Can be \u201CTRUE\u201D, or
\u201CFALSE\u201D. Defaults to \u201CTRUE\u201D.`),S.forEach(t),Ml=d(Qe),mt=s(Qe,"P",{});var fo=l(mt);Fl=n(fo,`For a number of configurable items in the environment, see
`),ht=s(fo,"A",{href:!0,rel:!0});var Sm=l(ht);Nl=n(Sm,"here"),Sm.forEach(t),jl=n(fo,"."),fo.forEach(t),Qe.forEach(t),ta.forEach(t),zn=d(r),se=s(r,"DIV",{class:!0});var mo=l(se);u(pt.$$.fragment,mo),Wl=d(mo),gt=s(mo,"P",{});var ho=l(gt);zl=n(ho,"A "),Nr=s(ho,"A",{href:!0});var xm=l(Nr);Bl=n(xm,"TrainerCallback"),xm.forEach(t),Vl=n(ho," that handles the default flow of the training loop for logs, evaluation and checkpoints."),ho.forEach(t),mo.forEach(t),Bn=d(r),le=s(r,"DIV",{class:!0});var po=l(le);u(ut.$$.fragment,po),Rl=d(po),bt=s(po,"P",{});var go=l(bt);ql=n(go,"A bare "),jr=s(go,"A",{href:!0});var Om=l(jr);Ul=n(Om,"TrainerCallback"),Om.forEach(t),Hl=n(go," that just prints the logs."),go.forEach(t),po.forEach(t),Vn=d(r),ie=s(r,"DIV",{class:!0});var uo=l(ie);u(_t.$$.fragment,uo),Gl=d(uo),vt=s(uo,"P",{});var bo=l(vt);Jl=n(bo,"A "),Wr=s(bo,"A",{href:!0});var Pm=l(Wr);Yl=n(Pm,"TrainerCallback"),Pm.forEach(t),Xl=n(bo," that displays the progress of training or evaluation."),bo.forEach(t),uo.forEach(t),Rn=d(r),J=s(r,"DIV",{class:!0});var aa=l(J);u(Et.$$.fragment,aa),Kl=d(aa),kt=s(aa,"P",{});var _o=l(kt);Ql=n(_o,"A "),zr=s(_o,"A",{href:!0});var Im=l(zr);Zl=n(Im,"TrainerCallback"),Im.forEach(t),ei=n(_o," that handles early stopping."),_o.forEach(t),ti=d(aa),Y=s(aa,"P",{});var Ze=l(Y);ri=n(Ze,"This callback depends on "),Br=s(Ze,"A",{href:!0});var Mm=l(Br);ai=n(Mm,"TrainingArguments"),Mm.forEach(t),ni=n(Ze," argument "),Ca=s(Ze,"EM",{});var Fm=l(Ca);oi=n(Fm,"load_best_model_at_end"),Fm.forEach(t),si=n(Ze,` functionality to set best_metric
in `),Vr=s(Ze,"A",{href:!0});var Nm=l(Vr);li=n(Nm,"TrainerState"),Nm.forEach(t),ii=n(Ze,"."),Ze.forEach(t),aa.forEach(t),qn=d(r),ce=s(r,"DIV",{class:!0});var vo=l(ce);u($t.$$.fragment,vo),ci=d(vo),de=s(vo,"P",{});var na=l(de);di=n(na,"A "),Rr=s(na,"A",{href:!0});var jm=l(Rr);fi=n(jm,"TrainerCallback"),jm.forEach(t),mi=n(na," that sends the logs to "),Tt=s(na,"A",{href:!0,rel:!0});var Wm=l(Tt);hi=n(Wm,"TensorBoard"),Wm.forEach(t),pi=n(na,"."),na.forEach(t),vo.forEach(t),Un=d(r),X=s(r,"DIV",{class:!0});var oa=l(X);u(Ct.$$.fragment,oa),gi=d(oa),fe=s(oa,"P",{});var sa=l(fe);ui=n(sa,"A "),qr=s(sa,"A",{href:!0});var zm=l(qr);bi=n(zm,"TrainerCallback"),zm.forEach(t),_i=n(sa," that sends the logs to "),wt=s(sa,"A",{href:!0,rel:!0});var Bm=l(wt);vi=n(Bm,"Weight and Biases"),Bm.forEach(t),Ei=n(sa,"."),sa.forEach(t),ki=d(oa),V=s(oa,"DIV",{class:!0});var et=l(V);u(yt.$$.fragment,et),$i=d(et),At=s(et,"P",{});var Eo=l(At);Ti=n(Eo,"Setup the optional Weights & Biases ("),wa=s(Eo,"EM",{});var Vm=l(wa);Ci=n(Vm,"wandb"),Vm.forEach(t),wi=n(Eo,") integration."),Eo.forEach(t),yi=d(et),Dt=s(et,"P",{});var ko=l(Dt);Ai=n(ko,`One can subclass and override this method to customize the setup if needed. Find more information
`),Lt=s(ko,"A",{href:!0,rel:!0});var Rm=l(Lt);Di=n(Rm,"here"),Rm.forEach(t),Li=n(ko,`. You can also override the following environment
variables:`),ko.forEach(t),Si=d(et),h=s(et,"P",{});var p=l(h);xi=n(p,`Environment:
WANDB_LOG_MODEL (`),ya=s(p,"CODE",{});var qm=l(ya);Oi=n(qm,"bool"),qm.forEach(t),Pi=n(p,", "),Aa=s(p,"EM",{});var Um=l(Aa);Ii=n(Um,"optional"),Um.forEach(t),Mi=n(p,", defaults to "),Da=s(p,"CODE",{});var Hm=l(Da);Fi=n(Hm,"False"),Hm.forEach(t),Ni=n(p,`):
Whether or not to log model as artifact at the end of training. Use along with
`),La=s(p,"EM",{});var Gm=l(La);ji=n(Gm,"TrainingArguments.load_best_model_at_end"),Gm.forEach(t),Wi=n(p,` to upload best model.
WANDB_WATCH (`),Sa=s(p,"CODE",{});var Jm=l(Sa);zi=n(Jm,"str"),Jm.forEach(t),Bi=n(p,", "),xa=s(p,"EM",{});var Ym=l(xa);Vi=n(Ym,"optional"),Ym.forEach(t),Ri=n(p," defaults to "),Oa=s(p,"CODE",{});var Xm=l(Oa);qi=n(Xm,'"gradients"'),Xm.forEach(t),Ui=n(p,`):
Can be `),Pa=s(p,"CODE",{});var Km=l(Pa);Hi=n(Km,'"gradients"'),Km.forEach(t),Gi=n(p,", "),Ia=s(p,"CODE",{});var Qm=l(Ia);Ji=n(Qm,'"all"'),Qm.forEach(t),Yi=n(p," or "),Ma=s(p,"CODE",{});var Zm=l(Ma);Xi=n(Zm,'"false"'),Zm.forEach(t),Ki=n(p,". Set to "),Fa=s(p,"CODE",{});var eh=l(Fa);Qi=n(eh,'"false"'),eh.forEach(t),Zi=n(p," to disable gradient logging or "),Na=s(p,"CODE",{});var th=l(Na);ec=n(th,'"all"'),th.forEach(t),tc=n(p,` to
log gradients and parameters.
WANDB_PROJECT (`),ja=s(p,"CODE",{});var rh=l(ja);rc=n(rh,"str"),rh.forEach(t),ac=n(p,", "),Wa=s(p,"EM",{});var ah=l(Wa);nc=n(ah,"optional"),ah.forEach(t),oc=n(p,", defaults to "),za=s(p,"CODE",{});var nh=l(za);sc=n(nh,'"huggingface"'),nh.forEach(t),lc=n(p,`):
Set this to a custom string to store results in a different project.
WANDB_DISABLED (`),Ba=s(p,"CODE",{});var oh=l(Ba);ic=n(oh,"bool"),oh.forEach(t),cc=n(p,", "),Va=s(p,"EM",{});var sh=l(Va);dc=n(sh,"optional"),sh.forEach(t),fc=n(p,", defaults to "),Ra=s(p,"CODE",{});var lh=l(Ra);mc=n(lh,"False"),lh.forEach(t),hc=n(p,`):
Whether or not to disable wandb entirely. Set `),qa=s(p,"EM",{});var ih=l(qa);pc=n(ih,"WANDB_DISABLED=true"),ih.forEach(t),gc=n(p," to disable."),p.forEach(t),et.forEach(t),oa.forEach(t),Hn=d(r),K=s(r,"DIV",{class:!0});var la=l(K);u(St.$$.fragment,la),uc=d(la),Q=s(la,"P",{});var tt=l(Q);bc=n(tt,"A "),Ur=s(tt,"A",{href:!0});var ch=l(Ur);_c=n(ch,"TrainerCallback"),ch.forEach(t),vc=n(tt," that sends the logs to "),xt=s(tt,"A",{href:!0,rel:!0});var dh=l(xt);Ec=n(dh,"MLflow"),dh.forEach(t),kc=n(tt,`. Can be disabled by setting
environment variable `),Ua=s(tt,"CODE",{});var fh=l(Ua);$c=n(fh,"DISABLE_MLFLOW_INTEGRATION = TRUE"),fh.forEach(t),Tc=n(tt,"."),tt.forEach(t),Cc=d(la),R=s(la,"DIV",{class:!0});var rt=l(R);u(Ot.$$.fragment,rt),wc=d(rt),Ha=s(rt,"P",{});var mh=l(Ha);yc=n(mh,"Setup the optional MLflow integration."),mh.forEach(t),Ac=d(rt),me=s(rt,"P",{});var ia=l(me);Dc=n(ia,`Environment:
HF_MLFLOW_LOG_ARTIFACTS (`),Ga=s(ia,"CODE",{});var hh=l(Ga);Lc=n(hh,"str"),hh.forEach(t),Sc=n(ia,", "),Ja=s(ia,"EM",{});var ph=l(Ja);xc=n(ph,"optional"),ph.forEach(t),Oc=n(ia,`):
Whether to use MLflow .log_artifact() facility to log artifacts.`),ia.forEach(t),Pc=d(rt),j=s(rt,"P",{});var ee=l(j);Ic=n(ee,"This only makes sense if logging to a remote server, e.g. s3 or GCS. If set to "),Ya=s(ee,"CODE",{});var gh=l(Ya);Mc=n(gh,"True"),gh.forEach(t),Fc=n(ee," or "),Xa=s(ee,"EM",{});var uh=l(Xa);Nc=n(uh,"1"),uh.forEach(t),jc=n(ee,`, will copy
whatever is in `),Hr=s(ee,"A",{href:!0});var bh=l(Hr);Wc=n(bh,"TrainingArguments"),bh.forEach(t),zc=n(ee,"\u2019s "),Ka=s(ee,"CODE",{});var _h=l(Ka);Bc=n(_h,"output_dir"),_h.forEach(t),Vc=n(ee,` to the local or remote artifact storage. Using it
without a remote storage will just copy the files to your artifact location.`),ee.forEach(t),rt.forEach(t),la.forEach(t),Gn=d(r),he=s(r,"DIV",{class:!0});var $o=l(he);u(Pt.$$.fragment,$o),Rc=d($o),pe=s($o,"P",{});var ca=l(pe);qc=n(ca,"A "),Gr=s(ca,"A",{href:!0});var vh=l(Gr);Uc=n(vh,"TrainerCallback"),vh.forEach(t),Hc=n(ca," that sends the logs to "),It=s(ca,"A",{href:!0,rel:!0});var Eh=l(It);Gc=n(Eh,"AzureML"),Eh.forEach(t),Jc=n(ca,"."),ca.forEach(t),$o.forEach(t),Jn=d(r),ge=s(r,"DIV",{class:!0});var To=l(ge);u(Mt.$$.fragment,To),Yc=d(To),Ft=s(To,"P",{});var Co=l(Ft);Xc=n(Co,"A "),Jr=s(Co,"A",{href:!0});var kh=l(Jr);Kc=n(kh,"TrainerCallback"),kh.forEach(t),Qc=n(Co," that tracks the CO2 emission of training."),Co.forEach(t),To.forEach(t),Yn=d(r),ue=s(r,"H2",{class:!0});var wo=l(ue);Se=s(wo,"A",{id:!0,class:!0,href:!0});var $h=l(Se);Qa=s($h,"SPAN",{});var Th=l(Qa);u(Nt.$$.fragment,Th),Th.forEach(t),$h.forEach(t),Zc=d(wo),Za=s(wo,"SPAN",{});var Ch=l(Za);ed=n(Ch,"TrainerCallback"),Ch.forEach(t),wo.forEach(t),Xn=d(r),k=s(r,"DIV",{class:!0});var $=l(k);u(jt.$$.fragment,$),td=d($),en=s($,"P",{});var wh=l(en);rd=n(wh,`A class for objects that will inspect the state of the training loop at some events and take some decisions. At
each of those events the following arguments are available:`),wh.forEach(t),ad=d($),Wt=s($,"P",{});var yo=l(Wt);nd=n(yo,"The "),tn=s(yo,"CODE",{});var yh=l(tn);od=n(yh,"control"),yh.forEach(t),sd=n(yo,` object is the only one that can be changed by the callback, in which case the event that changes it
should return the modified version.`),yo.forEach(t),ld=d($),P=s($,"P",{});var U=l(P);id=n(U,"The argument "),rn=s(U,"CODE",{});var Ah=l(rn);cd=n(Ah,"args"),Ah.forEach(t),dd=n(U,", "),an=s(U,"CODE",{});var Dh=l(an);fd=n(Dh,"state"),Dh.forEach(t),md=n(U," and "),nn=s(U,"CODE",{});var Lh=l(nn);hd=n(Lh,"control"),Lh.forEach(t),pd=n(U," are positionals for all events, all the others are grouped in "),on=s(U,"CODE",{});var Sh=l(on);gd=n(Sh,"kwargs"),Sh.forEach(t),ud=n(U,`.
You can unpack the ones you need in the signature of the event using them. As an example, see the code of the
simple `),sn=s(U,"CODE",{});var xh=l(sn);bd=n(xh,"PrinterCallback"),xh.forEach(t),_d=n(U,"."),U.forEach(t),vd=d($),u(xe.$$.fragment,$),Ed=d($),Oe=s($,"DIV",{class:!0});var Ao=l(Oe);u(zt.$$.fragment,Ao),kd=d(Ao),ln=s(Ao,"P",{});var Oh=l(ln);$d=n(Oh,"Event called at the beginning of an epoch."),Oh.forEach(t),Ao.forEach(t),Td=d($),Pe=s($,"DIV",{class:!0});var Do=l(Pe);u(Bt.$$.fragment,Do),Cd=d(Do),cn=s(Do,"P",{});var Ph=l(cn);wd=n(Ph,"Event called at the end of an epoch."),Ph.forEach(t),Do.forEach(t),yd=d($),Ie=s($,"DIV",{class:!0});var Lo=l(Ie);u(Vt.$$.fragment,Lo),Ad=d(Lo),dn=s(Lo,"P",{});var Ih=l(dn);Dd=n(Ih,"Event called after an evaluation phase."),Ih.forEach(t),Lo.forEach(t),Ld=d($),Me=s($,"DIV",{class:!0});var So=l(Me);u(Rt.$$.fragment,So),Sd=d(So),qt=s(So,"P",{});var xo=l(qt);xd=n(xo,"Event called at the end of the initialization of the "),Yr=s(xo,"A",{href:!0});var Mh=l(Yr);Od=n(Mh,"Trainer"),Mh.forEach(t),Pd=n(xo,"."),xo.forEach(t),So.forEach(t),Id=d($),Fe=s($,"DIV",{class:!0});var Oo=l(Fe);u(Ut.$$.fragment,Oo),Md=d(Oo),fn=s(Oo,"P",{});var Fh=l(fn);Fd=n(Fh,"Event called after logging the last logs."),Fh.forEach(t),Oo.forEach(t),Nd=d($),Ne=s($,"DIV",{class:!0});var Po=l(Ne);u(Ht.$$.fragment,Po),jd=d(Po),mn=s(Po,"P",{});var Nh=l(mn);Wd=n(Nh,"Event called after a prediction step."),Nh.forEach(t),Po.forEach(t),zd=d($),je=s($,"DIV",{class:!0});var Io=l(je);u(Gt.$$.fragment,Io),Bd=d(Io),hn=s(Io,"P",{});var jh=l(hn);Vd=n(jh,"Event called after a checkpoint save."),jh.forEach(t),Io.forEach(t),Rd=d($),We=s($,"DIV",{class:!0});var Mo=l(We);u(Jt.$$.fragment,Mo),qd=d(Mo),pn=s(Mo,"P",{});var Wh=l(pn);Ud=n(Wh,`Event called at the beginning of a training step. If using gradient accumulation, one training step might take
several inputs.`),Wh.forEach(t),Mo.forEach(t),Hd=d($),ze=s($,"DIV",{class:!0});var Fo=l(ze);u(Yt.$$.fragment,Fo),Gd=d(Fo),gn=s(Fo,"P",{});var zh=l(gn);Jd=n(zh,`Event called at the end of a training step. If using gradient accumulation, one training step might take
several inputs.`),zh.forEach(t),Fo.forEach(t),Yd=d($),Be=s($,"DIV",{class:!0});var No=l(Be);u(Xt.$$.fragment,No),Xd=d(No),un=s(No,"P",{});var Bh=l(un);Kd=n(Bh,"Event called at the end of an substep during gradient accumulation."),Bh.forEach(t),No.forEach(t),Qd=d($),Ve=s($,"DIV",{class:!0});var jo=l(Ve);u(Kt.$$.fragment,jo),Zd=d(jo),bn=s(jo,"P",{});var Vh=l(bn);ef=n(Vh,"Event called at the beginning of training."),Vh.forEach(t),jo.forEach(t),tf=d($),Re=s($,"DIV",{class:!0});var Wo=l(Re);u(Qt.$$.fragment,Wo),rf=d(Wo),_n=s(Wo,"P",{});var Rh=l(_n);af=n(Rh,"Event called at the end of training."),Rh.forEach(t),Wo.forEach(t),$.forEach(t),Kn=d(r),qe=s(r,"P",{});var zo=l(qe);nf=n(zo,"Here is an example of how to register a custom callback with the PyTorch "),Xr=s(zo,"A",{href:!0});var qh=l(Xr);of=n(qh,"Trainer"),qh.forEach(t),sf=n(zo,":"),zo.forEach(t),Qn=d(r),u(Zt.$$.fragment,r),Zn=d(r),Ue=s(r,"P",{});var Bo=l(Ue);lf=n(Bo,"Another way to register a callback is to call "),vn=s(Bo,"CODE",{});var Uh=l(vn);cf=n(Uh,"trainer.add_callback()"),Uh.forEach(t),df=n(Bo," as follows:"),Bo.forEach(t),eo=d(r),u(er.$$.fragment,r),to=d(r),be=s(r,"H2",{class:!0});var Vo=l(be);He=s(Vo,"A",{id:!0,class:!0,href:!0});var Hh=l(He);En=s(Hh,"SPAN",{});var Gh=l(En);u(tr.$$.fragment,Gh),Gh.forEach(t),Hh.forEach(t),ff=d(Vo),kn=s(Vo,"SPAN",{});var Jh=l(kn);mf=n(Jh,"TrainerState"),Jh.forEach(t),Vo.forEach(t),ro=d(r),I=s(r,"DIV",{class:!0});var te=l(I);u(rr.$$.fragment,te),hf=d(te),_e=s(te,"P",{});var da=l(_e);pf=n(da,"A class containing the "),Kr=s(da,"A",{href:!0});var Yh=l(Kr);gf=n(Yh,"Trainer"),Yh.forEach(t),uf=n(da,` inner state that will be saved along the model and optimizer when checkpointing
and passed to the `),Qr=s(da,"A",{href:!0});var Xh=l(Qr);bf=n(Xh,"TrainerCallback"),Xh.forEach(t),_f=n(da,"."),da.forEach(t),vf=d(te),u(Ge.$$.fragment,te),Ef=d(te),Je=s(te,"DIV",{class:!0});var Ro=l(Je);u(ar.$$.fragment,Ro),kf=d(Ro),nr=s(Ro,"P",{});var qo=l(nr);$f=n(qo,"Create an instance from the content of "),$n=s(qo,"CODE",{});var Kh=l($n);Tf=n(Kh,"json_path"),Kh.forEach(t),Cf=n(qo,"."),qo.forEach(t),Ro.forEach(t),wf=d(te),Ye=s(te,"DIV",{class:!0});var Uo=l(Ye);u(or.$$.fragment,Uo),yf=d(Uo),sr=s(Uo,"P",{});var Ho=l(sr);Af=n(Ho,"Save the content of this instance in JSON format inside "),Tn=s(Ho,"CODE",{});var Qh=l(Tn);Df=n(Qh,"json_path"),Qh.forEach(t),Lf=n(Ho,"."),Ho.forEach(t),Uo.forEach(t),te.forEach(t),ao=d(r),ve=s(r,"H2",{class:!0});var Go=l(ve);Xe=s(Go,"A",{id:!0,class:!0,href:!0});var Zh=l(Xe);Cn=s(Zh,"SPAN",{});var ep=l(Cn);u(lr.$$.fragment,ep),ep.forEach(t),Zh.forEach(t),Sf=d(Go),wn=s(Go,"SPAN",{});var tp=l(wn);xf=n(tp,"TrainerControl"),tp.forEach(t),Go.forEach(t),no=d(r),Ee=s(r,"DIV",{class:!0});var Jo=l(Ee);u(ir.$$.fragment,Jo),Of=d(Jo),ke=s(Jo,"P",{});var fa=l(ke);Pf=n(fa,"A class that handles the "),Zr=s(fa,"A",{href:!0});var rp=l(Zr);If=n(rp,"Trainer"),rp.forEach(t),Mf=n(fa," control flow. This class is used by the "),ea=s(fa,"A",{href:!0});var ap=l(ea);Ff=n(ap,"TrainerCallback"),ap.forEach(t),Nf=n(fa,` to activate some
switches in the training loop.`),fa.forEach(t),Jo.forEach(t),this.h()},h(){i(w,"name","hf:doc:metadata"),i(w,"content",JSON.stringify(gp)),i(D,"id","callbacks"),i(D,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(D,"href","#callbacks"),i(A,"class","relative group"),i(hr,"href","/docs/transformers/pr_17013/en/main_classes/trainer#transformers.Trainer"),i(pr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerControl"),i(gr,"href","/docs/transformers/pr_17013/en/main_classes/trainer#transformers.Trainer"),i(ur,"href","trainer"),i(br,"href","/docs/transformers/pr_17013/en/main_classes/trainer#transformers.Trainer"),i(vr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.DefaultFlowCallback"),i(Er,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.PrinterCallback"),i(kr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.ProgressCallback"),i($r,"href","/docs/transformers/pr_17013/en/main_classes/trainer#transformers.TrainingArguments"),i(Cr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.integrations.TensorBoardCallback"),i(wr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.integrations.WandbCallback"),i(at,"href","https://www.wandb.com/"),i(at,"rel","nofollow"),i(yr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.integrations.CometCallback"),i(nt,"href","https://www.comet.ml/site/"),i(nt,"rel","nofollow"),i(Ar,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.integrations.MLflowCallback"),i(ot,"href","https://www.mlflow.org/"),i(ot,"rel","nofollow"),i(Dr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.integrations.AzureMLCallback"),i(st,"href","https://pypi.org/project/azureml-sdk/"),i(st,"rel","nofollow"),i(Lr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.integrations.CodeCarbonCallback"),i(lt,"href","https://pypi.org/project/codecarbon/"),i(lt,"rel","nofollow"),i(Sr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerCallback"),i(xr,"href","/docs/transformers/pr_17013/en/main_classes/trainer#transformers.TrainingArguments"),i(Or,"href","/docs/transformers/pr_17013/en/main_classes/trainer#transformers.Trainer"),i(Pr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerState"),i(Ir,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerControl"),i(De,"id","transformers.integrations.CometCallback"),i(De,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(De,"href","#transformers.integrations.CometCallback"),i(ne,"class","relative group"),i(Mr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerCallback"),i(Fr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerCallback"),i(dt,"href","https://www.comet.ml/site/"),i(dt,"rel","nofollow"),i(ht,"href","https://www.comet.ml/docs/python-sdk/advanced/#comet-configuration-variables"),i(ht,"rel","nofollow"),i(B,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(G,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Nr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerCallback"),i(se,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(jr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerCallback"),i(le,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Wr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerCallback"),i(ie,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(zr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerCallback"),i(Br,"href","/docs/transformers/pr_17013/en/main_classes/trainer#transformers.TrainingArguments"),i(Vr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerState"),i(J,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Rr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerCallback"),i(Tt,"href","https://www.tensorflow.org/tensorboard"),i(Tt,"rel","nofollow"),i(ce,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(qr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerCallback"),i(wt,"href","https://www.wandb.com/"),i(wt,"rel","nofollow"),i(Lt,"href","https://docs.wandb.ai/integrations/huggingface"),i(Lt,"rel","nofollow"),i(V,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(X,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Ur,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerCallback"),i(xt,"href","https://www.mlflow.org/"),i(xt,"rel","nofollow"),i(Hr,"href","/docs/transformers/pr_17013/en/main_classes/trainer#transformers.TrainingArguments"),i(R,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(K,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Gr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerCallback"),i(It,"href","https://pypi.org/project/azureml-sdk/"),i(It,"rel","nofollow"),i(he,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Jr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerCallback"),i(ge,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Se,"id","transformers.TrainerCallback"),i(Se,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Se,"href","#transformers.TrainerCallback"),i(ue,"class","relative group"),i(Oe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Pe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Ie,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Yr,"href","/docs/transformers/pr_17013/en/main_classes/trainer#transformers.Trainer"),i(Me,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Fe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Ne,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(je,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(We,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(ze,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Be,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Ve,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Re,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(k,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Xr,"href","/docs/transformers/pr_17013/en/main_classes/trainer#transformers.Trainer"),i(He,"id","transformers.TrainerState"),i(He,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(He,"href","#transformers.TrainerState"),i(be,"class","relative group"),i(Kr,"href","/docs/transformers/pr_17013/en/main_classes/trainer#transformers.Trainer"),i(Qr,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerCallback"),i(Je,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Ye,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(I,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Xe,"id","transformers.TrainerControl"),i(Xe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Xe,"href","#transformers.TrainerControl"),i(ve,"class","relative group"),i(Zr,"href","/docs/transformers/pr_17013/en/main_classes/trainer#transformers.Trainer"),i(ea,"href","/docs/transformers/pr_17013/en/main_classes/callback#transformers.TrainerCallback"),i(Ee,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(r,f){e(document.head,w),m(r,W,f),m(r,A,f),e(A,D),e(D,M),b(C,M,null),e(A,F),e(A,re),e(re,ae),m(r,N,f),m(r,H,f),e(H,mr),e(H,hr),e(hr,Yo),e(H,Xo),m(r,Pn,f),m(r,z,f),e(z,Ko),e(z,pr),e(pr,Qo),e(z,Zo),e(z,gr),e(gr,es),e(z,ts),e(z,ur),e(ur,rs),e(z,as),m(r,In,f),m(r,$e,f),e($e,ns),e($e,br),e(br,os),e($e,ss),m(r,Mn,f),m(r,L,f),e(L,_r),e(_r,vr),e(vr,ls),e(_r,is),e(L,cs),e(L,Z),e(Z,Er),e(Er,ds),e(Z,fs),e(Z,kr),e(kr,ms),e(Z,hs),e(Z,$r),e($r,ps),e(Z,gs),e(L,us),e(L,Tr),e(Tr,Cr),e(Cr,bs),e(Tr,_s),e(L,vs),e(L,Te),e(Te,wr),e(wr,Es),e(Te,ks),e(Te,at),e(at,$s),e(Te,Ts),e(L,Cs),e(L,Ce),e(Ce,yr),e(yr,ws),e(Ce,ys),e(Ce,nt),e(nt,As),e(Ce,Ds),e(L,Ls),e(L,we),e(we,Ar),e(Ar,Ss),e(we,xs),e(we,ot),e(ot,Os),e(we,Ps),e(L,Is),e(L,ye),e(ye,Dr),e(Dr,Ms),e(ye,Fs),e(ye,st),e(st,Ns),e(ye,js),e(L,Ws),e(L,Ae),e(Ae,Lr),e(Lr,zs),e(Ae,Bs),e(Ae,lt),e(lt,Vs),e(Ae,Rs),m(r,Fn,f),m(r,x,f),e(x,qs),e(x,Sr),e(Sr,Us),e(x,Hs),e(x,xr),e(xr,Gs),e(x,Js),e(x,Or),e(Or,Ys),e(x,Xs),e(x,Pr),e(Pr,Ks),e(x,Qs),e(x,Ir),e(Ir,Zs),e(x,el),m(r,Nn,f),m(r,ne,f),e(ne,De),e(De,ma),b(it,ma,null),e(ne,tl),e(ne,ha),e(ha,rl),m(r,jn,f),m(r,Le,f),e(Le,al),e(Le,Mr),e(Mr,nl),e(Le,ol),m(r,Wn,f),m(r,G,f),b(ct,G,null),e(G,sl),e(G,oe),e(oe,ll),e(oe,Fr),e(Fr,il),e(oe,cl),e(oe,dt),e(dt,dl),e(oe,fl),e(G,ml),e(G,B),b(ft,B,null),e(B,hl),e(B,pa),e(pa,pl),e(B,gl),e(B,y),e(y,ul),e(y,ga),e(ga,bl),e(y,_l),e(y,ua),e(ua,vl),e(y,El),e(y,ba),e(ba,kl),e(y,$l),e(y,_a),e(_a,Tl),e(y,Cl),e(y,va),e(va,wl),e(y,yl),e(y,Ea),e(Ea,Al),e(y,Dl),e(y,ka),e(ka,Ll),e(y,Sl),e(y,$a),e($a,xl),e(y,Ol),e(y,Ta),e(Ta,Pl),e(y,Il),e(B,Ml),e(B,mt),e(mt,Fl),e(mt,ht),e(ht,Nl),e(mt,jl),m(r,zn,f),m(r,se,f),b(pt,se,null),e(se,Wl),e(se,gt),e(gt,zl),e(gt,Nr),e(Nr,Bl),e(gt,Vl),m(r,Bn,f),m(r,le,f),b(ut,le,null),e(le,Rl),e(le,bt),e(bt,ql),e(bt,jr),e(jr,Ul),e(bt,Hl),m(r,Vn,f),m(r,ie,f),b(_t,ie,null),e(ie,Gl),e(ie,vt),e(vt,Jl),e(vt,Wr),e(Wr,Yl),e(vt,Xl),m(r,Rn,f),m(r,J,f),b(Et,J,null),e(J,Kl),e(J,kt),e(kt,Ql),e(kt,zr),e(zr,Zl),e(kt,ei),e(J,ti),e(J,Y),e(Y,ri),e(Y,Br),e(Br,ai),e(Y,ni),e(Y,Ca),e(Ca,oi),e(Y,si),e(Y,Vr),e(Vr,li),e(Y,ii),m(r,qn,f),m(r,ce,f),b($t,ce,null),e(ce,ci),e(ce,de),e(de,di),e(de,Rr),e(Rr,fi),e(de,mi),e(de,Tt),e(Tt,hi),e(de,pi),m(r,Un,f),m(r,X,f),b(Ct,X,null),e(X,gi),e(X,fe),e(fe,ui),e(fe,qr),e(qr,bi),e(fe,_i),e(fe,wt),e(wt,vi),e(fe,Ei),e(X,ki),e(X,V),b(yt,V,null),e(V,$i),e(V,At),e(At,Ti),e(At,wa),e(wa,Ci),e(At,wi),e(V,yi),e(V,Dt),e(Dt,Ai),e(Dt,Lt),e(Lt,Di),e(Dt,Li),e(V,Si),e(V,h),e(h,xi),e(h,ya),e(ya,Oi),e(h,Pi),e(h,Aa),e(Aa,Ii),e(h,Mi),e(h,Da),e(Da,Fi),e(h,Ni),e(h,La),e(La,ji),e(h,Wi),e(h,Sa),e(Sa,zi),e(h,Bi),e(h,xa),e(xa,Vi),e(h,Ri),e(h,Oa),e(Oa,qi),e(h,Ui),e(h,Pa),e(Pa,Hi),e(h,Gi),e(h,Ia),e(Ia,Ji),e(h,Yi),e(h,Ma),e(Ma,Xi),e(h,Ki),e(h,Fa),e(Fa,Qi),e(h,Zi),e(h,Na),e(Na,ec),e(h,tc),e(h,ja),e(ja,rc),e(h,ac),e(h,Wa),e(Wa,nc),e(h,oc),e(h,za),e(za,sc),e(h,lc),e(h,Ba),e(Ba,ic),e(h,cc),e(h,Va),e(Va,dc),e(h,fc),e(h,Ra),e(Ra,mc),e(h,hc),e(h,qa),e(qa,pc),e(h,gc),m(r,Hn,f),m(r,K,f),b(St,K,null),e(K,uc),e(K,Q),e(Q,bc),e(Q,Ur),e(Ur,_c),e(Q,vc),e(Q,xt),e(xt,Ec),e(Q,kc),e(Q,Ua),e(Ua,$c),e(Q,Tc),e(K,Cc),e(K,R),b(Ot,R,null),e(R,wc),e(R,Ha),e(Ha,yc),e(R,Ac),e(R,me),e(me,Dc),e(me,Ga),e(Ga,Lc),e(me,Sc),e(me,Ja),e(Ja,xc),e(me,Oc),e(R,Pc),e(R,j),e(j,Ic),e(j,Ya),e(Ya,Mc),e(j,Fc),e(j,Xa),e(Xa,Nc),e(j,jc),e(j,Hr),e(Hr,Wc),e(j,zc),e(j,Ka),e(Ka,Bc),e(j,Vc),m(r,Gn,f),m(r,he,f),b(Pt,he,null),e(he,Rc),e(he,pe),e(pe,qc),e(pe,Gr),e(Gr,Uc),e(pe,Hc),e(pe,It),e(It,Gc),e(pe,Jc),m(r,Jn,f),m(r,ge,f),b(Mt,ge,null),e(ge,Yc),e(ge,Ft),e(Ft,Xc),e(Ft,Jr),e(Jr,Kc),e(Ft,Qc),m(r,Yn,f),m(r,ue,f),e(ue,Se),e(Se,Qa),b(Nt,Qa,null),e(ue,Zc),e(ue,Za),e(Za,ed),m(r,Xn,f),m(r,k,f),b(jt,k,null),e(k,td),e(k,en),e(en,rd),e(k,ad),e(k,Wt),e(Wt,nd),e(Wt,tn),e(tn,od),e(Wt,sd),e(k,ld),e(k,P),e(P,id),e(P,rn),e(rn,cd),e(P,dd),e(P,an),e(an,fd),e(P,md),e(P,nn),e(nn,hd),e(P,pd),e(P,on),e(on,gd),e(P,ud),e(P,sn),e(sn,bd),e(P,_d),e(k,vd),b(xe,k,null),e(k,Ed),e(k,Oe),b(zt,Oe,null),e(Oe,kd),e(Oe,ln),e(ln,$d),e(k,Td),e(k,Pe),b(Bt,Pe,null),e(Pe,Cd),e(Pe,cn),e(cn,wd),e(k,yd),e(k,Ie),b(Vt,Ie,null),e(Ie,Ad),e(Ie,dn),e(dn,Dd),e(k,Ld),e(k,Me),b(Rt,Me,null),e(Me,Sd),e(Me,qt),e(qt,xd),e(qt,Yr),e(Yr,Od),e(qt,Pd),e(k,Id),e(k,Fe),b(Ut,Fe,null),e(Fe,Md),e(Fe,fn),e(fn,Fd),e(k,Nd),e(k,Ne),b(Ht,Ne,null),e(Ne,jd),e(Ne,mn),e(mn,Wd),e(k,zd),e(k,je),b(Gt,je,null),e(je,Bd),e(je,hn),e(hn,Vd),e(k,Rd),e(k,We),b(Jt,We,null),e(We,qd),e(We,pn),e(pn,Ud),e(k,Hd),e(k,ze),b(Yt,ze,null),e(ze,Gd),e(ze,gn),e(gn,Jd),e(k,Yd),e(k,Be),b(Xt,Be,null),e(Be,Xd),e(Be,un),e(un,Kd),e(k,Qd),e(k,Ve),b(Kt,Ve,null),e(Ve,Zd),e(Ve,bn),e(bn,ef),e(k,tf),e(k,Re),b(Qt,Re,null),e(Re,rf),e(Re,_n),e(_n,af),m(r,Kn,f),m(r,qe,f),e(qe,nf),e(qe,Xr),e(Xr,of),e(qe,sf),m(r,Qn,f),b(Zt,r,f),m(r,Zn,f),m(r,Ue,f),e(Ue,lf),e(Ue,vn),e(vn,cf),e(Ue,df),m(r,eo,f),b(er,r,f),m(r,to,f),m(r,be,f),e(be,He),e(He,En),b(tr,En,null),e(be,ff),e(be,kn),e(kn,mf),m(r,ro,f),m(r,I,f),b(rr,I,null),e(I,hf),e(I,_e),e(_e,pf),e(_e,Kr),e(Kr,gf),e(_e,uf),e(_e,Qr),e(Qr,bf),e(_e,_f),e(I,vf),b(Ge,I,null),e(I,Ef),e(I,Je),b(ar,Je,null),e(Je,kf),e(Je,nr),e(nr,$f),e(nr,$n),e($n,Tf),e(nr,Cf),e(I,wf),e(I,Ye),b(or,Ye,null),e(Ye,yf),e(Ye,sr),e(sr,Af),e(sr,Tn),e(Tn,Df),e(sr,Lf),m(r,ao,f),m(r,ve,f),e(ve,Xe),e(Xe,Cn),b(lr,Cn,null),e(ve,Sf),e(ve,wn),e(wn,xf),m(r,no,f),m(r,Ee,f),b(ir,Ee,null),e(Ee,Of),e(Ee,ke),e(ke,Pf),e(ke,Zr),e(Zr,If),e(ke,Mf),e(ke,ea),e(ea,Ff),e(ke,Nf),oo=!0},p(r,[f]){const cr={};f&2&&(cr.$$scope={dirty:f,ctx:r}),xe.$set(cr);const yn={};f&2&&(yn.$$scope={dirty:f,ctx:r}),Ge.$set(yn)},i(r){oo||(_(C.$$.fragment,r),_(it.$$.fragment,r),_(ct.$$.fragment,r),_(ft.$$.fragment,r),_(pt.$$.fragment,r),_(ut.$$.fragment,r),_(_t.$$.fragment,r),_(Et.$$.fragment,r),_($t.$$.fragment,r),_(Ct.$$.fragment,r),_(yt.$$.fragment,r),_(St.$$.fragment,r),_(Ot.$$.fragment,r),_(Pt.$$.fragment,r),_(Mt.$$.fragment,r),_(Nt.$$.fragment,r),_(jt.$$.fragment,r),_(xe.$$.fragment,r),_(zt.$$.fragment,r),_(Bt.$$.fragment,r),_(Vt.$$.fragment,r),_(Rt.$$.fragment,r),_(Ut.$$.fragment,r),_(Ht.$$.fragment,r),_(Gt.$$.fragment,r),_(Jt.$$.fragment,r),_(Yt.$$.fragment,r),_(Xt.$$.fragment,r),_(Kt.$$.fragment,r),_(Qt.$$.fragment,r),_(Zt.$$.fragment,r),_(er.$$.fragment,r),_(tr.$$.fragment,r),_(rr.$$.fragment,r),_(Ge.$$.fragment,r),_(ar.$$.fragment,r),_(or.$$.fragment,r),_(lr.$$.fragment,r),_(ir.$$.fragment,r),oo=!0)},o(r){v(C.$$.fragment,r),v(it.$$.fragment,r),v(ct.$$.fragment,r),v(ft.$$.fragment,r),v(pt.$$.fragment,r),v(ut.$$.fragment,r),v(_t.$$.fragment,r),v(Et.$$.fragment,r),v($t.$$.fragment,r),v(Ct.$$.fragment,r),v(yt.$$.fragment,r),v(St.$$.fragment,r),v(Ot.$$.fragment,r),v(Pt.$$.fragment,r),v(Mt.$$.fragment,r),v(Nt.$$.fragment,r),v(jt.$$.fragment,r),v(xe.$$.fragment,r),v(zt.$$.fragment,r),v(Bt.$$.fragment,r),v(Vt.$$.fragment,r),v(Rt.$$.fragment,r),v(Ut.$$.fragment,r),v(Ht.$$.fragment,r),v(Gt.$$.fragment,r),v(Jt.$$.fragment,r),v(Yt.$$.fragment,r),v(Xt.$$.fragment,r),v(Kt.$$.fragment,r),v(Qt.$$.fragment,r),v(Zt.$$.fragment,r),v(er.$$.fragment,r),v(tr.$$.fragment,r),v(rr.$$.fragment,r),v(Ge.$$.fragment,r),v(ar.$$.fragment,r),v(or.$$.fragment,r),v(lr.$$.fragment,r),v(ir.$$.fragment,r),oo=!1},d(r){t(w),r&&t(W),r&&t(A),E(C),r&&t(N),r&&t(H),r&&t(Pn),r&&t(z),r&&t(In),r&&t($e),r&&t(Mn),r&&t(L),r&&t(Fn),r&&t(x),r&&t(Nn),r&&t(ne),E(it),r&&t(jn),r&&t(Le),r&&t(Wn),r&&t(G),E(ct),E(ft),r&&t(zn),r&&t(se),E(pt),r&&t(Bn),r&&t(le),E(ut),r&&t(Vn),r&&t(ie),E(_t),r&&t(Rn),r&&t(J),E(Et),r&&t(qn),r&&t(ce),E($t),r&&t(Un),r&&t(X),E(Ct),E(yt),r&&t(Hn),r&&t(K),E(St),E(Ot),r&&t(Gn),r&&t(he),E(Pt),r&&t(Jn),r&&t(ge),E(Mt),r&&t(Yn),r&&t(ue),E(Nt),r&&t(Xn),r&&t(k),E(jt),E(xe),E(zt),E(Bt),E(Vt),E(Rt),E(Ut),E(Ht),E(Gt),E(Jt),E(Yt),E(Xt),E(Kt),E(Qt),r&&t(Kn),r&&t(qe),r&&t(Qn),E(Zt,r),r&&t(Zn),r&&t(Ue),r&&t(eo),E(er,r),r&&t(to),r&&t(be),E(tr),r&&t(ro),r&&t(I),E(rr),E(Ge),E(ar),E(or),r&&t(ao),r&&t(ve),E(lr),r&&t(no),r&&t(Ee),E(ir)}}}const gp={local:"callbacks",sections:[{local:"transformers.integrations.CometCallback",title:"Available Callbacks"},{local:"transformers.TrainerCallback",title:"TrainerCallback"},{local:"transformers.TrainerState",title:"TrainerState"},{local:"transformers.TrainerControl",title:"TrainerControl"}],title:"Callbacks"};function up(fr){return ip(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Tp extends np{constructor(w){super();op(this,w,up,pp,sp,{})}}export{Tp as default,gp as metadata};
