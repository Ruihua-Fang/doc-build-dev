import{S as zp,i as Bp,s as Rp,e as o,k as c,w as g,t as r,M as Vp,c as s,d as t,m as d,a as l,x as u,h as a,b as i,F as e,g as m,y as _,q as b,o as v,B as E,v as Up,L as qp}from"../../chunks/vendor-6b77c823.js";import{T as Gp}from"../../chunks/Tip-39098574.js";import{D as w}from"../../chunks/Docstring-1088f2fb.js";import{C as mm}from"../../chunks/CodeBlock-3a8b25a8.js";import{I as zn}from"../../chunks/IconCopyLink-7a11ce68.js";import{E as Hp}from"../../chunks/ExampleCodeBlock-5212b321.js";function Jp(cr){let A,z,D,x,W;return x=new mm({props:{code:`class PrinterCallback(TrainerCallback):
    def on_log(self, args, state, control, logs=None, **kwargs):
        _ = logs.pop("total_flos", None)
        if state.is_local_process_zero:
            print(logs)`,highlighted:`<span class="hljs-keyword">class</span> <span class="hljs-title class_">PrinterCallback</span>(<span class="hljs-title class_ inherited__">TrainerCallback</span>):
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_log</span>(<span class="hljs-params">self, args, state, control, logs=<span class="hljs-literal">None</span>, **kwargs</span>):
        _ = logs.pop(<span class="hljs-string">&quot;total_flos&quot;</span>, <span class="hljs-literal">None</span>)
        <span class="hljs-keyword">if</span> state.is_local_process_zero:
            <span class="hljs-built_in">print</span>(logs)`}}),{c(){A=o("p"),z=r("Example:"),D=c(),g(x.$$.fragment)},l(y){A=s(y,"P",{});var N=l(A);z=a(N,"Example:"),N.forEach(t),D=d(y),u(x.$$.fragment,y)},m(y,N){m(y,A,N),e(A,z),m(y,D,N),_(x,y,N),W=!0},p:qp,i(y){W||(b(x.$$.fragment,y),W=!0)},o(y){v(x.$$.fragment,y),W=!1},d(y){y&&t(A),y&&t(D),E(x,y)}}}function Yp(cr){let A,z,D,x,W,y,N,re;return{c(){A=o("p"),z=r(`In all this class, one step is to be understood as one update step. When using gradient accumulation, one update
step may require several forward and backward passes: if you use `),D=o("code"),x=r("gradient_accumulation_steps=n"),W=r(`, then one update
step requires going through `),y=o("em"),N=r("n"),re=r(" batches.")},l(ae){A=s(ae,"P",{});var j=l(A);z=a(j,`In all this class, one step is to be understood as one update step. When using gradient accumulation, one update
step may require several forward and backward passes: if you use `),D=s(j,"CODE",{});var G=l(D);x=a(G,"gradient_accumulation_steps=n"),G.forEach(t),W=a(j,`, then one update
step requires going through `),y=s(j,"EM",{});var dr=l(y);N=a(dr,"n"),dr.forEach(t),re=a(j," batches."),j.forEach(t)},m(ae,j){m(ae,A,j),e(A,z),e(A,D),e(D,x),e(A,W),e(A,y),e(y,N),e(A,re)},d(ae){ae&&t(A)}}}function Xp(cr){let A,z,D,x,W,y,N,re,ae,j,G,dr,fr,as,ns,Bn,B,os,mr,ss,ls,hr,is,cs,pr,ds,fs,Rn,ke,ms,gr,hs,ps,Vn,O,ur,_r,gs,us,_s,Z,br,bs,vs,vr,Es,ks,Er,$s,Ts,Cs,kr,$r,ws,ys,As,$e,Tr,Ls,Ds,tt,xs,Os,Ms,Te,Cr,Ss,Is,rt,Ps,Fs,Ws,Ce,wr,Ns,js,at,zs,Bs,Rs,we,yr,Vs,Us,nt,qs,Gs,Hs,ye,Ar,Js,Ys,ot,Xs,Ks,Un,S,Qs,Lr,Zs,el,Dr,tl,rl,xr,al,nl,Or,ol,sl,Mr,ll,il,qn,ne,Ae,da,st,cl,fa,dl,Gn,Le,fl,Sr,ml,hl,Hn,H,lt,pl,oe,gl,Ir,ul,_l,it,bl,vl,El,R,ct,kl,ma,$l,Tl,L,Cl,ha,wl,yl,pa,Al,Ll,ga,Dl,xl,ua,Ol,Ml,_a,Sl,Il,ba,Pl,Fl,va,Wl,Nl,Ea,jl,zl,ka,Bl,Rl,Vl,dt,Ul,ft,ql,Gl,Jn,se,mt,Hl,ht,Jl,Pr,Yl,Xl,Yn,le,pt,Kl,gt,Ql,Fr,Zl,ei,Xn,ie,ut,ti,_t,ri,Wr,ai,ni,Kn,J,bt,oi,vt,si,Nr,li,ii,ci,Y,di,jr,fi,mi,$a,hi,pi,zr,gi,ui,Qn,ce,Et,_i,de,bi,Br,vi,Ei,kt,ki,$i,Zn,X,$t,Ti,fe,Ci,Rr,wi,yi,Tt,Ai,Li,Di,V,Ct,xi,wt,Oi,Ta,Mi,Si,Ii,yt,Pi,At,Fi,Wi,Ni,h,ji,Ca,zi,Bi,wa,Ri,Vi,ya,Ui,qi,Aa,Gi,Hi,La,Ji,Yi,Da,Xi,Ki,xa,Qi,Zi,Oa,ec,tc,Ma,rc,ac,Sa,nc,oc,Ia,sc,lc,Pa,ic,cc,Fa,dc,fc,Wa,mc,hc,Na,pc,gc,ja,uc,_c,za,bc,vc,Ba,Ec,kc,Ra,$c,Tc,eo,K,Lt,Cc,Q,wc,Vr,yc,Ac,Dt,Lc,Dc,Va,xc,Oc,Mc,ee,xt,Sc,Ua,Ic,Pc,$,Fc,qa,Wc,Nc,Ga,jc,zc,Ha,Bc,Rc,Ja,Vc,Uc,Ur,qc,Gc,Ya,Hc,Jc,Xa,Yc,Xc,Ka,Kc,Qc,Qa,Zc,ed,Za,td,rd,en,ad,nd,tn,od,sd,rn,ld,id,an,cd,dd,nn,fd,md,on,hd,pd,to,me,Ot,gd,he,ud,qr,_d,bd,Mt,vd,Ed,ro,pe,St,kd,It,$d,Gr,Td,Cd,ao,ge,De,sn,Pt,wd,ln,yd,no,k,Ft,Ad,cn,Ld,Dd,Wt,xd,dn,Od,Md,Sd,P,Id,fn,Pd,Fd,mn,Wd,Nd,hn,jd,zd,pn,Bd,Rd,gn,Vd,Ud,qd,xe,Gd,Oe,Nt,Hd,un,Jd,Yd,Me,jt,Xd,_n,Kd,Qd,Se,zt,Zd,bn,ef,tf,Ie,Bt,rf,Rt,af,Hr,nf,of,sf,Pe,Vt,lf,vn,cf,df,Fe,Ut,ff,En,mf,hf,We,qt,pf,kn,gf,uf,Ne,Gt,_f,$n,bf,vf,je,Ht,Ef,Tn,kf,$f,ze,Jt,Tf,Cn,Cf,wf,Be,Yt,yf,wn,Af,Lf,Re,Xt,Df,yn,xf,oo,Ve,Of,Jr,Mf,Sf,so,Kt,lo,Ue,If,An,Pf,Ff,io,Qt,co,ue,qe,Ln,Zt,Wf,Dn,Nf,fo,F,er,jf,_e,zf,Yr,Bf,Rf,Xr,Vf,Uf,qf,Ge,Gf,He,tr,Hf,rr,Jf,xn,Yf,Xf,Kf,Je,ar,Qf,nr,Zf,On,em,tm,mo,be,Ye,Mn,or,rm,Sn,am,ho,ve,sr,nm,Ee,om,Kr,sm,lm,Qr,im,cm,po;return y=new zn({}),st=new zn({}),lt=new w({props:{name:"class transformers.integrations.CometCallback",anchor:"transformers.integrations.CometCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/integrations.py#L662"}}),ct=new w({props:{name:"setup",anchor:"transformers.integrations.CometCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/integrations.py#L673"}}),mt=new w({props:{name:"class transformers.DefaultFlowCallback",anchor:"transformers.DefaultFlowCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L406"}}),pt=new w({props:{name:"class transformers.PrinterCallback",anchor:"transformers.PrinterCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L498"}}),ut=new w({props:{name:"class transformers.ProgressCallback",anchor:"transformers.ProgressCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L456"}}),bt=new w({props:{name:"class transformers.EarlyStoppingCallback",anchor:"transformers.EarlyStoppingCallback",parameters:[{name:"early_stopping_patience",val:": int = 1"},{name:"early_stopping_threshold",val:": typing.Optional[float] = 0.0"}],parametersDescription:[{anchor:"transformers.EarlyStoppingCallback.early_stopping_patience",description:`<strong>early_stopping_patience</strong> (<code>int</code>) &#x2014;
Use with <code>metric_for_best_model</code> to stop training when the specified metric worsens for
<code>early_stopping_patience</code> evaluation calls.`,name:"early_stopping_patience"},{anchor:"transformers.EarlyStoppingCallback.early_stopping_threshold(float,",description:`<strong>early_stopping_threshold(<code>float</code>,</strong> <em>optional</em>) &#x2014;
Use with TrainingArguments <code>metric_for_best_model</code> and <code>early_stopping_patience</code> to denote how much the
specified metric must improve to satisfy early stopping conditions. \``,name:"early_stopping_threshold(float,"}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L509"}}),Et=new w({props:{name:"class transformers.integrations.TensorBoardCallback",anchor:"transformers.integrations.TensorBoardCallback",parameters:[{name:"tb_writer",val:" = None"}],parametersDescription:[{anchor:"transformers.integrations.TensorBoardCallback.tb_writer",description:`<strong>tb_writer</strong> (<code>SummaryWriter</code>, <em>optional</em>) &#x2014;
The writer to use. Will instantiate one if not set.`,name:"tb_writer"}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/integrations.py#L448"}}),$t=new w({props:{name:"class transformers.integrations.WandbCallback",anchor:"transformers.integrations.WandbCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/integrations.py#L536"}}),Ct=new w({props:{name:"setup",anchor:"transformers.integrations.WandbCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/integrations.py#L553"}}),Lt=new w({props:{name:"class transformers.integrations.MLflowCallback",anchor:"transformers.integrations.MLflowCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/integrations.py#L761"}}),xt=new w({props:{name:"setup",anchor:"transformers.integrations.MLflowCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/integrations.py#L780"}}),Ot=new w({props:{name:"class transformers.integrations.AzureMLCallback",anchor:"transformers.integrations.AzureMLCallback",parameters:[{name:"azureml_run",val:" = None"}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/integrations.py#L738"}}),St=new w({props:{name:"class transformers.integrations.CodeCarbonCallback",anchor:"transformers.integrations.CodeCarbonCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/integrations.py#L953"}}),Pt=new zn({}),Ft=new w({props:{name:"class transformers.TrainerCallback",anchor:"transformers.TrainerCallback",parameters:[],parametersDescription:[{anchor:"transformers.TrainerCallback.args",description:`<strong>args</strong> (<a href="/docs/transformers/pr_17130/en/main_classes/trainer#transformers.TrainingArguments">TrainingArguments</a>) &#x2014;
The training arguments used to instantiate the <a href="/docs/transformers/pr_17130/en/main_classes/trainer#transformers.Trainer">Trainer</a>.`,name:"args"},{anchor:"transformers.TrainerCallback.state",description:`<strong>state</strong> (<a href="/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerState">TrainerState</a>) &#x2014;
The current state of the <a href="/docs/transformers/pr_17130/en/main_classes/trainer#transformers.Trainer">Trainer</a>.`,name:"state"},{anchor:"transformers.TrainerCallback.control",description:`<strong>control</strong> (<a href="/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerControl">TrainerControl</a>) &#x2014;
The object that is returned to the <a href="/docs/transformers/pr_17130/en/main_classes/trainer#transformers.Trainer">Trainer</a> and can be used to make some decisions.`,name:"control"},{anchor:"transformers.TrainerCallback.model",description:`<strong>model</strong> (<a href="/docs/transformers/pr_17130/en/main_classes/model#transformers.PreTrainedModel">PreTrainedModel</a> or <code>torch.nn.Module</code>) &#x2014;
The model being trained.`,name:"model"},{anchor:"transformers.TrainerCallback.tokenizer",description:`<strong>tokenizer</strong> (<a href="/docs/transformers/pr_17130/en/main_classes/tokenizer#transformers.PreTrainedTokenizer">PreTrainedTokenizer</a>) &#x2014;
The tokenizer used for encoding the data.`,name:"tokenizer"},{anchor:"transformers.TrainerCallback.optimizer",description:`<strong>optimizer</strong> (<code>torch.optim.Optimizer</code>) &#x2014;
The optimizer used for the training steps.`,name:"optimizer"},{anchor:"transformers.TrainerCallback.lr_scheduler",description:`<strong>lr_scheduler</strong> (<code>torch.optim.lr_scheduler.LambdaLR</code>) &#x2014;
The scheduler used for setting the learning rate.`,name:"lr_scheduler"},{anchor:"transformers.TrainerCallback.train_dataloader",description:`<strong>train_dataloader</strong> (<code>torch.utils.data.DataLoader</code>, <em>optional</em>) &#x2014;
The current dataloader used for training.`,name:"train_dataloader"},{anchor:"transformers.TrainerCallback.eval_dataloader",description:`<strong>eval_dataloader</strong> (<code>torch.utils.data.DataLoader</code>, <em>optional</em>) &#x2014;
The current dataloader used for training.`,name:"eval_dataloader"},{anchor:"transformers.TrainerCallback.metrics",description:`<strong>metrics</strong> (<code>Dict[str, float]</code>) &#x2014;
The metrics computed by the last evaluation phase.</p>
<p>Those are only accessible in the event <code>on_evaluate</code>.`,name:"metrics"},{anchor:"transformers.TrainerCallback.logs",description:`<strong>logs</strong>  (<code>Dict[str, float]</code>) &#x2014;
The values to log.</p>
<p>Those are only accessible in the event <code>on_log</code>.`,name:"logs"}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L159"}}),xe=new Hp({props:{anchor:"transformers.TrainerCallback.example",$$slots:{default:[Jp]},$$scope:{ctx:cr}}}),Nt=new w({props:{name:"on_epoch_begin",anchor:"transformers.TrainerCallback.on_epoch_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L227"}}),jt=new w({props:{name:"on_epoch_end",anchor:"transformers.TrainerCallback.on_epoch_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L233"}}),zt=new w({props:{name:"on_evaluate",anchor:"transformers.TrainerCallback.on_evaluate",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L259"}}),Bt=new w({props:{name:"on_init_end",anchor:"transformers.TrainerCallback.on_init_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L209"}}),Vt=new w({props:{name:"on_log",anchor:"transformers.TrainerCallback.on_log",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L271"}}),Ut=new w({props:{name:"on_prediction_step",anchor:"transformers.TrainerCallback.on_prediction_step",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L277"}}),qt=new w({props:{name:"on_save",anchor:"transformers.TrainerCallback.on_save",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L265"}}),Gt=new w({props:{name:"on_step_begin",anchor:"transformers.TrainerCallback.on_step_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L239"}}),Ht=new w({props:{name:"on_step_end",anchor:"transformers.TrainerCallback.on_step_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L252"}}),Jt=new w({props:{name:"on_substep_end",anchor:"transformers.TrainerCallback.on_substep_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L246"}}),Yt=new w({props:{name:"on_train_begin",anchor:"transformers.TrainerCallback.on_train_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L215"}}),Xt=new w({props:{name:"on_train_end",anchor:"transformers.TrainerCallback.on_train_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L221"}}),Kt=new mm({props:{code:`class MyCallback(TrainerCallback):
    "A callback that prints a message at the beginning of training"

    def on_train_begin(self, args, state, control, **kwargs):
        print("Starting training")


trainer = Trainer(
    model,
    args,
    train_dataset=train_dataset,
    eval_dataset=eval_dataset,
    callbacks=[MyCallback],  # We can either pass the callback class this way or an instance of it (MyCallback())
)`,highlighted:`<span class="hljs-keyword">class</span> <span class="hljs-title class_">MyCallback</span>(<span class="hljs-title class_ inherited__">TrainerCallback</span>):
    <span class="hljs-string">&quot;A callback that prints a message at the beginning of training&quot;</span>

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_train_begin</span>(<span class="hljs-params">self, args, state, control, **kwargs</span>):
        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Starting training&quot;</span>)


trainer = Trainer(
    model,
    args,
    train_dataset=train_dataset,
    eval_dataset=eval_dataset,
    callbacks=[MyCallback],  <span class="hljs-comment"># We can either pass the callback class this way or an instance of it (MyCallback())</span>
)`}}),Qt=new mm({props:{code:`trainer = Trainer(...)
trainer.add_callback(MyCallback)
# Alternatively, we can pass an instance of the callback class
trainer.add_callback(MyCallback())`,highlighted:`trainer = Trainer(...)
trainer.add_callback(MyCallback)
<span class="hljs-comment"># Alternatively, we can pass an instance of the callback class</span>
trainer.add_callback(MyCallback())`}}),Zt=new zn({}),er=new w({props:{name:"class transformers.TrainerState",anchor:"transformers.TrainerState",parameters:[{name:"epoch",val:": typing.Optional[float] = None"},{name:"global_step",val:": int = 0"},{name:"max_steps",val:": int = 0"},{name:"num_train_epochs",val:": int = 0"},{name:"total_flos",val:": float = 0"},{name:"log_history",val:": typing.List[typing.Dict[str, float]] = None"},{name:"best_metric",val:": typing.Optional[float] = None"},{name:"best_model_checkpoint",val:": typing.Optional[str] = None"},{name:"is_local_process_zero",val:": bool = True"},{name:"is_world_process_zero",val:": bool = True"},{name:"is_hyper_param_search",val:": bool = False"},{name:"trial_name",val:": str = None"},{name:"trial_params",val:": typing.Dict[str, typing.Union[str, float, int, bool]] = None"}],parametersDescription:[{anchor:"transformers.TrainerState.epoch",description:`<strong>epoch</strong> (<code>float</code>, <em>optional</em>) &#x2014;
Only set during training, will represent the epoch the training is at (the decimal part being the
percentage of the current epoch completed).`,name:"epoch"},{anchor:"transformers.TrainerState.global_step",description:`<strong>global_step</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
During training, represents the number of update steps completed.`,name:"global_step"},{anchor:"transformers.TrainerState.max_steps",description:`<strong>max_steps</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
The number of update steps to do during the current training.`,name:"max_steps"},{anchor:"transformers.TrainerState.total_flos",description:`<strong>total_flos</strong> (<code>float</code>, <em>optional</em>, defaults to 0) &#x2014;
The total number of floating operations done by the model since the beginning of training (stored as floats
to avoid overflow).`,name:"total_flos"},{anchor:"transformers.TrainerState.log_history",description:`<strong>log_history</strong> (<code>List[Dict[str, float]]</code>, <em>optional</em>) &#x2014;
The list of logs done since the beginning of training.`,name:"log_history"},{anchor:"transformers.TrainerState.best_metric",description:`<strong>best_metric</strong> (<code>float</code>, <em>optional</em>) &#x2014;
When tracking the best model, the value of the best metric encountered so far.`,name:"best_metric"},{anchor:"transformers.TrainerState.best_model_checkpoint",description:`<strong>best_model_checkpoint</strong> (<code>str</code>, <em>optional</em>) &#x2014;
When tracking the best model, the value of the name of the checkpoint for the best model encountered so
far.`,name:"best_model_checkpoint"},{anchor:"transformers.TrainerState.is_local_process_zero",description:`<strong>is_local_process_zero</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not this process is the local (e.g., on one machine if training in a distributed fashion on
several machines) main process.`,name:"is_local_process_zero"},{anchor:"transformers.TrainerState.is_world_process_zero",description:`<strong>is_world_process_zero</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not this process is the global main process (when training in a distributed fashion on several
machines, this is only going to be <code>True</code> for one process).`,name:"is_world_process_zero"},{anchor:"transformers.TrainerState.is_hyper_param_search",description:`<strong>is_hyper_param_search</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether we are in the process of a hyper parameter search using Trainer.hyperparameter_search. This will
impact the way data will be logged in TensorBoard.`,name:"is_hyper_param_search"}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L35"}}),Ge=new Gp({props:{$$slots:{default:[Yp]},$$scope:{ctx:cr}}}),tr=new w({props:{name:"load_from_json",anchor:"transformers.TrainerState.load_from_json",parameters:[{name:"json_path",val:": str"}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L101"}}),ar=new w({props:{name:"save_to_json",anchor:"transformers.TrainerState.save_to_json",parameters:[{name:"json_path",val:": str"}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L95"}}),or=new zn({}),sr=new w({props:{name:"class transformers.TrainerControl",anchor:"transformers.TrainerControl",parameters:[{name:"should_training_stop",val:": bool = False"},{name:"should_epoch_stop",val:": bool = False"},{name:"should_save",val:": bool = False"},{name:"should_evaluate",val:": bool = False"},{name:"should_log",val:": bool = False"}],parametersDescription:[{anchor:"transformers.TrainerControl.should_training_stop",description:`<strong>should_training_stop</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the training should be interrupted.</p>
<p>If <code>True</code>, this variable will not be set back to <code>False</code>. The training will just stop.`,name:"should_training_stop"},{anchor:"transformers.TrainerControl.should_epoch_stop",description:`<strong>should_epoch_stop</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the current epoch should be interrupted.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next epoch.`,name:"should_epoch_stop"},{anchor:"transformers.TrainerControl.should_save",description:`<strong>should_save</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the model should be saved at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_save"},{anchor:"transformers.TrainerControl.should_evaluate",description:`<strong>should_evaluate</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the model should be evaluated at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_evaluate"},{anchor:"transformers.TrainerControl.should_log",description:`<strong>should_log</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the logs should be reported at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_log"}],source:"https://github.com/huggingface/transformers/blob/vr_17130/src/transformers/trainer_callback.py#L110"}}),{c(){A=o("meta"),z=c(),D=o("h1"),x=o("a"),W=o("span"),g(y.$$.fragment),N=c(),re=o("span"),ae=r("Callbacks"),j=c(),G=o("p"),dr=r(`Callbacks are objects that can customize the behavior of the training loop in the PyTorch
`),fr=o("a"),as=r("Trainer"),ns=r(` (this feature is not yet implemented in TensorFlow) that can inspect the training loop
state (for progress reporting, logging on TensorBoard or other ML platforms\u2026) and take decisions (like early
stopping).`),Bn=c(),B=o("p"),os=r("Callbacks are \u201Cread only\u201D pieces of code, apart from the "),mr=o("a"),ss=r("TrainerControl"),ls=r(` object they return, they
cannot change anything in the training loop. For customizations that require changes in the training loop, you should
subclass `),hr=o("a"),is=r("Trainer"),cs=r(" and override the methods you need (see "),pr=o("a"),ds=r("trainer"),fs=r(" for examples)."),Rn=c(),ke=o("p"),ms=r("By default a "),gr=o("a"),hs=r("Trainer"),ps=r(" will use the following callbacks:"),Vn=c(),O=o("ul"),ur=o("li"),_r=o("a"),gs=r("DefaultFlowCallback"),us=r(" which handles the default behavior for logging, saving and evaluation."),_s=c(),Z=o("li"),br=o("a"),bs=r("PrinterCallback"),vs=r(" or "),vr=o("a"),Es=r("ProgressCallback"),ks=r(` to display progress and print the
logs (the first one is used if you deactivate tqdm through the `),Er=o("a"),$s=r("TrainingArguments"),Ts=r(`, otherwise
it\u2019s the second one).`),Cs=c(),kr=o("li"),$r=o("a"),ws=r("TensorBoardCallback"),ys=r(` if tensorboard is accessible (either through PyTorch >= 1.4
or tensorboardX).`),As=c(),$e=o("li"),Tr=o("a"),Ls=r("WandbCallback"),Ds=r(" if "),tt=o("a"),xs=r("wandb"),Os=r(" is installed."),Ms=c(),Te=o("li"),Cr=o("a"),Ss=r("CometCallback"),Is=r(" if "),rt=o("a"),Ps=r("comet_ml"),Fs=r(" is installed."),Ws=c(),Ce=o("li"),wr=o("a"),Ns=r("MLflowCallback"),js=r(" if "),at=o("a"),zs=r("mlflow"),Bs=r(" is installed."),Rs=c(),we=o("li"),yr=o("a"),Vs=r("AzureMLCallback"),Us=r(" if "),nt=o("a"),qs=r("azureml-sdk"),Gs=r(` is
installed.`),Hs=c(),ye=o("li"),Ar=o("a"),Js=r("CodeCarbonCallback"),Ys=r(" if "),ot=o("a"),Xs=r("codecarbon"),Ks=r(` is
installed.`),Un=c(),S=o("p"),Qs=r("The main class that implements callbacks is "),Lr=o("a"),Zs=r("TrainerCallback"),el=r(`. It gets the
`),Dr=o("a"),tl=r("TrainingArguments"),rl=r(" used to instantiate the "),xr=o("a"),al=r("Trainer"),nl=r(`, can access that
Trainer\u2019s internal state via `),Or=o("a"),ol=r("TrainerState"),sl=r(`, and can take some actions on the training loop via
`),Mr=o("a"),ll=r("TrainerControl"),il=r("."),qn=c(),ne=o("h2"),Ae=o("a"),da=o("span"),g(st.$$.fragment),cl=c(),fa=o("span"),dl=r("Available Callbacks"),Gn=c(),Le=o("p"),fl=r("Here is the list of the available "),Sr=o("a"),ml=r("TrainerCallback"),hl=r(" in the library:"),Hn=c(),H=o("div"),g(lt.$$.fragment),pl=c(),oe=o("p"),gl=r("A "),Ir=o("a"),ul=r("TrainerCallback"),_l=r(" that sends the logs to "),it=o("a"),bl=r("Comet ML"),vl=r("."),El=c(),R=o("div"),g(ct.$$.fragment),kl=c(),ma=o("p"),$l=r("Setup the optional Comet.ml integration."),Tl=c(),L=o("p"),Cl=r(`Environment:
COMET_MODE (`),ha=o("code"),wl=r("str"),yl=r(", "),pa=o("em"),Al=r("optional"),Ll=r(`):
Whether to create an online, offline experiment or disable Comet logging. Can be \u201COFFLINE\u201D, \u201CONLINE\u201D,
or \u201CDISABLED\u201D. Defaults to \u201CONLINE\u201D.
COMET_PROJECT_NAME (`),ga=o("code"),Dl=r("str"),xl=r(", "),ua=o("em"),Ol=r("optional"),Ml=r(`):
Comet project name for experiments
COMET_OFFLINE_DIRECTORY (`),_a=o("code"),Sl=r("str"),Il=r(", "),ba=o("em"),Pl=r("optional"),Fl=r(`):
Folder to use for saving offline experiments when `),va=o("code"),Wl=r("COMET_MODE"),Nl=r(` is \u201COFFLINE\u201D
COMET_LOG_ASSETS (`),Ea=o("code"),jl=r("str"),zl=r(", "),ka=o("em"),Bl=r("optional"),Rl=r(`):
Whether or not to log training assets (tf event logs, checkpoints, etc), to Comet. Can be \u201CTRUE\u201D, or
\u201CFALSE\u201D. Defaults to \u201CTRUE\u201D.`),Vl=c(),dt=o("p"),Ul=r(`For a number of configurable items in the environment, see
`),ft=o("a"),ql=r("here"),Gl=r("."),Jn=c(),se=o("div"),g(mt.$$.fragment),Hl=c(),ht=o("p"),Jl=r("A "),Pr=o("a"),Yl=r("TrainerCallback"),Xl=r(" that handles the default flow of the training loop for logs, evaluation and checkpoints."),Yn=c(),le=o("div"),g(pt.$$.fragment),Kl=c(),gt=o("p"),Ql=r("A bare "),Fr=o("a"),Zl=r("TrainerCallback"),ei=r(" that just prints the logs."),Xn=c(),ie=o("div"),g(ut.$$.fragment),ti=c(),_t=o("p"),ri=r("A "),Wr=o("a"),ai=r("TrainerCallback"),ni=r(" that displays the progress of training or evaluation."),Kn=c(),J=o("div"),g(bt.$$.fragment),oi=c(),vt=o("p"),si=r("A "),Nr=o("a"),li=r("TrainerCallback"),ii=r(" that handles early stopping."),ci=c(),Y=o("p"),di=r("This callback depends on "),jr=o("a"),fi=r("TrainingArguments"),mi=r(" argument "),$a=o("em"),hi=r("load_best_model_at_end"),pi=r(` functionality to set best_metric
in `),zr=o("a"),gi=r("TrainerState"),ui=r("."),Qn=c(),ce=o("div"),g(Et.$$.fragment),_i=c(),de=o("p"),bi=r("A "),Br=o("a"),vi=r("TrainerCallback"),Ei=r(" that sends the logs to "),kt=o("a"),ki=r("TensorBoard"),$i=r("."),Zn=c(),X=o("div"),g($t.$$.fragment),Ti=c(),fe=o("p"),Ci=r("A "),Rr=o("a"),wi=r("TrainerCallback"),yi=r(" that sends the logs to "),Tt=o("a"),Ai=r("Weight and Biases"),Li=r("."),Di=c(),V=o("div"),g(Ct.$$.fragment),xi=c(),wt=o("p"),Oi=r("Setup the optional Weights & Biases ("),Ta=o("em"),Mi=r("wandb"),Si=r(") integration."),Ii=c(),yt=o("p"),Pi=r(`One can subclass and override this method to customize the setup if needed. Find more information
`),At=o("a"),Fi=r("here"),Wi=r(`. You can also override the following environment
variables:`),Ni=c(),h=o("p"),ji=r(`Environment:
WANDB_LOG_MODEL (`),Ca=o("code"),zi=r("bool"),Bi=r(", "),wa=o("em"),Ri=r("optional"),Vi=r(", defaults to "),ya=o("code"),Ui=r("False"),qi=r(`):
Whether or not to log model as artifact at the end of training. Use along with
`),Aa=o("em"),Gi=r("TrainingArguments.load_best_model_at_end"),Hi=r(` to upload best model.
WANDB_WATCH (`),La=o("code"),Ji=r("str"),Yi=r(", "),Da=o("em"),Xi=r("optional"),Ki=r(" defaults to "),xa=o("code"),Qi=r('"gradients"'),Zi=r(`):
Can be `),Oa=o("code"),ec=r('"gradients"'),tc=r(", "),Ma=o("code"),rc=r('"all"'),ac=r(" or "),Sa=o("code"),nc=r('"false"'),oc=r(". Set to "),Ia=o("code"),sc=r('"false"'),lc=r(" to disable gradient logging or "),Pa=o("code"),ic=r('"all"'),cc=r(` to
log gradients and parameters.
WANDB_PROJECT (`),Fa=o("code"),dc=r("str"),fc=r(", "),Wa=o("em"),mc=r("optional"),hc=r(", defaults to "),Na=o("code"),pc=r('"huggingface"'),gc=r(`):
Set this to a custom string to store results in a different project.
WANDB_DISABLED (`),ja=o("code"),uc=r("bool"),_c=r(", "),za=o("em"),bc=r("optional"),vc=r(", defaults to "),Ba=o("code"),Ec=r("False"),kc=r(`):
Whether or not to disable wandb entirely. Set `),Ra=o("em"),$c=r("WANDB_DISABLED=true"),Tc=r(" to disable."),eo=c(),K=o("div"),g(Lt.$$.fragment),Cc=c(),Q=o("p"),wc=r("A "),Vr=o("a"),yc=r("TrainerCallback"),Ac=r(" that sends the logs to "),Dt=o("a"),Lc=r("MLflow"),Dc=r(`. Can be disabled by setting
environment variable `),Va=o("code"),xc=r("DISABLE_MLFLOW_INTEGRATION = TRUE"),Oc=r("."),Mc=c(),ee=o("div"),g(xt.$$.fragment),Sc=c(),Ua=o("p"),Ic=r("Setup the optional MLflow integration."),Pc=c(),$=o("p"),Fc=r(`Environment:
HF_MLFLOW_LOG_ARTIFACTS (`),qa=o("code"),Wc=r("str"),Nc=r(", "),Ga=o("em"),jc=r("optional"),zc=r(`):
Whether to use MLflow .log_artifact() facility to log artifacts. This only makes sense if logging to a
remote server, e.g. s3 or GCS. If set to `),Ha=o("code"),Bc=r("True"),Rc=r(" or "),Ja=o("em"),Vc=r("1"),Uc=r(`, will copy whatever is in
`),Ur=o("a"),qc=r("TrainingArguments"),Gc=r("\u2019s "),Ya=o("code"),Hc=r("output_dir"),Jc=r(` to the local or remote artifact storage. Using it without a remote
storage will just copy the files to your artifact location.
MLFLOW_EXPERIMENT_NAME (`),Xa=o("code"),Yc=r("str"),Xc=r(", "),Ka=o("em"),Kc=r("optional"),Qc=r(`):
Whether to use an MLflow experiment_name under which to launch the run. Default to \u201CNone\u201D which will
point to the \u201CDefault\u201D experiment in MLflow. Otherwise, it is a case sensitive name of the experiment
to be activated. If an experiment with this name does not exist, a new experiment with this name is
created.
MLFLOW_TAGS (`),Qa=o("code"),Zc=r("str"),ed=r(", "),Za=o("em"),td=r("optional"),rd=r(`):
A string dump of a dictionary of key/value pair to be added to the MLflow run as tags. Example:
os.environ[\u2018MLFLOW_TAGS\u2019]=\u2019{\u201Crelease.candidate\u201D: \u201CRC1\u201D, \u201Crelease.version\u201D: \u201C2.2.0\u201D}\u2019
MLFLOW_NESTED_RUN (`),en=o("code"),ad=r("str"),nd=r(", "),tn=o("em"),od=r("optional"),sd=r(`):
Whether to use MLflow nested runs. If set to `),rn=o("code"),ld=r("True"),id=r(" or "),an=o("em"),cd=r("1"),dd=r(`, will create a nested run inside the current
run.
MLFLOW_RUN_ID (`),nn=o("code"),fd=r("str"),md=r(", "),on=o("em"),hd=r("optional"),pd=r(`):
Allow to reattach to an existing run which can be usefull when resuming training from a checkpoint.
When MLFLOW_RUN_ID environment variable is set, start_run attempts to resume a run with the specified
run ID and other parameters are ignored.`),to=c(),me=o("div"),g(Ot.$$.fragment),gd=c(),he=o("p"),ud=r("A "),qr=o("a"),_d=r("TrainerCallback"),bd=r(" that sends the logs to "),Mt=o("a"),vd=r("AzureML"),Ed=r("."),ro=c(),pe=o("div"),g(St.$$.fragment),kd=c(),It=o("p"),$d=r("A "),Gr=o("a"),Td=r("TrainerCallback"),Cd=r(" that tracks the CO2 emission of training."),ao=c(),ge=o("h2"),De=o("a"),sn=o("span"),g(Pt.$$.fragment),wd=c(),ln=o("span"),yd=r("TrainerCallback"),no=c(),k=o("div"),g(Ft.$$.fragment),Ad=c(),cn=o("p"),Ld=r(`A class for objects that will inspect the state of the training loop at some events and take some decisions. At
each of those events the following arguments are available:`),Dd=c(),Wt=o("p"),xd=r("The "),dn=o("code"),Od=r("control"),Md=r(` object is the only one that can be changed by the callback, in which case the event that changes it
should return the modified version.`),Sd=c(),P=o("p"),Id=r("The argument "),fn=o("code"),Pd=r("args"),Fd=r(", "),mn=o("code"),Wd=r("state"),Nd=r(" and "),hn=o("code"),jd=r("control"),zd=r(" are positionals for all events, all the others are grouped in "),pn=o("code"),Bd=r("kwargs"),Rd=r(`.
You can unpack the ones you need in the signature of the event using them. As an example, see the code of the
simple `),gn=o("code"),Vd=r("PrinterCallback"),Ud=r("."),qd=c(),g(xe.$$.fragment),Gd=c(),Oe=o("div"),g(Nt.$$.fragment),Hd=c(),un=o("p"),Jd=r("Event called at the beginning of an epoch."),Yd=c(),Me=o("div"),g(jt.$$.fragment),Xd=c(),_n=o("p"),Kd=r("Event called at the end of an epoch."),Qd=c(),Se=o("div"),g(zt.$$.fragment),Zd=c(),bn=o("p"),ef=r("Event called after an evaluation phase."),tf=c(),Ie=o("div"),g(Bt.$$.fragment),rf=c(),Rt=o("p"),af=r("Event called at the end of the initialization of the "),Hr=o("a"),nf=r("Trainer"),of=r("."),sf=c(),Pe=o("div"),g(Vt.$$.fragment),lf=c(),vn=o("p"),cf=r("Event called after logging the last logs."),df=c(),Fe=o("div"),g(Ut.$$.fragment),ff=c(),En=o("p"),mf=r("Event called after a prediction step."),hf=c(),We=o("div"),g(qt.$$.fragment),pf=c(),kn=o("p"),gf=r("Event called after a checkpoint save."),uf=c(),Ne=o("div"),g(Gt.$$.fragment),_f=c(),$n=o("p"),bf=r(`Event called at the beginning of a training step. If using gradient accumulation, one training step might take
several inputs.`),vf=c(),je=o("div"),g(Ht.$$.fragment),Ef=c(),Tn=o("p"),kf=r(`Event called at the end of a training step. If using gradient accumulation, one training step might take
several inputs.`),$f=c(),ze=o("div"),g(Jt.$$.fragment),Tf=c(),Cn=o("p"),Cf=r("Event called at the end of an substep during gradient accumulation."),wf=c(),Be=o("div"),g(Yt.$$.fragment),yf=c(),wn=o("p"),Af=r("Event called at the beginning of training."),Lf=c(),Re=o("div"),g(Xt.$$.fragment),Df=c(),yn=o("p"),xf=r("Event called at the end of training."),oo=c(),Ve=o("p"),Of=r("Here is an example of how to register a custom callback with the PyTorch "),Jr=o("a"),Mf=r("Trainer"),Sf=r(":"),so=c(),g(Kt.$$.fragment),lo=c(),Ue=o("p"),If=r("Another way to register a callback is to call "),An=o("code"),Pf=r("trainer.add_callback()"),Ff=r(" as follows:"),io=c(),g(Qt.$$.fragment),co=c(),ue=o("h2"),qe=o("a"),Ln=o("span"),g(Zt.$$.fragment),Wf=c(),Dn=o("span"),Nf=r("TrainerState"),fo=c(),F=o("div"),g(er.$$.fragment),jf=c(),_e=o("p"),zf=r("A class containing the "),Yr=o("a"),Bf=r("Trainer"),Rf=r(` inner state that will be saved along the model and optimizer when checkpointing
and passed to the `),Xr=o("a"),Vf=r("TrainerCallback"),Uf=r("."),qf=c(),g(Ge.$$.fragment),Gf=c(),He=o("div"),g(tr.$$.fragment),Hf=c(),rr=o("p"),Jf=r("Create an instance from the content of "),xn=o("code"),Yf=r("json_path"),Xf=r("."),Kf=c(),Je=o("div"),g(ar.$$.fragment),Qf=c(),nr=o("p"),Zf=r("Save the content of this instance in JSON format inside "),On=o("code"),em=r("json_path"),tm=r("."),mo=c(),be=o("h2"),Ye=o("a"),Mn=o("span"),g(or.$$.fragment),rm=c(),Sn=o("span"),am=r("TrainerControl"),ho=c(),ve=o("div"),g(sr.$$.fragment),nm=c(),Ee=o("p"),om=r("A class that handles the "),Kr=o("a"),sm=r("Trainer"),lm=r(" control flow. This class is used by the "),Qr=o("a"),im=r("TrainerCallback"),cm=r(` to activate some
switches in the training loop.`),this.h()},l(n){const f=Vp('[data-svelte="svelte-1phssyn"]',document.head);A=s(f,"META",{name:!0,content:!0}),f.forEach(t),z=d(n),D=s(n,"H1",{class:!0});var lr=l(D);x=s(lr,"A",{id:!0,class:!0,href:!0});var In=l(x);W=s(In,"SPAN",{});var hm=l(W);u(y.$$.fragment,hm),hm.forEach(t),In.forEach(t),N=d(lr),re=s(lr,"SPAN",{});var pm=l(re);ae=a(pm,"Callbacks"),pm.forEach(t),lr.forEach(t),j=d(n),G=s(n,"P",{});var go=l(G);dr=a(go,`Callbacks are objects that can customize the behavior of the training loop in the PyTorch
`),fr=s(go,"A",{href:!0});var gm=l(fr);as=a(gm,"Trainer"),gm.forEach(t),ns=a(go,` (this feature is not yet implemented in TensorFlow) that can inspect the training loop
state (for progress reporting, logging on TensorBoard or other ML platforms\u2026) and take decisions (like early
stopping).`),go.forEach(t),Bn=d(n),B=s(n,"P",{});var Xe=l(B);os=a(Xe,"Callbacks are \u201Cread only\u201D pieces of code, apart from the "),mr=s(Xe,"A",{href:!0});var um=l(mr);ss=a(um,"TrainerControl"),um.forEach(t),ls=a(Xe,` object they return, they
cannot change anything in the training loop. For customizations that require changes in the training loop, you should
subclass `),hr=s(Xe,"A",{href:!0});var _m=l(hr);is=a(_m,"Trainer"),_m.forEach(t),cs=a(Xe," and override the methods you need (see "),pr=s(Xe,"A",{href:!0});var bm=l(pr);ds=a(bm,"trainer"),bm.forEach(t),fs=a(Xe," for examples)."),Xe.forEach(t),Rn=d(n),ke=s(n,"P",{});var uo=l(ke);ms=a(uo,"By default a "),gr=s(uo,"A",{href:!0});var vm=l(gr);hs=a(vm,"Trainer"),vm.forEach(t),ps=a(uo," will use the following callbacks:"),uo.forEach(t),Vn=d(n),O=s(n,"UL",{});var I=l(O);ur=s(I,"LI",{});var dm=l(ur);_r=s(dm,"A",{href:!0});var Em=l(_r);gs=a(Em,"DefaultFlowCallback"),Em.forEach(t),us=a(dm," which handles the default behavior for logging, saving and evaluation."),dm.forEach(t),_s=d(I),Z=s(I,"LI",{});var ir=l(Z);br=s(ir,"A",{href:!0});var km=l(br);bs=a(km,"PrinterCallback"),km.forEach(t),vs=a(ir," or "),vr=s(ir,"A",{href:!0});var $m=l(vr);Es=a($m,"ProgressCallback"),$m.forEach(t),ks=a(ir,` to display progress and print the
logs (the first one is used if you deactivate tqdm through the `),Er=s(ir,"A",{href:!0});var Tm=l(Er);$s=a(Tm,"TrainingArguments"),Tm.forEach(t),Ts=a(ir,`, otherwise
it\u2019s the second one).`),ir.forEach(t),Cs=d(I),kr=s(I,"LI",{});var fm=l(kr);$r=s(fm,"A",{href:!0});var Cm=l($r);ws=a(Cm,"TensorBoardCallback"),Cm.forEach(t),ys=a(fm,` if tensorboard is accessible (either through PyTorch >= 1.4
or tensorboardX).`),fm.forEach(t),As=d(I),$e=s(I,"LI",{});var Pn=l($e);Tr=s(Pn,"A",{href:!0});var wm=l(Tr);Ls=a(wm,"WandbCallback"),wm.forEach(t),Ds=a(Pn," if "),tt=s(Pn,"A",{href:!0,rel:!0});var ym=l(tt);xs=a(ym,"wandb"),ym.forEach(t),Os=a(Pn," is installed."),Pn.forEach(t),Ms=d(I),Te=s(I,"LI",{});var Fn=l(Te);Cr=s(Fn,"A",{href:!0});var Am=l(Cr);Ss=a(Am,"CometCallback"),Am.forEach(t),Is=a(Fn," if "),rt=s(Fn,"A",{href:!0,rel:!0});var Lm=l(rt);Ps=a(Lm,"comet_ml"),Lm.forEach(t),Fs=a(Fn," is installed."),Fn.forEach(t),Ws=d(I),Ce=s(I,"LI",{});var Wn=l(Ce);wr=s(Wn,"A",{href:!0});var Dm=l(wr);Ns=a(Dm,"MLflowCallback"),Dm.forEach(t),js=a(Wn," if "),at=s(Wn,"A",{href:!0,rel:!0});var xm=l(at);zs=a(xm,"mlflow"),xm.forEach(t),Bs=a(Wn," is installed."),Wn.forEach(t),Rs=d(I),we=s(I,"LI",{});var Nn=l(we);yr=s(Nn,"A",{href:!0});var Om=l(yr);Vs=a(Om,"AzureMLCallback"),Om.forEach(t),Us=a(Nn," if "),nt=s(Nn,"A",{href:!0,rel:!0});var Mm=l(nt);qs=a(Mm,"azureml-sdk"),Mm.forEach(t),Gs=a(Nn,` is
installed.`),Nn.forEach(t),Hs=d(I),ye=s(I,"LI",{});var jn=l(ye);Ar=s(jn,"A",{href:!0});var Sm=l(Ar);Js=a(Sm,"CodeCarbonCallback"),Sm.forEach(t),Ys=a(jn," if "),ot=s(jn,"A",{href:!0,rel:!0});var Im=l(ot);Xs=a(Im,"codecarbon"),Im.forEach(t),Ks=a(jn,` is
installed.`),jn.forEach(t),I.forEach(t),Un=d(n),S=s(n,"P",{});var U=l(S);Qs=a(U,"The main class that implements callbacks is "),Lr=s(U,"A",{href:!0});var Pm=l(Lr);Zs=a(Pm,"TrainerCallback"),Pm.forEach(t),el=a(U,`. It gets the
`),Dr=s(U,"A",{href:!0});var Fm=l(Dr);tl=a(Fm,"TrainingArguments"),Fm.forEach(t),rl=a(U," used to instantiate the "),xr=s(U,"A",{href:!0});var Wm=l(xr);al=a(Wm,"Trainer"),Wm.forEach(t),nl=a(U,`, can access that
Trainer\u2019s internal state via `),Or=s(U,"A",{href:!0});var Nm=l(Or);ol=a(Nm,"TrainerState"),Nm.forEach(t),sl=a(U,`, and can take some actions on the training loop via
`),Mr=s(U,"A",{href:!0});var jm=l(Mr);ll=a(jm,"TrainerControl"),jm.forEach(t),il=a(U,"."),U.forEach(t),qn=d(n),ne=s(n,"H2",{class:!0});var _o=l(ne);Ae=s(_o,"A",{id:!0,class:!0,href:!0});var zm=l(Ae);da=s(zm,"SPAN",{});var Bm=l(da);u(st.$$.fragment,Bm),Bm.forEach(t),zm.forEach(t),cl=d(_o),fa=s(_o,"SPAN",{});var Rm=l(fa);dl=a(Rm,"Available Callbacks"),Rm.forEach(t),_o.forEach(t),Gn=d(n),Le=s(n,"P",{});var bo=l(Le);fl=a(bo,"Here is the list of the available "),Sr=s(bo,"A",{href:!0});var Vm=l(Sr);ml=a(Vm,"TrainerCallback"),Vm.forEach(t),hl=a(bo," in the library:"),bo.forEach(t),Hn=d(n),H=s(n,"DIV",{class:!0});var Zr=l(H);u(lt.$$.fragment,Zr),pl=d(Zr),oe=s(Zr,"P",{});var ea=l(oe);gl=a(ea,"A "),Ir=s(ea,"A",{href:!0});var Um=l(Ir);ul=a(Um,"TrainerCallback"),Um.forEach(t),_l=a(ea," that sends the logs to "),it=s(ea,"A",{href:!0,rel:!0});var qm=l(it);bl=a(qm,"Comet ML"),qm.forEach(t),vl=a(ea,"."),ea.forEach(t),El=d(Zr),R=s(Zr,"DIV",{class:!0});var Ke=l(R);u(ct.$$.fragment,Ke),kl=d(Ke),ma=s(Ke,"P",{});var Gm=l(ma);$l=a(Gm,"Setup the optional Comet.ml integration."),Gm.forEach(t),Tl=d(Ke),L=s(Ke,"P",{});var M=l(L);Cl=a(M,`Environment:
COMET_MODE (`),ha=s(M,"CODE",{});var Hm=l(ha);wl=a(Hm,"str"),Hm.forEach(t),yl=a(M,", "),pa=s(M,"EM",{});var Jm=l(pa);Al=a(Jm,"optional"),Jm.forEach(t),Ll=a(M,`):
Whether to create an online, offline experiment or disable Comet logging. Can be \u201COFFLINE\u201D, \u201CONLINE\u201D,
or \u201CDISABLED\u201D. Defaults to \u201CONLINE\u201D.
COMET_PROJECT_NAME (`),ga=s(M,"CODE",{});var Ym=l(ga);Dl=a(Ym,"str"),Ym.forEach(t),xl=a(M,", "),ua=s(M,"EM",{});var Xm=l(ua);Ol=a(Xm,"optional"),Xm.forEach(t),Ml=a(M,`):
Comet project name for experiments
COMET_OFFLINE_DIRECTORY (`),_a=s(M,"CODE",{});var Km=l(_a);Sl=a(Km,"str"),Km.forEach(t),Il=a(M,", "),ba=s(M,"EM",{});var Qm=l(ba);Pl=a(Qm,"optional"),Qm.forEach(t),Fl=a(M,`):
Folder to use for saving offline experiments when `),va=s(M,"CODE",{});var Zm=l(va);Wl=a(Zm,"COMET_MODE"),Zm.forEach(t),Nl=a(M,` is \u201COFFLINE\u201D
COMET_LOG_ASSETS (`),Ea=s(M,"CODE",{});var eh=l(Ea);jl=a(eh,"str"),eh.forEach(t),zl=a(M,", "),ka=s(M,"EM",{});var th=l(ka);Bl=a(th,"optional"),th.forEach(t),Rl=a(M,`):
Whether or not to log training assets (tf event logs, checkpoints, etc), to Comet. Can be \u201CTRUE\u201D, or
\u201CFALSE\u201D. Defaults to \u201CTRUE\u201D.`),M.forEach(t),Vl=d(Ke),dt=s(Ke,"P",{});var vo=l(dt);Ul=a(vo,`For a number of configurable items in the environment, see
`),ft=s(vo,"A",{href:!0,rel:!0});var rh=l(ft);ql=a(rh,"here"),rh.forEach(t),Gl=a(vo,"."),vo.forEach(t),Ke.forEach(t),Zr.forEach(t),Jn=d(n),se=s(n,"DIV",{class:!0});var Eo=l(se);u(mt.$$.fragment,Eo),Hl=d(Eo),ht=s(Eo,"P",{});var ko=l(ht);Jl=a(ko,"A "),Pr=s(ko,"A",{href:!0});var ah=l(Pr);Yl=a(ah,"TrainerCallback"),ah.forEach(t),Xl=a(ko," that handles the default flow of the training loop for logs, evaluation and checkpoints."),ko.forEach(t),Eo.forEach(t),Yn=d(n),le=s(n,"DIV",{class:!0});var $o=l(le);u(pt.$$.fragment,$o),Kl=d($o),gt=s($o,"P",{});var To=l(gt);Ql=a(To,"A bare "),Fr=s(To,"A",{href:!0});var nh=l(Fr);Zl=a(nh,"TrainerCallback"),nh.forEach(t),ei=a(To," that just prints the logs."),To.forEach(t),$o.forEach(t),Xn=d(n),ie=s(n,"DIV",{class:!0});var Co=l(ie);u(ut.$$.fragment,Co),ti=d(Co),_t=s(Co,"P",{});var wo=l(_t);ri=a(wo,"A "),Wr=s(wo,"A",{href:!0});var oh=l(Wr);ai=a(oh,"TrainerCallback"),oh.forEach(t),ni=a(wo," that displays the progress of training or evaluation."),wo.forEach(t),Co.forEach(t),Kn=d(n),J=s(n,"DIV",{class:!0});var ta=l(J);u(bt.$$.fragment,ta),oi=d(ta),vt=s(ta,"P",{});var yo=l(vt);si=a(yo,"A "),Nr=s(yo,"A",{href:!0});var sh=l(Nr);li=a(sh,"TrainerCallback"),sh.forEach(t),ii=a(yo," that handles early stopping."),yo.forEach(t),ci=d(ta),Y=s(ta,"P",{});var Qe=l(Y);di=a(Qe,"This callback depends on "),jr=s(Qe,"A",{href:!0});var lh=l(jr);fi=a(lh,"TrainingArguments"),lh.forEach(t),mi=a(Qe," argument "),$a=s(Qe,"EM",{});var ih=l($a);hi=a(ih,"load_best_model_at_end"),ih.forEach(t),pi=a(Qe,` functionality to set best_metric
in `),zr=s(Qe,"A",{href:!0});var ch=l(zr);gi=a(ch,"TrainerState"),ch.forEach(t),ui=a(Qe,"."),Qe.forEach(t),ta.forEach(t),Qn=d(n),ce=s(n,"DIV",{class:!0});var Ao=l(ce);u(Et.$$.fragment,Ao),_i=d(Ao),de=s(Ao,"P",{});var ra=l(de);bi=a(ra,"A "),Br=s(ra,"A",{href:!0});var dh=l(Br);vi=a(dh,"TrainerCallback"),dh.forEach(t),Ei=a(ra," that sends the logs to "),kt=s(ra,"A",{href:!0,rel:!0});var fh=l(kt);ki=a(fh,"TensorBoard"),fh.forEach(t),$i=a(ra,"."),ra.forEach(t),Ao.forEach(t),Zn=d(n),X=s(n,"DIV",{class:!0});var aa=l(X);u($t.$$.fragment,aa),Ti=d(aa),fe=s(aa,"P",{});var na=l(fe);Ci=a(na,"A "),Rr=s(na,"A",{href:!0});var mh=l(Rr);wi=a(mh,"TrainerCallback"),mh.forEach(t),yi=a(na," that sends the logs to "),Tt=s(na,"A",{href:!0,rel:!0});var hh=l(Tt);Ai=a(hh,"Weight and Biases"),hh.forEach(t),Li=a(na,"."),na.forEach(t),Di=d(aa),V=s(aa,"DIV",{class:!0});var Ze=l(V);u(Ct.$$.fragment,Ze),xi=d(Ze),wt=s(Ze,"P",{});var Lo=l(wt);Oi=a(Lo,"Setup the optional Weights & Biases ("),Ta=s(Lo,"EM",{});var ph=l(Ta);Mi=a(ph,"wandb"),ph.forEach(t),Si=a(Lo,") integration."),Lo.forEach(t),Ii=d(Ze),yt=s(Ze,"P",{});var Do=l(yt);Pi=a(Do,`One can subclass and override this method to customize the setup if needed. Find more information
`),At=s(Do,"A",{href:!0,rel:!0});var gh=l(At);Fi=a(gh,"here"),gh.forEach(t),Wi=a(Do,`. You can also override the following environment
variables:`),Do.forEach(t),Ni=d(Ze),h=s(Ze,"P",{});var p=l(h);ji=a(p,`Environment:
WANDB_LOG_MODEL (`),Ca=s(p,"CODE",{});var uh=l(Ca);zi=a(uh,"bool"),uh.forEach(t),Bi=a(p,", "),wa=s(p,"EM",{});var _h=l(wa);Ri=a(_h,"optional"),_h.forEach(t),Vi=a(p,", defaults to "),ya=s(p,"CODE",{});var bh=l(ya);Ui=a(bh,"False"),bh.forEach(t),qi=a(p,`):
Whether or not to log model as artifact at the end of training. Use along with
`),Aa=s(p,"EM",{});var vh=l(Aa);Gi=a(vh,"TrainingArguments.load_best_model_at_end"),vh.forEach(t),Hi=a(p,` to upload best model.
WANDB_WATCH (`),La=s(p,"CODE",{});var Eh=l(La);Ji=a(Eh,"str"),Eh.forEach(t),Yi=a(p,", "),Da=s(p,"EM",{});var kh=l(Da);Xi=a(kh,"optional"),kh.forEach(t),Ki=a(p," defaults to "),xa=s(p,"CODE",{});var $h=l(xa);Qi=a($h,'"gradients"'),$h.forEach(t),Zi=a(p,`):
Can be `),Oa=s(p,"CODE",{});var Th=l(Oa);ec=a(Th,'"gradients"'),Th.forEach(t),tc=a(p,", "),Ma=s(p,"CODE",{});var Ch=l(Ma);rc=a(Ch,'"all"'),Ch.forEach(t),ac=a(p," or "),Sa=s(p,"CODE",{});var wh=l(Sa);nc=a(wh,'"false"'),wh.forEach(t),oc=a(p,". Set to "),Ia=s(p,"CODE",{});var yh=l(Ia);sc=a(yh,'"false"'),yh.forEach(t),lc=a(p," to disable gradient logging or "),Pa=s(p,"CODE",{});var Ah=l(Pa);ic=a(Ah,'"all"'),Ah.forEach(t),cc=a(p,` to
log gradients and parameters.
WANDB_PROJECT (`),Fa=s(p,"CODE",{});var Lh=l(Fa);dc=a(Lh,"str"),Lh.forEach(t),fc=a(p,", "),Wa=s(p,"EM",{});var Dh=l(Wa);mc=a(Dh,"optional"),Dh.forEach(t),hc=a(p,", defaults to "),Na=s(p,"CODE",{});var xh=l(Na);pc=a(xh,'"huggingface"'),xh.forEach(t),gc=a(p,`):
Set this to a custom string to store results in a different project.
WANDB_DISABLED (`),ja=s(p,"CODE",{});var Oh=l(ja);uc=a(Oh,"bool"),Oh.forEach(t),_c=a(p,", "),za=s(p,"EM",{});var Mh=l(za);bc=a(Mh,"optional"),Mh.forEach(t),vc=a(p,", defaults to "),Ba=s(p,"CODE",{});var Sh=l(Ba);Ec=a(Sh,"False"),Sh.forEach(t),kc=a(p,`):
Whether or not to disable wandb entirely. Set `),Ra=s(p,"EM",{});var Ih=l(Ra);$c=a(Ih,"WANDB_DISABLED=true"),Ih.forEach(t),Tc=a(p," to disable."),p.forEach(t),Ze.forEach(t),aa.forEach(t),eo=d(n),K=s(n,"DIV",{class:!0});var oa=l(K);u(Lt.$$.fragment,oa),Cc=d(oa),Q=s(oa,"P",{});var et=l(Q);wc=a(et,"A "),Vr=s(et,"A",{href:!0});var Ph=l(Vr);yc=a(Ph,"TrainerCallback"),Ph.forEach(t),Ac=a(et," that sends the logs to "),Dt=s(et,"A",{href:!0,rel:!0});var Fh=l(Dt);Lc=a(Fh,"MLflow"),Fh.forEach(t),Dc=a(et,`. Can be disabled by setting
environment variable `),Va=s(et,"CODE",{});var Wh=l(Va);xc=a(Wh,"DISABLE_MLFLOW_INTEGRATION = TRUE"),Wh.forEach(t),Oc=a(et,"."),et.forEach(t),Mc=d(oa),ee=s(oa,"DIV",{class:!0});var sa=l(ee);u(xt.$$.fragment,sa),Sc=d(sa),Ua=s(sa,"P",{});var Nh=l(Ua);Ic=a(Nh,"Setup the optional MLflow integration."),Nh.forEach(t),Pc=d(sa),$=s(sa,"P",{});var T=l($);Fc=a(T,`Environment:
HF_MLFLOW_LOG_ARTIFACTS (`),qa=s(T,"CODE",{});var jh=l(qa);Wc=a(jh,"str"),jh.forEach(t),Nc=a(T,", "),Ga=s(T,"EM",{});var zh=l(Ga);jc=a(zh,"optional"),zh.forEach(t),zc=a(T,`):
Whether to use MLflow .log_artifact() facility to log artifacts. This only makes sense if logging to a
remote server, e.g. s3 or GCS. If set to `),Ha=s(T,"CODE",{});var Bh=l(Ha);Bc=a(Bh,"True"),Bh.forEach(t),Rc=a(T," or "),Ja=s(T,"EM",{});var Rh=l(Ja);Vc=a(Rh,"1"),Rh.forEach(t),Uc=a(T,`, will copy whatever is in
`),Ur=s(T,"A",{href:!0});var Vh=l(Ur);qc=a(Vh,"TrainingArguments"),Vh.forEach(t),Gc=a(T,"\u2019s "),Ya=s(T,"CODE",{});var Uh=l(Ya);Hc=a(Uh,"output_dir"),Uh.forEach(t),Jc=a(T,` to the local or remote artifact storage. Using it without a remote
storage will just copy the files to your artifact location.
MLFLOW_EXPERIMENT_NAME (`),Xa=s(T,"CODE",{});var qh=l(Xa);Yc=a(qh,"str"),qh.forEach(t),Xc=a(T,", "),Ka=s(T,"EM",{});var Gh=l(Ka);Kc=a(Gh,"optional"),Gh.forEach(t),Qc=a(T,`):
Whether to use an MLflow experiment_name under which to launch the run. Default to \u201CNone\u201D which will
point to the \u201CDefault\u201D experiment in MLflow. Otherwise, it is a case sensitive name of the experiment
to be activated. If an experiment with this name does not exist, a new experiment with this name is
created.
MLFLOW_TAGS (`),Qa=s(T,"CODE",{});var Hh=l(Qa);Zc=a(Hh,"str"),Hh.forEach(t),ed=a(T,", "),Za=s(T,"EM",{});var Jh=l(Za);td=a(Jh,"optional"),Jh.forEach(t),rd=a(T,`):
A string dump of a dictionary of key/value pair to be added to the MLflow run as tags. Example:
os.environ[\u2018MLFLOW_TAGS\u2019]=\u2019{\u201Crelease.candidate\u201D: \u201CRC1\u201D, \u201Crelease.version\u201D: \u201C2.2.0\u201D}\u2019
MLFLOW_NESTED_RUN (`),en=s(T,"CODE",{});var Yh=l(en);ad=a(Yh,"str"),Yh.forEach(t),nd=a(T,", "),tn=s(T,"EM",{});var Xh=l(tn);od=a(Xh,"optional"),Xh.forEach(t),sd=a(T,`):
Whether to use MLflow nested runs. If set to `),rn=s(T,"CODE",{});var Kh=l(rn);ld=a(Kh,"True"),Kh.forEach(t),id=a(T," or "),an=s(T,"EM",{});var Qh=l(an);cd=a(Qh,"1"),Qh.forEach(t),dd=a(T,`, will create a nested run inside the current
run.
MLFLOW_RUN_ID (`),nn=s(T,"CODE",{});var Zh=l(nn);fd=a(Zh,"str"),Zh.forEach(t),md=a(T,", "),on=s(T,"EM",{});var ep=l(on);hd=a(ep,"optional"),ep.forEach(t),pd=a(T,`):
Allow to reattach to an existing run which can be usefull when resuming training from a checkpoint.
When MLFLOW_RUN_ID environment variable is set, start_run attempts to resume a run with the specified
run ID and other parameters are ignored.`),T.forEach(t),sa.forEach(t),oa.forEach(t),to=d(n),me=s(n,"DIV",{class:!0});var xo=l(me);u(Ot.$$.fragment,xo),gd=d(xo),he=s(xo,"P",{});var la=l(he);ud=a(la,"A "),qr=s(la,"A",{href:!0});var tp=l(qr);_d=a(tp,"TrainerCallback"),tp.forEach(t),bd=a(la," that sends the logs to "),Mt=s(la,"A",{href:!0,rel:!0});var rp=l(Mt);vd=a(rp,"AzureML"),rp.forEach(t),Ed=a(la,"."),la.forEach(t),xo.forEach(t),ro=d(n),pe=s(n,"DIV",{class:!0});var Oo=l(pe);u(St.$$.fragment,Oo),kd=d(Oo),It=s(Oo,"P",{});var Mo=l(It);$d=a(Mo,"A "),Gr=s(Mo,"A",{href:!0});var ap=l(Gr);Td=a(ap,"TrainerCallback"),ap.forEach(t),Cd=a(Mo," that tracks the CO2 emission of training."),Mo.forEach(t),Oo.forEach(t),ao=d(n),ge=s(n,"H2",{class:!0});var So=l(ge);De=s(So,"A",{id:!0,class:!0,href:!0});var np=l(De);sn=s(np,"SPAN",{});var op=l(sn);u(Pt.$$.fragment,op),op.forEach(t),np.forEach(t),wd=d(So),ln=s(So,"SPAN",{});var sp=l(ln);yd=a(sp,"TrainerCallback"),sp.forEach(t),So.forEach(t),no=d(n),k=s(n,"DIV",{class:!0});var C=l(k);u(Ft.$$.fragment,C),Ad=d(C),cn=s(C,"P",{});var lp=l(cn);Ld=a(lp,`A class for objects that will inspect the state of the training loop at some events and take some decisions. At
each of those events the following arguments are available:`),lp.forEach(t),Dd=d(C),Wt=s(C,"P",{});var Io=l(Wt);xd=a(Io,"The "),dn=s(Io,"CODE",{});var ip=l(dn);Od=a(ip,"control"),ip.forEach(t),Md=a(Io,` object is the only one that can be changed by the callback, in which case the event that changes it
should return the modified version.`),Io.forEach(t),Sd=d(C),P=s(C,"P",{});var q=l(P);Id=a(q,"The argument "),fn=s(q,"CODE",{});var cp=l(fn);Pd=a(cp,"args"),cp.forEach(t),Fd=a(q,", "),mn=s(q,"CODE",{});var dp=l(mn);Wd=a(dp,"state"),dp.forEach(t),Nd=a(q," and "),hn=s(q,"CODE",{});var fp=l(hn);jd=a(fp,"control"),fp.forEach(t),zd=a(q," are positionals for all events, all the others are grouped in "),pn=s(q,"CODE",{});var mp=l(pn);Bd=a(mp,"kwargs"),mp.forEach(t),Rd=a(q,`.
You can unpack the ones you need in the signature of the event using them. As an example, see the code of the
simple `),gn=s(q,"CODE",{});var hp=l(gn);Vd=a(hp,"PrinterCallback"),hp.forEach(t),Ud=a(q,"."),q.forEach(t),qd=d(C),u(xe.$$.fragment,C),Gd=d(C),Oe=s(C,"DIV",{class:!0});var Po=l(Oe);u(Nt.$$.fragment,Po),Hd=d(Po),un=s(Po,"P",{});var pp=l(un);Jd=a(pp,"Event called at the beginning of an epoch."),pp.forEach(t),Po.forEach(t),Yd=d(C),Me=s(C,"DIV",{class:!0});var Fo=l(Me);u(jt.$$.fragment,Fo),Xd=d(Fo),_n=s(Fo,"P",{});var gp=l(_n);Kd=a(gp,"Event called at the end of an epoch."),gp.forEach(t),Fo.forEach(t),Qd=d(C),Se=s(C,"DIV",{class:!0});var Wo=l(Se);u(zt.$$.fragment,Wo),Zd=d(Wo),bn=s(Wo,"P",{});var up=l(bn);ef=a(up,"Event called after an evaluation phase."),up.forEach(t),Wo.forEach(t),tf=d(C),Ie=s(C,"DIV",{class:!0});var No=l(Ie);u(Bt.$$.fragment,No),rf=d(No),Rt=s(No,"P",{});var jo=l(Rt);af=a(jo,"Event called at the end of the initialization of the "),Hr=s(jo,"A",{href:!0});var _p=l(Hr);nf=a(_p,"Trainer"),_p.forEach(t),of=a(jo,"."),jo.forEach(t),No.forEach(t),sf=d(C),Pe=s(C,"DIV",{class:!0});var zo=l(Pe);u(Vt.$$.fragment,zo),lf=d(zo),vn=s(zo,"P",{});var bp=l(vn);cf=a(bp,"Event called after logging the last logs."),bp.forEach(t),zo.forEach(t),df=d(C),Fe=s(C,"DIV",{class:!0});var Bo=l(Fe);u(Ut.$$.fragment,Bo),ff=d(Bo),En=s(Bo,"P",{});var vp=l(En);mf=a(vp,"Event called after a prediction step."),vp.forEach(t),Bo.forEach(t),hf=d(C),We=s(C,"DIV",{class:!0});var Ro=l(We);u(qt.$$.fragment,Ro),pf=d(Ro),kn=s(Ro,"P",{});var Ep=l(kn);gf=a(Ep,"Event called after a checkpoint save."),Ep.forEach(t),Ro.forEach(t),uf=d(C),Ne=s(C,"DIV",{class:!0});var Vo=l(Ne);u(Gt.$$.fragment,Vo),_f=d(Vo),$n=s(Vo,"P",{});var kp=l($n);bf=a(kp,`Event called at the beginning of a training step. If using gradient accumulation, one training step might take
several inputs.`),kp.forEach(t),Vo.forEach(t),vf=d(C),je=s(C,"DIV",{class:!0});var Uo=l(je);u(Ht.$$.fragment,Uo),Ef=d(Uo),Tn=s(Uo,"P",{});var $p=l(Tn);kf=a($p,`Event called at the end of a training step. If using gradient accumulation, one training step might take
several inputs.`),$p.forEach(t),Uo.forEach(t),$f=d(C),ze=s(C,"DIV",{class:!0});var qo=l(ze);u(Jt.$$.fragment,qo),Tf=d(qo),Cn=s(qo,"P",{});var Tp=l(Cn);Cf=a(Tp,"Event called at the end of an substep during gradient accumulation."),Tp.forEach(t),qo.forEach(t),wf=d(C),Be=s(C,"DIV",{class:!0});var Go=l(Be);u(Yt.$$.fragment,Go),yf=d(Go),wn=s(Go,"P",{});var Cp=l(wn);Af=a(Cp,"Event called at the beginning of training."),Cp.forEach(t),Go.forEach(t),Lf=d(C),Re=s(C,"DIV",{class:!0});var Ho=l(Re);u(Xt.$$.fragment,Ho),Df=d(Ho),yn=s(Ho,"P",{});var wp=l(yn);xf=a(wp,"Event called at the end of training."),wp.forEach(t),Ho.forEach(t),C.forEach(t),oo=d(n),Ve=s(n,"P",{});var Jo=l(Ve);Of=a(Jo,"Here is an example of how to register a custom callback with the PyTorch "),Jr=s(Jo,"A",{href:!0});var yp=l(Jr);Mf=a(yp,"Trainer"),yp.forEach(t),Sf=a(Jo,":"),Jo.forEach(t),so=d(n),u(Kt.$$.fragment,n),lo=d(n),Ue=s(n,"P",{});var Yo=l(Ue);If=a(Yo,"Another way to register a callback is to call "),An=s(Yo,"CODE",{});var Ap=l(An);Pf=a(Ap,"trainer.add_callback()"),Ap.forEach(t),Ff=a(Yo," as follows:"),Yo.forEach(t),io=d(n),u(Qt.$$.fragment,n),co=d(n),ue=s(n,"H2",{class:!0});var Xo=l(ue);qe=s(Xo,"A",{id:!0,class:!0,href:!0});var Lp=l(qe);Ln=s(Lp,"SPAN",{});var Dp=l(Ln);u(Zt.$$.fragment,Dp),Dp.forEach(t),Lp.forEach(t),Wf=d(Xo),Dn=s(Xo,"SPAN",{});var xp=l(Dn);Nf=a(xp,"TrainerState"),xp.forEach(t),Xo.forEach(t),fo=d(n),F=s(n,"DIV",{class:!0});var te=l(F);u(er.$$.fragment,te),jf=d(te),_e=s(te,"P",{});var ia=l(_e);zf=a(ia,"A class containing the "),Yr=s(ia,"A",{href:!0});var Op=l(Yr);Bf=a(Op,"Trainer"),Op.forEach(t),Rf=a(ia,` inner state that will be saved along the model and optimizer when checkpointing
and passed to the `),Xr=s(ia,"A",{href:!0});var Mp=l(Xr);Vf=a(Mp,"TrainerCallback"),Mp.forEach(t),Uf=a(ia,"."),ia.forEach(t),qf=d(te),u(Ge.$$.fragment,te),Gf=d(te),He=s(te,"DIV",{class:!0});var Ko=l(He);u(tr.$$.fragment,Ko),Hf=d(Ko),rr=s(Ko,"P",{});var Qo=l(rr);Jf=a(Qo,"Create an instance from the content of "),xn=s(Qo,"CODE",{});var Sp=l(xn);Yf=a(Sp,"json_path"),Sp.forEach(t),Xf=a(Qo,"."),Qo.forEach(t),Ko.forEach(t),Kf=d(te),Je=s(te,"DIV",{class:!0});var Zo=l(Je);u(ar.$$.fragment,Zo),Qf=d(Zo),nr=s(Zo,"P",{});var es=l(nr);Zf=a(es,"Save the content of this instance in JSON format inside "),On=s(es,"CODE",{});var Ip=l(On);em=a(Ip,"json_path"),Ip.forEach(t),tm=a(es,"."),es.forEach(t),Zo.forEach(t),te.forEach(t),mo=d(n),be=s(n,"H2",{class:!0});var ts=l(be);Ye=s(ts,"A",{id:!0,class:!0,href:!0});var Pp=l(Ye);Mn=s(Pp,"SPAN",{});var Fp=l(Mn);u(or.$$.fragment,Fp),Fp.forEach(t),Pp.forEach(t),rm=d(ts),Sn=s(ts,"SPAN",{});var Wp=l(Sn);am=a(Wp,"TrainerControl"),Wp.forEach(t),ts.forEach(t),ho=d(n),ve=s(n,"DIV",{class:!0});var rs=l(ve);u(sr.$$.fragment,rs),nm=d(rs),Ee=s(rs,"P",{});var ca=l(Ee);om=a(ca,"A class that handles the "),Kr=s(ca,"A",{href:!0});var Np=l(Kr);sm=a(Np,"Trainer"),Np.forEach(t),lm=a(ca," control flow. This class is used by the "),Qr=s(ca,"A",{href:!0});var jp=l(Qr);im=a(jp,"TrainerCallback"),jp.forEach(t),cm=a(ca,` to activate some
switches in the training loop.`),ca.forEach(t),rs.forEach(t),this.h()},h(){i(A,"name","hf:doc:metadata"),i(A,"content",JSON.stringify(Kp)),i(x,"id","callbacks"),i(x,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(x,"href","#callbacks"),i(D,"class","relative group"),i(fr,"href","/docs/transformers/pr_17130/en/main_classes/trainer#transformers.Trainer"),i(mr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerControl"),i(hr,"href","/docs/transformers/pr_17130/en/main_classes/trainer#transformers.Trainer"),i(pr,"href","trainer"),i(gr,"href","/docs/transformers/pr_17130/en/main_classes/trainer#transformers.Trainer"),i(_r,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.DefaultFlowCallback"),i(br,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.PrinterCallback"),i(vr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.ProgressCallback"),i(Er,"href","/docs/transformers/pr_17130/en/main_classes/trainer#transformers.TrainingArguments"),i($r,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.integrations.TensorBoardCallback"),i(Tr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.integrations.WandbCallback"),i(tt,"href","https://www.wandb.com/"),i(tt,"rel","nofollow"),i(Cr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.integrations.CometCallback"),i(rt,"href","https://www.comet.ml/site/"),i(rt,"rel","nofollow"),i(wr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.integrations.MLflowCallback"),i(at,"href","https://www.mlflow.org/"),i(at,"rel","nofollow"),i(yr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.integrations.AzureMLCallback"),i(nt,"href","https://pypi.org/project/azureml-sdk/"),i(nt,"rel","nofollow"),i(Ar,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.integrations.CodeCarbonCallback"),i(ot,"href","https://pypi.org/project/codecarbon/"),i(ot,"rel","nofollow"),i(Lr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerCallback"),i(Dr,"href","/docs/transformers/pr_17130/en/main_classes/trainer#transformers.TrainingArguments"),i(xr,"href","/docs/transformers/pr_17130/en/main_classes/trainer#transformers.Trainer"),i(Or,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerState"),i(Mr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerControl"),i(Ae,"id","transformers.integrations.CometCallback"),i(Ae,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Ae,"href","#transformers.integrations.CometCallback"),i(ne,"class","relative group"),i(Sr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerCallback"),i(Ir,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerCallback"),i(it,"href","https://www.comet.ml/site/"),i(it,"rel","nofollow"),i(ft,"href","https://www.comet.ml/docs/python-sdk/advanced/#comet-configuration-variables"),i(ft,"rel","nofollow"),i(R,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(H,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Pr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerCallback"),i(se,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Fr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerCallback"),i(le,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Wr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerCallback"),i(ie,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Nr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerCallback"),i(jr,"href","/docs/transformers/pr_17130/en/main_classes/trainer#transformers.TrainingArguments"),i(zr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerState"),i(J,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Br,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerCallback"),i(kt,"href","https://www.tensorflow.org/tensorboard"),i(kt,"rel","nofollow"),i(ce,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Rr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerCallback"),i(Tt,"href","https://www.wandb.com/"),i(Tt,"rel","nofollow"),i(At,"href","https://docs.wandb.ai/integrations/huggingface"),i(At,"rel","nofollow"),i(V,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(X,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Vr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerCallback"),i(Dt,"href","https://www.mlflow.org/"),i(Dt,"rel","nofollow"),i(Ur,"href","/docs/transformers/pr_17130/en/main_classes/trainer#transformers.TrainingArguments"),i(ee,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(K,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(qr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerCallback"),i(Mt,"href","https://pypi.org/project/azureml-sdk/"),i(Mt,"rel","nofollow"),i(me,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Gr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerCallback"),i(pe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(De,"id","transformers.TrainerCallback"),i(De,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(De,"href","#transformers.TrainerCallback"),i(ge,"class","relative group"),i(Oe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Me,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Se,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Hr,"href","/docs/transformers/pr_17130/en/main_classes/trainer#transformers.Trainer"),i(Ie,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Pe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Fe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(We,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Ne,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(je,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(ze,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Be,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Re,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(k,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Jr,"href","/docs/transformers/pr_17130/en/main_classes/trainer#transformers.Trainer"),i(qe,"id","transformers.TrainerState"),i(qe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(qe,"href","#transformers.TrainerState"),i(ue,"class","relative group"),i(Yr,"href","/docs/transformers/pr_17130/en/main_classes/trainer#transformers.Trainer"),i(Xr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerCallback"),i(He,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Je,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(F,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),i(Ye,"id","transformers.TrainerControl"),i(Ye,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Ye,"href","#transformers.TrainerControl"),i(be,"class","relative group"),i(Kr,"href","/docs/transformers/pr_17130/en/main_classes/trainer#transformers.Trainer"),i(Qr,"href","/docs/transformers/pr_17130/en/main_classes/callback#transformers.TrainerCallback"),i(ve,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(n,f){e(document.head,A),m(n,z,f),m(n,D,f),e(D,x),e(x,W),_(y,W,null),e(D,N),e(D,re),e(re,ae),m(n,j,f),m(n,G,f),e(G,dr),e(G,fr),e(fr,as),e(G,ns),m(n,Bn,f),m(n,B,f),e(B,os),e(B,mr),e(mr,ss),e(B,ls),e(B,hr),e(hr,is),e(B,cs),e(B,pr),e(pr,ds),e(B,fs),m(n,Rn,f),m(n,ke,f),e(ke,ms),e(ke,gr),e(gr,hs),e(ke,ps),m(n,Vn,f),m(n,O,f),e(O,ur),e(ur,_r),e(_r,gs),e(ur,us),e(O,_s),e(O,Z),e(Z,br),e(br,bs),e(Z,vs),e(Z,vr),e(vr,Es),e(Z,ks),e(Z,Er),e(Er,$s),e(Z,Ts),e(O,Cs),e(O,kr),e(kr,$r),e($r,ws),e(kr,ys),e(O,As),e(O,$e),e($e,Tr),e(Tr,Ls),e($e,Ds),e($e,tt),e(tt,xs),e($e,Os),e(O,Ms),e(O,Te),e(Te,Cr),e(Cr,Ss),e(Te,Is),e(Te,rt),e(rt,Ps),e(Te,Fs),e(O,Ws),e(O,Ce),e(Ce,wr),e(wr,Ns),e(Ce,js),e(Ce,at),e(at,zs),e(Ce,Bs),e(O,Rs),e(O,we),e(we,yr),e(yr,Vs),e(we,Us),e(we,nt),e(nt,qs),e(we,Gs),e(O,Hs),e(O,ye),e(ye,Ar),e(Ar,Js),e(ye,Ys),e(ye,ot),e(ot,Xs),e(ye,Ks),m(n,Un,f),m(n,S,f),e(S,Qs),e(S,Lr),e(Lr,Zs),e(S,el),e(S,Dr),e(Dr,tl),e(S,rl),e(S,xr),e(xr,al),e(S,nl),e(S,Or),e(Or,ol),e(S,sl),e(S,Mr),e(Mr,ll),e(S,il),m(n,qn,f),m(n,ne,f),e(ne,Ae),e(Ae,da),_(st,da,null),e(ne,cl),e(ne,fa),e(fa,dl),m(n,Gn,f),m(n,Le,f),e(Le,fl),e(Le,Sr),e(Sr,ml),e(Le,hl),m(n,Hn,f),m(n,H,f),_(lt,H,null),e(H,pl),e(H,oe),e(oe,gl),e(oe,Ir),e(Ir,ul),e(oe,_l),e(oe,it),e(it,bl),e(oe,vl),e(H,El),e(H,R),_(ct,R,null),e(R,kl),e(R,ma),e(ma,$l),e(R,Tl),e(R,L),e(L,Cl),e(L,ha),e(ha,wl),e(L,yl),e(L,pa),e(pa,Al),e(L,Ll),e(L,ga),e(ga,Dl),e(L,xl),e(L,ua),e(ua,Ol),e(L,Ml),e(L,_a),e(_a,Sl),e(L,Il),e(L,ba),e(ba,Pl),e(L,Fl),e(L,va),e(va,Wl),e(L,Nl),e(L,Ea),e(Ea,jl),e(L,zl),e(L,ka),e(ka,Bl),e(L,Rl),e(R,Vl),e(R,dt),e(dt,Ul),e(dt,ft),e(ft,ql),e(dt,Gl),m(n,Jn,f),m(n,se,f),_(mt,se,null),e(se,Hl),e(se,ht),e(ht,Jl),e(ht,Pr),e(Pr,Yl),e(ht,Xl),m(n,Yn,f),m(n,le,f),_(pt,le,null),e(le,Kl),e(le,gt),e(gt,Ql),e(gt,Fr),e(Fr,Zl),e(gt,ei),m(n,Xn,f),m(n,ie,f),_(ut,ie,null),e(ie,ti),e(ie,_t),e(_t,ri),e(_t,Wr),e(Wr,ai),e(_t,ni),m(n,Kn,f),m(n,J,f),_(bt,J,null),e(J,oi),e(J,vt),e(vt,si),e(vt,Nr),e(Nr,li),e(vt,ii),e(J,ci),e(J,Y),e(Y,di),e(Y,jr),e(jr,fi),e(Y,mi),e(Y,$a),e($a,hi),e(Y,pi),e(Y,zr),e(zr,gi),e(Y,ui),m(n,Qn,f),m(n,ce,f),_(Et,ce,null),e(ce,_i),e(ce,de),e(de,bi),e(de,Br),e(Br,vi),e(de,Ei),e(de,kt),e(kt,ki),e(de,$i),m(n,Zn,f),m(n,X,f),_($t,X,null),e(X,Ti),e(X,fe),e(fe,Ci),e(fe,Rr),e(Rr,wi),e(fe,yi),e(fe,Tt),e(Tt,Ai),e(fe,Li),e(X,Di),e(X,V),_(Ct,V,null),e(V,xi),e(V,wt),e(wt,Oi),e(wt,Ta),e(Ta,Mi),e(wt,Si),e(V,Ii),e(V,yt),e(yt,Pi),e(yt,At),e(At,Fi),e(yt,Wi),e(V,Ni),e(V,h),e(h,ji),e(h,Ca),e(Ca,zi),e(h,Bi),e(h,wa),e(wa,Ri),e(h,Vi),e(h,ya),e(ya,Ui),e(h,qi),e(h,Aa),e(Aa,Gi),e(h,Hi),e(h,La),e(La,Ji),e(h,Yi),e(h,Da),e(Da,Xi),e(h,Ki),e(h,xa),e(xa,Qi),e(h,Zi),e(h,Oa),e(Oa,ec),e(h,tc),e(h,Ma),e(Ma,rc),e(h,ac),e(h,Sa),e(Sa,nc),e(h,oc),e(h,Ia),e(Ia,sc),e(h,lc),e(h,Pa),e(Pa,ic),e(h,cc),e(h,Fa),e(Fa,dc),e(h,fc),e(h,Wa),e(Wa,mc),e(h,hc),e(h,Na),e(Na,pc),e(h,gc),e(h,ja),e(ja,uc),e(h,_c),e(h,za),e(za,bc),e(h,vc),e(h,Ba),e(Ba,Ec),e(h,kc),e(h,Ra),e(Ra,$c),e(h,Tc),m(n,eo,f),m(n,K,f),_(Lt,K,null),e(K,Cc),e(K,Q),e(Q,wc),e(Q,Vr),e(Vr,yc),e(Q,Ac),e(Q,Dt),e(Dt,Lc),e(Q,Dc),e(Q,Va),e(Va,xc),e(Q,Oc),e(K,Mc),e(K,ee),_(xt,ee,null),e(ee,Sc),e(ee,Ua),e(Ua,Ic),e(ee,Pc),e(ee,$),e($,Fc),e($,qa),e(qa,Wc),e($,Nc),e($,Ga),e(Ga,jc),e($,zc),e($,Ha),e(Ha,Bc),e($,Rc),e($,Ja),e(Ja,Vc),e($,Uc),e($,Ur),e(Ur,qc),e($,Gc),e($,Ya),e(Ya,Hc),e($,Jc),e($,Xa),e(Xa,Yc),e($,Xc),e($,Ka),e(Ka,Kc),e($,Qc),e($,Qa),e(Qa,Zc),e($,ed),e($,Za),e(Za,td),e($,rd),e($,en),e(en,ad),e($,nd),e($,tn),e(tn,od),e($,sd),e($,rn),e(rn,ld),e($,id),e($,an),e(an,cd),e($,dd),e($,nn),e(nn,fd),e($,md),e($,on),e(on,hd),e($,pd),m(n,to,f),m(n,me,f),_(Ot,me,null),e(me,gd),e(me,he),e(he,ud),e(he,qr),e(qr,_d),e(he,bd),e(he,Mt),e(Mt,vd),e(he,Ed),m(n,ro,f),m(n,pe,f),_(St,pe,null),e(pe,kd),e(pe,It),e(It,$d),e(It,Gr),e(Gr,Td),e(It,Cd),m(n,ao,f),m(n,ge,f),e(ge,De),e(De,sn),_(Pt,sn,null),e(ge,wd),e(ge,ln),e(ln,yd),m(n,no,f),m(n,k,f),_(Ft,k,null),e(k,Ad),e(k,cn),e(cn,Ld),e(k,Dd),e(k,Wt),e(Wt,xd),e(Wt,dn),e(dn,Od),e(Wt,Md),e(k,Sd),e(k,P),e(P,Id),e(P,fn),e(fn,Pd),e(P,Fd),e(P,mn),e(mn,Wd),e(P,Nd),e(P,hn),e(hn,jd),e(P,zd),e(P,pn),e(pn,Bd),e(P,Rd),e(P,gn),e(gn,Vd),e(P,Ud),e(k,qd),_(xe,k,null),e(k,Gd),e(k,Oe),_(Nt,Oe,null),e(Oe,Hd),e(Oe,un),e(un,Jd),e(k,Yd),e(k,Me),_(jt,Me,null),e(Me,Xd),e(Me,_n),e(_n,Kd),e(k,Qd),e(k,Se),_(zt,Se,null),e(Se,Zd),e(Se,bn),e(bn,ef),e(k,tf),e(k,Ie),_(Bt,Ie,null),e(Ie,rf),e(Ie,Rt),e(Rt,af),e(Rt,Hr),e(Hr,nf),e(Rt,of),e(k,sf),e(k,Pe),_(Vt,Pe,null),e(Pe,lf),e(Pe,vn),e(vn,cf),e(k,df),e(k,Fe),_(Ut,Fe,null),e(Fe,ff),e(Fe,En),e(En,mf),e(k,hf),e(k,We),_(qt,We,null),e(We,pf),e(We,kn),e(kn,gf),e(k,uf),e(k,Ne),_(Gt,Ne,null),e(Ne,_f),e(Ne,$n),e($n,bf),e(k,vf),e(k,je),_(Ht,je,null),e(je,Ef),e(je,Tn),e(Tn,kf),e(k,$f),e(k,ze),_(Jt,ze,null),e(ze,Tf),e(ze,Cn),e(Cn,Cf),e(k,wf),e(k,Be),_(Yt,Be,null),e(Be,yf),e(Be,wn),e(wn,Af),e(k,Lf),e(k,Re),_(Xt,Re,null),e(Re,Df),e(Re,yn),e(yn,xf),m(n,oo,f),m(n,Ve,f),e(Ve,Of),e(Ve,Jr),e(Jr,Mf),e(Ve,Sf),m(n,so,f),_(Kt,n,f),m(n,lo,f),m(n,Ue,f),e(Ue,If),e(Ue,An),e(An,Pf),e(Ue,Ff),m(n,io,f),_(Qt,n,f),m(n,co,f),m(n,ue,f),e(ue,qe),e(qe,Ln),_(Zt,Ln,null),e(ue,Wf),e(ue,Dn),e(Dn,Nf),m(n,fo,f),m(n,F,f),_(er,F,null),e(F,jf),e(F,_e),e(_e,zf),e(_e,Yr),e(Yr,Bf),e(_e,Rf),e(_e,Xr),e(Xr,Vf),e(_e,Uf),e(F,qf),_(Ge,F,null),e(F,Gf),e(F,He),_(tr,He,null),e(He,Hf),e(He,rr),e(rr,Jf),e(rr,xn),e(xn,Yf),e(rr,Xf),e(F,Kf),e(F,Je),_(ar,Je,null),e(Je,Qf),e(Je,nr),e(nr,Zf),e(nr,On),e(On,em),e(nr,tm),m(n,mo,f),m(n,be,f),e(be,Ye),e(Ye,Mn),_(or,Mn,null),e(be,rm),e(be,Sn),e(Sn,am),m(n,ho,f),m(n,ve,f),_(sr,ve,null),e(ve,nm),e(ve,Ee),e(Ee,om),e(Ee,Kr),e(Kr,sm),e(Ee,lm),e(Ee,Qr),e(Qr,im),e(Ee,cm),po=!0},p(n,[f]){const lr={};f&2&&(lr.$$scope={dirty:f,ctx:n}),xe.$set(lr);const In={};f&2&&(In.$$scope={dirty:f,ctx:n}),Ge.$set(In)},i(n){po||(b(y.$$.fragment,n),b(st.$$.fragment,n),b(lt.$$.fragment,n),b(ct.$$.fragment,n),b(mt.$$.fragment,n),b(pt.$$.fragment,n),b(ut.$$.fragment,n),b(bt.$$.fragment,n),b(Et.$$.fragment,n),b($t.$$.fragment,n),b(Ct.$$.fragment,n),b(Lt.$$.fragment,n),b(xt.$$.fragment,n),b(Ot.$$.fragment,n),b(St.$$.fragment,n),b(Pt.$$.fragment,n),b(Ft.$$.fragment,n),b(xe.$$.fragment,n),b(Nt.$$.fragment,n),b(jt.$$.fragment,n),b(zt.$$.fragment,n),b(Bt.$$.fragment,n),b(Vt.$$.fragment,n),b(Ut.$$.fragment,n),b(qt.$$.fragment,n),b(Gt.$$.fragment,n),b(Ht.$$.fragment,n),b(Jt.$$.fragment,n),b(Yt.$$.fragment,n),b(Xt.$$.fragment,n),b(Kt.$$.fragment,n),b(Qt.$$.fragment,n),b(Zt.$$.fragment,n),b(er.$$.fragment,n),b(Ge.$$.fragment,n),b(tr.$$.fragment,n),b(ar.$$.fragment,n),b(or.$$.fragment,n),b(sr.$$.fragment,n),po=!0)},o(n){v(y.$$.fragment,n),v(st.$$.fragment,n),v(lt.$$.fragment,n),v(ct.$$.fragment,n),v(mt.$$.fragment,n),v(pt.$$.fragment,n),v(ut.$$.fragment,n),v(bt.$$.fragment,n),v(Et.$$.fragment,n),v($t.$$.fragment,n),v(Ct.$$.fragment,n),v(Lt.$$.fragment,n),v(xt.$$.fragment,n),v(Ot.$$.fragment,n),v(St.$$.fragment,n),v(Pt.$$.fragment,n),v(Ft.$$.fragment,n),v(xe.$$.fragment,n),v(Nt.$$.fragment,n),v(jt.$$.fragment,n),v(zt.$$.fragment,n),v(Bt.$$.fragment,n),v(Vt.$$.fragment,n),v(Ut.$$.fragment,n),v(qt.$$.fragment,n),v(Gt.$$.fragment,n),v(Ht.$$.fragment,n),v(Jt.$$.fragment,n),v(Yt.$$.fragment,n),v(Xt.$$.fragment,n),v(Kt.$$.fragment,n),v(Qt.$$.fragment,n),v(Zt.$$.fragment,n),v(er.$$.fragment,n),v(Ge.$$.fragment,n),v(tr.$$.fragment,n),v(ar.$$.fragment,n),v(or.$$.fragment,n),v(sr.$$.fragment,n),po=!1},d(n){t(A),n&&t(z),n&&t(D),E(y),n&&t(j),n&&t(G),n&&t(Bn),n&&t(B),n&&t(Rn),n&&t(ke),n&&t(Vn),n&&t(O),n&&t(Un),n&&t(S),n&&t(qn),n&&t(ne),E(st),n&&t(Gn),n&&t(Le),n&&t(Hn),n&&t(H),E(lt),E(ct),n&&t(Jn),n&&t(se),E(mt),n&&t(Yn),n&&t(le),E(pt),n&&t(Xn),n&&t(ie),E(ut),n&&t(Kn),n&&t(J),E(bt),n&&t(Qn),n&&t(ce),E(Et),n&&t(Zn),n&&t(X),E($t),E(Ct),n&&t(eo),n&&t(K),E(Lt),E(xt),n&&t(to),n&&t(me),E(Ot),n&&t(ro),n&&t(pe),E(St),n&&t(ao),n&&t(ge),E(Pt),n&&t(no),n&&t(k),E(Ft),E(xe),E(Nt),E(jt),E(zt),E(Bt),E(Vt),E(Ut),E(qt),E(Gt),E(Ht),E(Jt),E(Yt),E(Xt),n&&t(oo),n&&t(Ve),n&&t(so),E(Kt,n),n&&t(lo),n&&t(Ue),n&&t(io),E(Qt,n),n&&t(co),n&&t(ue),E(Zt),n&&t(fo),n&&t(F),E(er),E(Ge),E(tr),E(ar),n&&t(mo),n&&t(be),E(or),n&&t(ho),n&&t(ve),E(sr)}}}const Kp={local:"callbacks",sections:[{local:"transformers.integrations.CometCallback",title:"Available Callbacks"},{local:"transformers.TrainerCallback",title:"TrainerCallback"},{local:"transformers.TrainerState",title:"TrainerState"},{local:"transformers.TrainerControl",title:"TrainerControl"}],title:"Callbacks"};function Qp(cr){return Up(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class og extends zp{constructor(A){super();Bp(this,A,Qp,Xp,Rp,{})}}export{og as default,Kp as metadata};
