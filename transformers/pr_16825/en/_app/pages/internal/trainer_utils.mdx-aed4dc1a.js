import{S as Oi,i as Ai,s as Ci,e as r,k as i,w as b,t as o,M as Li,c as s,d as t,m as p,a as n,x as v,h as l,b as h,F as e,g as f,y as _,L as Ui,q as w,o as y,B as $,v as Ii}from"../../chunks/vendor-6b77c823.js";import{D as j}from"../../chunks/Docstring-1088f2fb.js";import{C as Pa}from"../../chunks/CodeBlock-3a8b25a8.js";import{I as at}from"../../chunks/IconCopyLink-7a11ce68.js";function zi(Xo){let O,ka,A,K,rt,ne,vr,st,_r,xa,Y,wr,Ve,yr,$r,Ta,Me,Er,Oa,C,W,nt,oe,Dr,ot,jr,Aa,L,le,Pr,lt,kr,Ca,U,ie,xr,it,Tr,La,I,pe,Or,D,Ar,pt,Cr,Lr,dt,Ur,Ir,ct,zr,Sr,ht,Nr,Hr,Ua,z,de,Gr,ut,Vr,Ia,S,J,mt,ce,Mr,ft,Rr,za,N,he,Fr,gt,qr,Sa,H,Q,bt,ue,Br,vt,Kr,Na,u,me,Yr,_t,Wr,Jr,wt,Qr,Xr,yt,$t,Zr,es,Et,ts,as,G,Re,rs,Dt,ss,ns,Fe,os,jt,ls,is,qe,ps,Pt,ds,cs,kt,hs,us,V,Be,ms,xt,fs,gs,Ke,bs,Tt,vs,_s,Ye,ws,Ot,ys,$s,At,Es,Ds,Ct,Lt,js,Ps,Ut,ks,xs,It,zt,Ts,Os,St,As,Cs,X,fe,Ls,ge,Us,Nt,Is,zs,Ss,Z,be,Ns,Ht,Hs,Ha,M,ee,Gt,ve,Gs,Vt,Vs,Ga,E,_e,Ms,we,Rs,Mt,Fs,qs,Bs,ye,Ks,Rt,Ys,Ws,Js,x,$e,Qs,Ft,Xs,Zs,Ee,en,qt,tn,an,rn,te,De,sn,je,nn,Bt,on,ln,pn,ae,Pe,dn,ke,cn,Kt,hn,un,Va,R,re,Yt,xe,mn,Wt,fn,Ma,d,Te,gn,F,bn,Jt,vn,_n,Qt,wn,yn,$n,Xt,En,Dn,Oe,Zt,jn,Pn,ea,kn,xn,ta,Tn,On,aa,An,Cn,Ae,Ln,k,Un,ra,In,zn,sa,Sn,Nn,na,Hn,Gn,Vn,Ce,Le,Mn,oa,Rn,Fn,qn,la,Bn,Kn,Ue,Yn,ia,Wn,Jn,Qn,Ie,Xn,q,Zn,pa,eo,to,da,ao,ro,so,ca,no,oo,ze,lo,ha,io,po,co,ua,ho,uo,Se,mo,ma,fo,go,fa,bo,vo,ga,_o,wo,Ne,yo,ba,$o,Eo,Do,He,jo,va,Po,ko,_a,xo,To,wa,Oo,Ao,ya,Co,Lo,Ge,Uo,$a,Io,zo,We,Ea,So,No,Ho,B,Go,Da,Vo,Mo,ja,Ro,Fo,Ra;return ne=new at({}),oe=new at({}),le=new j({props:{name:"class transformers.EvalPrediction",anchor:"transformers.EvalPrediction",parameters:[{name:"predictions",val:": typing.Union[numpy.ndarray, typing.Tuple[numpy.ndarray]]"},{name:"label_ids",val:": typing.Union[numpy.ndarray, typing.Tuple[numpy.ndarray]]"},{name:"inputs",val:": typing.Union[numpy.ndarray, typing.Tuple[numpy.ndarray], NoneType] = None"}],parametersDescription:[{anchor:"transformers.EvalPrediction.predictions",description:"<strong>predictions</strong> (<code>np.ndarray</code>) &#x2014; Predictions of the model.",name:"predictions"},{anchor:"transformers.EvalPrediction.label_ids",description:"<strong>label_ids</strong> (<code>np.ndarray</code>) &#x2014; Targets to be matched.",name:"label_ids"},{anchor:"transformers.EvalPrediction.inputs",description:"<strong>inputs</strong> (<code>np.ndarray</code>, <em>optional</em>) &#x2014;",name:"inputs"}],source:"https://github.com/huggingface/transformers/blob/pr_16825/src/transformers/trainer_utils.py#L66"}}),ie=new j({props:{name:"class transformers.IntervalStrategy",anchor:"transformers.IntervalStrategy",parameters:[{name:"value",val:""},{name:"names",val:" = None"},{name:"module",val:" = None"},{name:"qualname",val:" = None"},{name:"type",val:" = None"},{name:"start",val:" = 1"}],source:"https://github.com/huggingface/transformers/blob/pr_16825/src/transformers/trainer_utils.py#L140"}}),pe=new j({props:{name:"transformers.set_seed",anchor:"transformers.set_seed",parameters:[{name:"seed",val:": int"}],parametersDescription:[{anchor:"transformers.set_seed.seed",description:"<strong>seed</strong> (<code>int</code>) &#x2014; The seed to set.",name:"seed"}],source:"https://github.com/huggingface/transformers/blob/pr_16825/src/transformers/trainer_utils.py#L49"}}),de=new j({props:{name:"transformers.torch_distributed_zero_first",anchor:"transformers.torch_distributed_zero_first",parameters:[{name:"local_rank",val:": int"}],parametersDescription:[{anchor:"transformers.torch_distributed_zero_first.local_rank",description:"<strong>local_rank</strong> (<code>int</code>) &#x2014; The rank of the local process.",name:"local_rank"}],source:"https://github.com/huggingface/transformers/blob/pr_16825/src/transformers/trainer_pt_utils.py#L202"}}),ce=new at({}),he=new j({props:{name:"class transformers.trainer_callback.CallbackHandler",anchor:"transformers.trainer_callback.CallbackHandler",parameters:[{name:"callbacks",val:""},{name:"model",val:""},{name:"tokenizer",val:""},{name:"optimizer",val:""},{name:"lr_scheduler",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16825/src/transformers/trainer_callback.py#L284"}}),ue=new at({}),me=new j({props:{name:"class transformers.trainer_pt_utils.DistributedTensorGatherer",anchor:"transformers.trainer_pt_utils.DistributedTensorGatherer",parameters:[{name:"world_size",val:""},{name:"num_samples",val:""},{name:"make_multiple_of",val:" = None"},{name:"padding_index",val:" = -100"}],parametersDescription:[{anchor:"transformers.trainer_pt_utils.DistributedTensorGatherer.world_size",description:`<strong>world_size</strong> (<code>int</code>) &#x2014;
The number of processes used in the distributed training.`,name:"world_size"},{anchor:"transformers.trainer_pt_utils.DistributedTensorGatherer.num_samples",description:`<strong>num_samples</strong> (<code>int</code>) &#x2014;
The number of samples in our dataset.`,name:"num_samples"},{anchor:"transformers.trainer_pt_utils.DistributedTensorGatherer.make_multiple_of",description:`<strong>make_multiple_of</strong> (<code>int</code>, <em>optional</em>) &#x2014;
If passed, the class assumes the datasets passed to each process are made to be a multiple of this argument
(by adding samples).`,name:"make_multiple_of"},{anchor:"transformers.trainer_pt_utils.DistributedTensorGatherer.padding_index",description:`<strong>padding_index</strong> (<code>int</code>, <em>optional</em>, defaults to -100) &#x2014;
The padding index to use if the arrays don&#x2019;t all have the same sequence length.`,name:"padding_index"}],source:"https://github.com/huggingface/transformers/blob/pr_16825/src/transformers/trainer_pt_utils.py#L328"}}),fe=new j({props:{name:"add_arrays",anchor:"transformers.trainer_pt_utils.DistributedTensorGatherer.add_arrays",parameters:[{name:"arrays",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16825/src/transformers/trainer_pt_utils.py#L389"}}),be=new j({props:{name:"finalize",anchor:"transformers.trainer_pt_utils.DistributedTensorGatherer.finalize",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_16825/src/transformers/trainer_pt_utils.py#L425"}}),ve=new at({}),_e=new j({props:{name:"class transformers.HfArgumentParser",anchor:"transformers.HfArgumentParser",parameters:[{name:"dataclass_types",val:": typing.Union[DataClassType, typing.Iterable[DataClassType]]"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_16825/src/transformers/hf_argparser.py#L44"}}),$e=new j({props:{name:"parse_args_into_dataclasses",anchor:"transformers.HfArgumentParser.parse_args_into_dataclasses",parameters:[{name:"args",val:" = None"},{name:"return_remaining_strings",val:" = False"},{name:"look_for_args_file",val:" = True"},{name:"args_filename",val:" = None"}],source:"https://github.com/huggingface/transformers/blob/pr_16825/src/transformers/hf_argparser.py#L168",returnDescription:`
<ul>
<li>the dataclass instances in the same order as they were passed to the initializer.abspath</li>
<li>if applicable, an additional namespace for more (non-dataclass backed) arguments added to the parser
after initialization.</li>
<li>The potential list of remaining argument strings. (same as argparse.ArgumentParser.parse_known_args)</li>
</ul>
`,returnType:`
<p>Tuple consisting of</p>
`}}),De=new j({props:{name:"parse_dict",anchor:"transformers.HfArgumentParser.parse_dict",parameters:[{name:"args",val:": dict"}],source:"https://github.com/huggingface/transformers/blob/pr_16825/src/transformers/hf_argparser.py#L241"}}),Pe=new j({props:{name:"parse_json_file",anchor:"transformers.HfArgumentParser.parse_json_file",parameters:[{name:"json_file",val:": str"}],source:"https://github.com/huggingface/transformers/blob/pr_16825/src/transformers/hf_argparser.py#L227"}}),xe=new at({}),Te=new j({props:{name:"class transformers.debug_utils.DebugUnderflowOverflow",anchor:"transformers.debug_utils.DebugUnderflowOverflow",parameters:[{name:"model",val:""},{name:"max_frames_to_save",val:" = 21"},{name:"trace_batch_nums",val:" = []"},{name:"abort_after_batch_num",val:" = None"}],parametersDescription:[{anchor:"transformers.debug_utils.DebugUnderflowOverflow.model",description:`<strong>model</strong> (<code>nn.Module</code>) &#x2014;
The model to debug.`,name:"model"},{anchor:"transformers.debug_utils.DebugUnderflowOverflow.max_frames_to_save",description:`<strong>max_frames_to_save</strong> (<code>int</code>, <em>optional</em>, defaults to 21) &#x2014;
How many frames back to record`,name:"max_frames_to_save"},{anchor:"transformers.debug_utils.DebugUnderflowOverflow.trace_batch_nums(List[int],",description:`<strong>trace_batch_nums(<code>List[int]</code>,</strong> <em>optional</em>, defaults to <code>[]</code>) &#x2014;
Which batch numbers to trace (turns detection off)`,name:"trace_batch_nums(List[int],"},{anchor:"transformers.debug_utils.DebugUnderflowOverflow.abort_after_batch_num",description:"<strong>abort_after_batch_num</strong>  (`int&#x201C;, <em>optional</em>) &#x2014;\nWhether to abort after a certain batch number has finished",name:"abort_after_batch_num"}],source:"https://github.com/huggingface/transformers/blob/pr_16825/src/transformers/debug_utils.py#L27"}}),Ae=new Pa({props:{code:"debug_overflow = DebugUnderflowOverflow(model)",highlighted:"debug_overflow = DebugUnderflowOverflow(model)"}}),Ie=new Pa({props:{code:`Detected inf/nan during batch_number=0
Last 21 forward frames:
abs min  abs max  metadata
[...]
                  encoder.block.2.layer.1.DenseReluDense.wi_0 Linear
2.17e-07 4.50e+00 weight
1.79e-06 4.65e+00 input[0]
2.68e-06 3.70e+01 output
                  encoder.block.2.layer.1.DenseReluDense.wi_1 Linear
8.08e-07 2.66e+01 weight
1.79e-06 4.65e+00 input[0]
1.27e-04 2.37e+02 output
                  encoder.block.2.layer.1.DenseReluDense.wo Linear
1.01e-06 6.44e+00 weight
0.00e+00 9.74e+03 input[0]
3.18e-04 6.27e+04 output
                  encoder.block.2.layer.1.DenseReluDense T5DenseGatedGeluDense
1.79e-06 4.65e+00 input[0]
3.18e-04 6.27e+04 output
                  encoder.block.2.layer.1.dropout Dropout
3.18e-04 6.27e+04 input[0]
0.00e+00      inf output`,highlighted:`<span class="hljs-attribute">Detected</span> inf/nan during batch_number=<span class="hljs-number">0</span>
<span class="hljs-attribute">Last</span> <span class="hljs-number">21</span> forward frames:
<span class="hljs-attribute">abs</span> min  abs max  metadata<span class="hljs-meta">
[...]</span>
                  <span class="hljs-attribute">encoder</span>.block.<span class="hljs-number">2</span>.layer.<span class="hljs-number">1</span>.DenseReluDense.wi_0 Linear
<span class="hljs-attribute">2</span>.<span class="hljs-number">17</span>e-<span class="hljs-number">07</span> <span class="hljs-number">4</span>.<span class="hljs-number">50</span>e+<span class="hljs-number">00</span> weight
<span class="hljs-attribute">1</span>.<span class="hljs-number">79</span>e-<span class="hljs-number">06</span> <span class="hljs-number">4</span>.<span class="hljs-number">65</span>e+<span class="hljs-number">00</span> input[<span class="hljs-number">0</span>]
<span class="hljs-attribute">2</span>.<span class="hljs-number">68</span>e-<span class="hljs-number">06</span> <span class="hljs-number">3</span>.<span class="hljs-number">70</span>e+<span class="hljs-number">01</span> output
                  <span class="hljs-attribute">encoder</span>.block.<span class="hljs-number">2</span>.layer.<span class="hljs-number">1</span>.DenseReluDense.wi_1 Linear
<span class="hljs-attribute">8</span>.<span class="hljs-number">08</span>e-<span class="hljs-number">07</span> <span class="hljs-number">2</span>.<span class="hljs-number">66</span>e+<span class="hljs-number">01</span> weight
<span class="hljs-attribute">1</span>.<span class="hljs-number">79</span>e-<span class="hljs-number">06</span> <span class="hljs-number">4</span>.<span class="hljs-number">65</span>e+<span class="hljs-number">00</span> input[<span class="hljs-number">0</span>]
<span class="hljs-attribute">1</span>.<span class="hljs-number">27</span>e-<span class="hljs-number">04</span> <span class="hljs-number">2</span>.<span class="hljs-number">37</span>e+<span class="hljs-number">02</span> output
                  <span class="hljs-attribute">encoder</span>.block.<span class="hljs-number">2</span>.layer.<span class="hljs-number">1</span>.DenseReluDense.wo Linear
<span class="hljs-attribute">1</span>.<span class="hljs-number">01</span>e-<span class="hljs-number">06</span> <span class="hljs-number">6</span>.<span class="hljs-number">44</span>e+<span class="hljs-number">00</span> weight
<span class="hljs-attribute">0</span>.<span class="hljs-number">00</span>e+<span class="hljs-number">00</span> <span class="hljs-number">9</span>.<span class="hljs-number">74</span>e+<span class="hljs-number">03</span> input[<span class="hljs-number">0</span>]
<span class="hljs-attribute">3</span>.<span class="hljs-number">18</span>e-<span class="hljs-number">04</span> <span class="hljs-number">6</span>.<span class="hljs-number">27</span>e+<span class="hljs-number">04</span> output
                  <span class="hljs-attribute">encoder</span>.block.<span class="hljs-number">2</span>.layer.<span class="hljs-number">1</span>.DenseReluDense T5DenseGatedGeluDense
<span class="hljs-attribute">1</span>.<span class="hljs-number">79</span>e-<span class="hljs-number">06</span> <span class="hljs-number">4</span>.<span class="hljs-number">65</span>e+<span class="hljs-number">00</span> input[<span class="hljs-number">0</span>]
<span class="hljs-attribute">3</span>.<span class="hljs-number">18</span>e-<span class="hljs-number">04</span> <span class="hljs-number">6</span>.<span class="hljs-number">27</span>e+<span class="hljs-number">04</span> output
                  <span class="hljs-attribute">encoder</span>.block.<span class="hljs-number">2</span>.layer.<span class="hljs-number">1</span>.dropout Dropout
<span class="hljs-attribute">3</span>.<span class="hljs-number">18</span>e-<span class="hljs-number">04</span> <span class="hljs-number">6</span>.<span class="hljs-number">27</span>e+<span class="hljs-number">04</span> input[<span class="hljs-number">0</span>]
<span class="hljs-attribute">0</span>.<span class="hljs-number">00</span>e+<span class="hljs-number">00</span>      inf output`}}),Se=new Pa({props:{code:"debug_overflow = DebugUnderflowOverflow(model, max_frames_to_save=100)",highlighted:'debug_overflow = DebugUnderflowOverflow(model, max_frames_to_save=<span class="hljs-number">100</span>)'}}),He=new Pa({props:{code:"debug_overflow = DebugUnderflowOverflow(model, trace_batch_nums=[1, 3])",highlighted:'debug_overflow = DebugUnderflowOverflow(model, trace_batch_nums=[<span class="hljs-number">1</span>, <span class="hljs-number">3</span>])'}}),Ge=new Pa({props:{code:"debug_overflow = DebugUnderflowOverflow(model, trace_batch_nums=[1, 3], abort_after_batch_num=3)",highlighted:'debug_overflow = DebugUnderflowOverflow(model, trace_batch_nums=[<span class="hljs-number">1</span>, <span class="hljs-number">3</span>], abort_after_batch_num=<span class="hljs-number">3</span>)'}}),{c(){O=r("meta"),ka=i(),A=r("h1"),K=r("a"),rt=r("span"),b(ne.$$.fragment),vr=i(),st=r("span"),_r=o("Utilities for Trainer"),xa=i(),Y=r("p"),wr=o("This page lists all the utility functions used by "),Ve=r("a"),yr=o("Trainer"),$r=o("."),Ta=i(),Me=r("p"),Er=o("Most of those are only useful if you are studying the code of the Trainer in the library."),Oa=i(),C=r("h2"),W=r("a"),nt=r("span"),b(oe.$$.fragment),Dr=i(),ot=r("span"),jr=o("Utilities"),Aa=i(),L=r("div"),b(le.$$.fragment),Pr=i(),lt=r("p"),kr=o("Evaluation output (always contains labels), to be used to compute metrics."),Ca=i(),U=r("div"),b(ie.$$.fragment),xr=i(),it=r("p"),Tr=o("An enumeration."),La=i(),I=r("div"),b(pe.$$.fragment),Or=i(),D=r("p"),Ar=o("Helper function for reproducible behavior to set the seed in "),pt=r("code"),Cr=o("random"),Lr=o(", "),dt=r("code"),Ur=o("numpy"),Ir=o(", "),ct=r("code"),zr=o("torch"),Sr=o(" and/or "),ht=r("code"),Nr=o("tf"),Hr=o(" (if installed)."),Ua=i(),z=r("div"),b(de.$$.fragment),Gr=i(),ut=r("p"),Vr=o("Decorator to make all processes in distributed training wait for each local_master to do something."),Ia=i(),S=r("h2"),J=r("a"),mt=r("span"),b(ce.$$.fragment),Mr=i(),ft=r("span"),Rr=o("Callbacks internals"),za=i(),N=r("div"),b(he.$$.fragment),Fr=i(),gt=r("p"),qr=o("Internal class that just calls the list of callbacks in order."),Sa=i(),H=r("h2"),Q=r("a"),bt=r("span"),b(ue.$$.fragment),Br=i(),vt=r("span"),Kr=o("Distributed Evaluation"),Na=i(),u=r("div"),b(me.$$.fragment),Yr=i(),_t=r("p"),Wr=o("A class responsible for properly gathering tensors (or nested list/tuple of tensors) on the CPU by chunks."),Jr=i(),wt=r("p"),Qr=o(`If our dataset has 16 samples with a batch size of 2 on 3 processes and we gather then transfer on CPU at every
step, our sampler will generate the following indices:`),Xr=i(),yt=r("p"),$t=r("code"),Zr=o("[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1]"),es=i(),Et=r("p"),ts=o(`to get something of size a multiple of 3 (so that each process gets the same dataset length). Then process 0, 1 and
2 will be responsible of making predictions for the following samples:`),as=i(),G=r("ul"),Re=r("li"),rs=o("P0: "),Dt=r("code"),ss=o("[0, 1, 2, 3, 4, 5]"),ns=i(),Fe=r("li"),os=o("P1: "),jt=r("code"),ls=o("[6, 7, 8, 9, 10, 11]"),is=i(),qe=r("li"),ps=o("P2: "),Pt=r("code"),ds=o("[12, 13, 14, 15, 0, 1]"),cs=i(),kt=r("p"),hs=o("The first batch treated on each process will be"),us=i(),V=r("ul"),Be=r("li"),ms=o("P0: "),xt=r("code"),fs=o("[0, 1]"),gs=i(),Ke=r("li"),bs=o("P1: "),Tt=r("code"),vs=o("[6, 7]"),_s=i(),Ye=r("li"),ws=o("P2: "),Ot=r("code"),ys=o("[12, 13]"),$s=i(),At=r("p"),Es=o(`So if we gather at the end of the first batch, we will get a tensor (nested list/tuple of tensor) corresponding to
the following indices:`),Ds=i(),Ct=r("p"),Lt=r("code"),js=o("[0, 1, 6, 7, 12, 13]"),Ps=i(),Ut=r("p"),ks=o(`If we directly concatenate our results without taking any precautions, the user will then get the predictions for
the indices in this order at the end of the prediction loop:`),xs=i(),It=r("p"),zt=r("code"),Ts=o("[0, 1, 6, 7, 12, 13, 2, 3, 8, 9, 14, 15, 4, 5, 10, 11, 0, 1]"),Os=i(),St=r("p"),As=o("For some reason, that\u2019s not going to roll their boat. This class is there to solve that problem."),Cs=i(),X=r("div"),b(fe.$$.fragment),Ls=i(),ge=r("p"),Us=o("Add "),Nt=r("code"),Is=o("arrays"),zs=o(` to the internal storage, Will initialize the storage to the full size at the first arrays passed
so that if we\u2019re bound to get an OOM, it happens at the beginning.`),Ss=i(),Z=r("div"),b(be.$$.fragment),Ns=i(),Ht=r("p"),Hs=o(`Return the properly gathered arrays and truncate to the number of samples (since the sampler added some extras
to get each process a dataset of the same length).`),Ha=i(),M=r("h2"),ee=r("a"),Gt=r("span"),b(ve.$$.fragment),Gs=i(),Vt=r("span"),Vs=o("Distributed Evaluation"),Ga=i(),E=r("div"),b(_e.$$.fragment),Ms=i(),we=r("p"),Rs=o("This subclass of "),Mt=r("code"),Fs=o("argparse.ArgumentParser"),qs=o(" uses type hints on dataclasses to generate arguments."),Bs=i(),ye=r("p"),Ks=o(`The class is designed to play well with the native argparse. In particular, you can add more (non-dataclass backed)
arguments to the parser after initialization and you\u2019ll get the output back after parsing as an additional
namespace. Optional: To create sub argument groups use the `),Rt=r("code"),Ys=o("_argument_group_name"),Ws=o(" attribute in the dataclass."),Js=i(),x=r("div"),b($e.$$.fragment),Qs=i(),Ft=r("p"),Xs=o("Parse command-line args into instances of the specified dataclass types."),Zs=i(),Ee=r("p"),en=o("This relies on argparse\u2019s "),qt=r("code"),tn=o("ArgumentParser.parse_known_args"),an=o(`. See the doc at:
docs.python.org/3.7/library/argparse.html#argparse.ArgumentParser.parse_args`),rn=i(),te=r("div"),b(De.$$.fragment),sn=i(),je=r("p"),nn=o("Alternative helper method that does not use "),Bt=r("code"),on=o("argparse"),ln=o(` at all, instead uses a dict and populating the dataclass
types.`),pn=i(),ae=r("div"),b(Pe.$$.fragment),dn=i(),ke=r("p"),cn=o("Alternative helper method that does not use "),Kt=r("code"),hn=o("argparse"),un=o(` at all, instead loading a json file and populating the
dataclass types.`),Va=i(),R=r("h2"),re=r("a"),Yt=r("span"),b(xe.$$.fragment),mn=i(),Wt=r("span"),fn=o("Debug Utilities"),Ma=i(),d=r("div"),b(Te.$$.fragment),gn=i(),F=r("p"),bn=o(`This debug class helps detect and understand where the model starts getting very large or very small, and more
importantly `),Jt=r("code"),vn=o("nan"),_n=o(" or "),Qt=r("code"),wn=o("inf"),yn=o(" weight and activation elements."),$n=i(),Xt=r("p"),En=o("There are 2 working modes:"),Dn=i(),Oe=r("ol"),Zt=r("li"),jn=o("Underflow/overflow detection (default)"),Pn=i(),ea=r("li"),kn=o("Specific batch absolute min/max tracing without detection"),xn=i(),ta=r("p"),Tn=o("Mode 1: Underflow/overflow detection"),On=i(),aa=r("p"),An=o("To activate the underflow/overflow detection, initialize the object with the model :"),Cn=i(),b(Ae.$$.fragment),Ln=i(),k=r("p"),Un=o("then run the training as normal and if "),ra=r("code"),In=o("nan"),zn=o(" or "),sa=r("code"),Sn=o("inf"),Nn=o(` gets detected in at least one of the weight, input or output
elements this module will throw an exception and will print `),na=r("code"),Hn=o("max_frames_to_save"),Gn=o(` frames that lead to this event,
each frame reporting`),Vn=i(),Ce=r("ol"),Le=r("li"),Mn=o("the fully qualified module name plus the class name whose "),oa=r("code"),Rn=o("forward"),Fn=o(" was run"),qn=i(),la=r("li"),Bn=o("the absolute min and max value of all elements for each module weights, and the inputs and output"),Kn=i(),Ue=r("p"),Yn=o("For example, here is the header and the last few frames in detection report for "),ia=r("code"),Wn=o("google/mt5-small"),Jn=o(` run in fp16
mixed precision :`),Qn=i(),b(Ie.$$.fragment),Xn=i(),q=r("p"),Zn=o("You can see here, that "),pa=r("code"),eo=o("T5DenseGatedGeluDense.forward"),to=o(` resulted in output activations, whose absolute max value was
around 62.7K, which is very close to fp16\u2019s top limit of 64K. In the next frame we have `),da=r("code"),ao=o("Dropout"),ro=o(` which
renormalizes the weights, after it zeroed some of the elements, which pushes the absolute max value to more than
64K, and we get an overlow.`),so=i(),ca=r("p"),no=o(`As you can see it\u2019s the previous frames that we need to look into when the numbers start going into very large for
fp16 numbers.`),oo=i(),ze=r("p"),lo=o("The tracking is done in a forward hook, which gets invoked immediately after "),ha=r("code"),io=o("forward"),po=o(" has completed."),co=i(),ua=r("p"),ho=o("By default the last 21 frames are printed. You can change the default to adjust for your needs. For example :"),uo=i(),b(Se.$$.fragment),mo=i(),ma=r("p"),fo=o(`To validate that you have set up this debugging feature correctly, and you intend to use it in a training that
may take hours to complete, first run it with normal tracing enabled for one of a few batches as explained in
the next section.`),go=i(),fa=r("p"),bo=o("Mode 2. Specific batch absolute min/max tracing without detection"),vo=i(),ga=r("p"),_o=o("The second work mode is per-batch tracing with the underflow/overflow detection feature turned off."),wo=i(),Ne=r("p"),yo=o("Let\u2019s say you want to watch the absolute min and max values for all the ingredients of each "),ba=r("code"),$o=o("forward"),Eo=o(` call of a
given batch, and only do that for batches 1 and 3. Then you instantiate this class as :`),Do=i(),b(He.$$.fragment),jo=i(),va=r("p"),Po=o("And now full batches 1 and 3 will be traced using the same format as explained above. Batches are 0-indexed."),ko=i(),_a=r("p"),xo=o(`This is helpful if you know that the program starts misbehaving after a certain batch number, so you can
fast-forward right to that area.`),To=i(),wa=r("p"),Oo=o("Early stopping:"),Ao=i(),ya=r("p"),Co=o("You can also specify the batch number after which to stop the training, with :"),Lo=i(),b(Ge.$$.fragment),Uo=i(),$a=r("p"),Io=o("This feature is mainly useful in the tracing mode, but you can use it for any mode."),zo=i(),We=r("p"),Ea=r("strong"),So=o("Performance"),No=o(":"),Ho=i(),B=r("p"),Go=o("As this module measures absolute "),Da=r("code"),Vo=o("min"),Mo=o("/`"),ja=r("code"),Ro=o("max"),Fo=o(` of each weight of the model on every forward it\u2019ll slow the training
down. Therefore remember to turn it off once the debugging needs have been met.`),this.h()},l(a){const m=Li('[data-svelte="svelte-1phssyn"]',document.head);O=s(m,"META",{name:!0,content:!0}),m.forEach(t),ka=p(a),A=s(a,"H1",{class:!0});var Fa=n(A);K=s(Fa,"A",{id:!0,class:!0,href:!0});var Zo=n(K);rt=s(Zo,"SPAN",{});var el=n(rt);v(ne.$$.fragment,el),el.forEach(t),Zo.forEach(t),vr=p(Fa),st=s(Fa,"SPAN",{});var tl=n(st);_r=l(tl,"Utilities for Trainer"),tl.forEach(t),Fa.forEach(t),xa=p(a),Y=s(a,"P",{});var qa=n(Y);wr=l(qa,"This page lists all the utility functions used by "),Ve=s(qa,"A",{href:!0});var al=n(Ve);yr=l(al,"Trainer"),al.forEach(t),$r=l(qa,"."),qa.forEach(t),Ta=p(a),Me=s(a,"P",{});var rl=n(Me);Er=l(rl,"Most of those are only useful if you are studying the code of the Trainer in the library."),rl.forEach(t),Oa=p(a),C=s(a,"H2",{class:!0});var Ba=n(C);W=s(Ba,"A",{id:!0,class:!0,href:!0});var sl=n(W);nt=s(sl,"SPAN",{});var nl=n(nt);v(oe.$$.fragment,nl),nl.forEach(t),sl.forEach(t),Dr=p(Ba),ot=s(Ba,"SPAN",{});var ol=n(ot);jr=l(ol,"Utilities"),ol.forEach(t),Ba.forEach(t),Aa=p(a),L=s(a,"DIV",{class:!0});var Ka=n(L);v(le.$$.fragment,Ka),Pr=p(Ka),lt=s(Ka,"P",{});var ll=n(lt);kr=l(ll,"Evaluation output (always contains labels), to be used to compute metrics."),ll.forEach(t),Ka.forEach(t),Ca=p(a),U=s(a,"DIV",{class:!0});var Ya=n(U);v(ie.$$.fragment,Ya),xr=p(Ya),it=s(Ya,"P",{});var il=n(it);Tr=l(il,"An enumeration."),il.forEach(t),Ya.forEach(t),La=p(a),I=s(a,"DIV",{class:!0});var Wa=n(I);v(pe.$$.fragment,Wa),Or=p(Wa),D=s(Wa,"P",{});var T=n(D);Ar=l(T,"Helper function for reproducible behavior to set the seed in "),pt=s(T,"CODE",{});var pl=n(pt);Cr=l(pl,"random"),pl.forEach(t),Lr=l(T,", "),dt=s(T,"CODE",{});var dl=n(dt);Ur=l(dl,"numpy"),dl.forEach(t),Ir=l(T,", "),ct=s(T,"CODE",{});var cl=n(ct);zr=l(cl,"torch"),cl.forEach(t),Sr=l(T," and/or "),ht=s(T,"CODE",{});var hl=n(ht);Nr=l(hl,"tf"),hl.forEach(t),Hr=l(T," (if installed)."),T.forEach(t),Wa.forEach(t),Ua=p(a),z=s(a,"DIV",{class:!0});var Ja=n(z);v(de.$$.fragment,Ja),Gr=p(Ja),ut=s(Ja,"P",{});var ul=n(ut);Vr=l(ul,"Decorator to make all processes in distributed training wait for each local_master to do something."),ul.forEach(t),Ja.forEach(t),Ia=p(a),S=s(a,"H2",{class:!0});var Qa=n(S);J=s(Qa,"A",{id:!0,class:!0,href:!0});var ml=n(J);mt=s(ml,"SPAN",{});var fl=n(mt);v(ce.$$.fragment,fl),fl.forEach(t),ml.forEach(t),Mr=p(Qa),ft=s(Qa,"SPAN",{});var gl=n(ft);Rr=l(gl,"Callbacks internals"),gl.forEach(t),Qa.forEach(t),za=p(a),N=s(a,"DIV",{class:!0});var Xa=n(N);v(he.$$.fragment,Xa),Fr=p(Xa),gt=s(Xa,"P",{});var bl=n(gt);qr=l(bl,"Internal class that just calls the list of callbacks in order."),bl.forEach(t),Xa.forEach(t),Sa=p(a),H=s(a,"H2",{class:!0});var Za=n(H);Q=s(Za,"A",{id:!0,class:!0,href:!0});var vl=n(Q);bt=s(vl,"SPAN",{});var _l=n(bt);v(ue.$$.fragment,_l),_l.forEach(t),vl.forEach(t),Br=p(Za),vt=s(Za,"SPAN",{});var wl=n(vt);Kr=l(wl,"Distributed Evaluation"),wl.forEach(t),Za.forEach(t),Na=p(a),u=s(a,"DIV",{class:!0});var g=n(u);v(me.$$.fragment,g),Yr=p(g),_t=s(g,"P",{});var yl=n(_t);Wr=l(yl,"A class responsible for properly gathering tensors (or nested list/tuple of tensors) on the CPU by chunks."),yl.forEach(t),Jr=p(g),wt=s(g,"P",{});var $l=n(wt);Qr=l($l,`If our dataset has 16 samples with a batch size of 2 on 3 processes and we gather then transfer on CPU at every
step, our sampler will generate the following indices:`),$l.forEach(t),Xr=p(g),yt=s(g,"P",{});var El=n(yt);$t=s(El,"CODE",{});var Dl=n($t);Zr=l(Dl,"[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1]"),Dl.forEach(t),El.forEach(t),es=p(g),Et=s(g,"P",{});var jl=n(Et);ts=l(jl,`to get something of size a multiple of 3 (so that each process gets the same dataset length). Then process 0, 1 and
2 will be responsible of making predictions for the following samples:`),jl.forEach(t),as=p(g),G=s(g,"UL",{});var Je=n(G);Re=s(Je,"LI",{});var qo=n(Re);rs=l(qo,"P0: "),Dt=s(qo,"CODE",{});var Pl=n(Dt);ss=l(Pl,"[0, 1, 2, 3, 4, 5]"),Pl.forEach(t),qo.forEach(t),ns=p(Je),Fe=s(Je,"LI",{});var Bo=n(Fe);os=l(Bo,"P1: "),jt=s(Bo,"CODE",{});var kl=n(jt);ls=l(kl,"[6, 7, 8, 9, 10, 11]"),kl.forEach(t),Bo.forEach(t),is=p(Je),qe=s(Je,"LI",{});var Ko=n(qe);ps=l(Ko,"P2: "),Pt=s(Ko,"CODE",{});var xl=n(Pt);ds=l(xl,"[12, 13, 14, 15, 0, 1]"),xl.forEach(t),Ko.forEach(t),Je.forEach(t),cs=p(g),kt=s(g,"P",{});var Tl=n(kt);hs=l(Tl,"The first batch treated on each process will be"),Tl.forEach(t),us=p(g),V=s(g,"UL",{});var Qe=n(V);Be=s(Qe,"LI",{});var Yo=n(Be);ms=l(Yo,"P0: "),xt=s(Yo,"CODE",{});var Ol=n(xt);fs=l(Ol,"[0, 1]"),Ol.forEach(t),Yo.forEach(t),gs=p(Qe),Ke=s(Qe,"LI",{});var Wo=n(Ke);bs=l(Wo,"P1: "),Tt=s(Wo,"CODE",{});var Al=n(Tt);vs=l(Al,"[6, 7]"),Al.forEach(t),Wo.forEach(t),_s=p(Qe),Ye=s(Qe,"LI",{});var Jo=n(Ye);ws=l(Jo,"P2: "),Ot=s(Jo,"CODE",{});var Cl=n(Ot);ys=l(Cl,"[12, 13]"),Cl.forEach(t),Jo.forEach(t),Qe.forEach(t),$s=p(g),At=s(g,"P",{});var Ll=n(At);Es=l(Ll,`So if we gather at the end of the first batch, we will get a tensor (nested list/tuple of tensor) corresponding to
the following indices:`),Ll.forEach(t),Ds=p(g),Ct=s(g,"P",{});var Ul=n(Ct);Lt=s(Ul,"CODE",{});var Il=n(Lt);js=l(Il,"[0, 1, 6, 7, 12, 13]"),Il.forEach(t),Ul.forEach(t),Ps=p(g),Ut=s(g,"P",{});var zl=n(Ut);ks=l(zl,`If we directly concatenate our results without taking any precautions, the user will then get the predictions for
the indices in this order at the end of the prediction loop:`),zl.forEach(t),xs=p(g),It=s(g,"P",{});var Sl=n(It);zt=s(Sl,"CODE",{});var Nl=n(zt);Ts=l(Nl,"[0, 1, 6, 7, 12, 13, 2, 3, 8, 9, 14, 15, 4, 5, 10, 11, 0, 1]"),Nl.forEach(t),Sl.forEach(t),Os=p(g),St=s(g,"P",{});var Hl=n(St);As=l(Hl,"For some reason, that\u2019s not going to roll their boat. This class is there to solve that problem."),Hl.forEach(t),Cs=p(g),X=s(g,"DIV",{class:!0});var er=n(X);v(fe.$$.fragment,er),Ls=p(er),ge=s(er,"P",{});var tr=n(ge);Us=l(tr,"Add "),Nt=s(tr,"CODE",{});var Gl=n(Nt);Is=l(Gl,"arrays"),Gl.forEach(t),zs=l(tr,` to the internal storage, Will initialize the storage to the full size at the first arrays passed
so that if we\u2019re bound to get an OOM, it happens at the beginning.`),tr.forEach(t),er.forEach(t),Ss=p(g),Z=s(g,"DIV",{class:!0});var ar=n(Z);v(be.$$.fragment,ar),Ns=p(ar),Ht=s(ar,"P",{});var Vl=n(Ht);Hs=l(Vl,`Return the properly gathered arrays and truncate to the number of samples (since the sampler added some extras
to get each process a dataset of the same length).`),Vl.forEach(t),ar.forEach(t),g.forEach(t),Ha=p(a),M=s(a,"H2",{class:!0});var rr=n(M);ee=s(rr,"A",{id:!0,class:!0,href:!0});var Ml=n(ee);Gt=s(Ml,"SPAN",{});var Rl=n(Gt);v(ve.$$.fragment,Rl),Rl.forEach(t),Ml.forEach(t),Gs=p(rr),Vt=s(rr,"SPAN",{});var Fl=n(Vt);Vs=l(Fl,"Distributed Evaluation"),Fl.forEach(t),rr.forEach(t),Ga=p(a),E=s(a,"DIV",{class:!0});var P=n(E);v(_e.$$.fragment,P),Ms=p(P),we=s(P,"P",{});var sr=n(we);Rs=l(sr,"This subclass of "),Mt=s(sr,"CODE",{});var ql=n(Mt);Fs=l(ql,"argparse.ArgumentParser"),ql.forEach(t),qs=l(sr," uses type hints on dataclasses to generate arguments."),sr.forEach(t),Bs=p(P),ye=s(P,"P",{});var nr=n(ye);Ks=l(nr,`The class is designed to play well with the native argparse. In particular, you can add more (non-dataclass backed)
arguments to the parser after initialization and you\u2019ll get the output back after parsing as an additional
namespace. Optional: To create sub argument groups use the `),Rt=s(nr,"CODE",{});var Bl=n(Rt);Ys=l(Bl,"_argument_group_name"),Bl.forEach(t),Ws=l(nr," attribute in the dataclass."),nr.forEach(t),Js=p(P),x=s(P,"DIV",{class:!0});var Xe=n(x);v($e.$$.fragment,Xe),Qs=p(Xe),Ft=s(Xe,"P",{});var Kl=n(Ft);Xs=l(Kl,"Parse command-line args into instances of the specified dataclass types."),Kl.forEach(t),Zs=p(Xe),Ee=s(Xe,"P",{});var or=n(Ee);en=l(or,"This relies on argparse\u2019s "),qt=s(or,"CODE",{});var Yl=n(qt);tn=l(Yl,"ArgumentParser.parse_known_args"),Yl.forEach(t),an=l(or,`. See the doc at:
docs.python.org/3.7/library/argparse.html#argparse.ArgumentParser.parse_args`),or.forEach(t),Xe.forEach(t),rn=p(P),te=s(P,"DIV",{class:!0});var lr=n(te);v(De.$$.fragment,lr),sn=p(lr),je=s(lr,"P",{});var ir=n(je);nn=l(ir,"Alternative helper method that does not use "),Bt=s(ir,"CODE",{});var Wl=n(Bt);on=l(Wl,"argparse"),Wl.forEach(t),ln=l(ir,` at all, instead uses a dict and populating the dataclass
types.`),ir.forEach(t),lr.forEach(t),pn=p(P),ae=s(P,"DIV",{class:!0});var pr=n(ae);v(Pe.$$.fragment,pr),dn=p(pr),ke=s(pr,"P",{});var dr=n(ke);cn=l(dr,"Alternative helper method that does not use "),Kt=s(dr,"CODE",{});var Jl=n(Kt);hn=l(Jl,"argparse"),Jl.forEach(t),un=l(dr,` at all, instead loading a json file and populating the
dataclass types.`),dr.forEach(t),pr.forEach(t),P.forEach(t),Va=p(a),R=s(a,"H2",{class:!0});var cr=n(R);re=s(cr,"A",{id:!0,class:!0,href:!0});var Ql=n(re);Yt=s(Ql,"SPAN",{});var Xl=n(Yt);v(xe.$$.fragment,Xl),Xl.forEach(t),Ql.forEach(t),mn=p(cr),Wt=s(cr,"SPAN",{});var Zl=n(Wt);fn=l(Zl,"Debug Utilities"),Zl.forEach(t),cr.forEach(t),Ma=p(a),d=s(a,"DIV",{class:!0});var c=n(d);v(Te.$$.fragment,c),gn=p(c),F=s(c,"P",{});var Ze=n(F);bn=l(Ze,`This debug class helps detect and understand where the model starts getting very large or very small, and more
importantly `),Jt=s(Ze,"CODE",{});var ei=n(Jt);vn=l(ei,"nan"),ei.forEach(t),_n=l(Ze," or "),Qt=s(Ze,"CODE",{});var ti=n(Qt);wn=l(ti,"inf"),ti.forEach(t),yn=l(Ze," weight and activation elements."),Ze.forEach(t),$n=p(c),Xt=s(c,"P",{});var ai=n(Xt);En=l(ai,"There are 2 working modes:"),ai.forEach(t),Dn=p(c),Oe=s(c,"OL",{});var hr=n(Oe);Zt=s(hr,"LI",{});var ri=n(Zt);jn=l(ri,"Underflow/overflow detection (default)"),ri.forEach(t),Pn=p(hr),ea=s(hr,"LI",{});var si=n(ea);kn=l(si,"Specific batch absolute min/max tracing without detection"),si.forEach(t),hr.forEach(t),xn=p(c),ta=s(c,"P",{});var ni=n(ta);Tn=l(ni,"Mode 1: Underflow/overflow detection"),ni.forEach(t),On=p(c),aa=s(c,"P",{});var oi=n(aa);An=l(oi,"To activate the underflow/overflow detection, initialize the object with the model :"),oi.forEach(t),Cn=p(c),v(Ae.$$.fragment,c),Ln=p(c),k=s(c,"P",{});var se=n(k);Un=l(se,"then run the training as normal and if "),ra=s(se,"CODE",{});var li=n(ra);In=l(li,"nan"),li.forEach(t),zn=l(se," or "),sa=s(se,"CODE",{});var ii=n(sa);Sn=l(ii,"inf"),ii.forEach(t),Nn=l(se,` gets detected in at least one of the weight, input or output
elements this module will throw an exception and will print `),na=s(se,"CODE",{});var pi=n(na);Hn=l(pi,"max_frames_to_save"),pi.forEach(t),Gn=l(se,` frames that lead to this event,
each frame reporting`),se.forEach(t),Vn=p(c),Ce=s(c,"OL",{});var ur=n(Ce);Le=s(ur,"LI",{});var mr=n(Le);Mn=l(mr,"the fully qualified module name plus the class name whose "),oa=s(mr,"CODE",{});var di=n(oa);Rn=l(di,"forward"),di.forEach(t),Fn=l(mr," was run"),mr.forEach(t),qn=p(ur),la=s(ur,"LI",{});var ci=n(la);Bn=l(ci,"the absolute min and max value of all elements for each module weights, and the inputs and output"),ci.forEach(t),ur.forEach(t),Kn=p(c),Ue=s(c,"P",{});var fr=n(Ue);Yn=l(fr,"For example, here is the header and the last few frames in detection report for "),ia=s(fr,"CODE",{});var hi=n(ia);Wn=l(hi,"google/mt5-small"),hi.forEach(t),Jn=l(fr,` run in fp16
mixed precision :`),fr.forEach(t),Qn=p(c),v(Ie.$$.fragment,c),Xn=p(c),q=s(c,"P",{});var et=n(q);Zn=l(et,"You can see here, that "),pa=s(et,"CODE",{});var ui=n(pa);eo=l(ui,"T5DenseGatedGeluDense.forward"),ui.forEach(t),to=l(et,` resulted in output activations, whose absolute max value was
around 62.7K, which is very close to fp16\u2019s top limit of 64K. In the next frame we have `),da=s(et,"CODE",{});var mi=n(da);ao=l(mi,"Dropout"),mi.forEach(t),ro=l(et,` which
renormalizes the weights, after it zeroed some of the elements, which pushes the absolute max value to more than
64K, and we get an overlow.`),et.forEach(t),so=p(c),ca=s(c,"P",{});var fi=n(ca);no=l(fi,`As you can see it\u2019s the previous frames that we need to look into when the numbers start going into very large for
fp16 numbers.`),fi.forEach(t),oo=p(c),ze=s(c,"P",{});var gr=n(ze);lo=l(gr,"The tracking is done in a forward hook, which gets invoked immediately after "),ha=s(gr,"CODE",{});var gi=n(ha);io=l(gi,"forward"),gi.forEach(t),po=l(gr," has completed."),gr.forEach(t),co=p(c),ua=s(c,"P",{});var bi=n(ua);ho=l(bi,"By default the last 21 frames are printed. You can change the default to adjust for your needs. For example :"),bi.forEach(t),uo=p(c),v(Se.$$.fragment,c),mo=p(c),ma=s(c,"P",{});var vi=n(ma);fo=l(vi,`To validate that you have set up this debugging feature correctly, and you intend to use it in a training that
may take hours to complete, first run it with normal tracing enabled for one of a few batches as explained in
the next section.`),vi.forEach(t),go=p(c),fa=s(c,"P",{});var _i=n(fa);bo=l(_i,"Mode 2. Specific batch absolute min/max tracing without detection"),_i.forEach(t),vo=p(c),ga=s(c,"P",{});var wi=n(ga);_o=l(wi,"The second work mode is per-batch tracing with the underflow/overflow detection feature turned off."),wi.forEach(t),wo=p(c),Ne=s(c,"P",{});var br=n(Ne);yo=l(br,"Let\u2019s say you want to watch the absolute min and max values for all the ingredients of each "),ba=s(br,"CODE",{});var yi=n(ba);$o=l(yi,"forward"),yi.forEach(t),Eo=l(br,` call of a
given batch, and only do that for batches 1 and 3. Then you instantiate this class as :`),br.forEach(t),Do=p(c),v(He.$$.fragment,c),jo=p(c),va=s(c,"P",{});var $i=n(va);Po=l($i,"And now full batches 1 and 3 will be traced using the same format as explained above. Batches are 0-indexed."),$i.forEach(t),ko=p(c),_a=s(c,"P",{});var Ei=n(_a);xo=l(Ei,`This is helpful if you know that the program starts misbehaving after a certain batch number, so you can
fast-forward right to that area.`),Ei.forEach(t),To=p(c),wa=s(c,"P",{});var Di=n(wa);Oo=l(Di,"Early stopping:"),Di.forEach(t),Ao=p(c),ya=s(c,"P",{});var ji=n(ya);Co=l(ji,"You can also specify the batch number after which to stop the training, with :"),ji.forEach(t),Lo=p(c),v(Ge.$$.fragment,c),Uo=p(c),$a=s(c,"P",{});var Pi=n($a);Io=l(Pi,"This feature is mainly useful in the tracing mode, but you can use it for any mode."),Pi.forEach(t),zo=p(c),We=s(c,"P",{});var Qo=n(We);Ea=s(Qo,"STRONG",{});var ki=n(Ea);So=l(ki,"Performance"),ki.forEach(t),No=l(Qo,":"),Qo.forEach(t),Ho=p(c),B=s(c,"P",{});var tt=n(B);Go=l(tt,"As this module measures absolute "),Da=s(tt,"CODE",{});var xi=n(Da);Vo=l(xi,"min"),xi.forEach(t),Mo=l(tt,"/`"),ja=s(tt,"CODE",{});var Ti=n(ja);Ro=l(Ti,"max"),Ti.forEach(t),Fo=l(tt,` of each weight of the model on every forward it\u2019ll slow the training
down. Therefore remember to turn it off once the debugging needs have been met.`),tt.forEach(t),c.forEach(t),this.h()},h(){h(O,"name","hf:doc:metadata"),h(O,"content",JSON.stringify(Si)),h(K,"id","utilities-for-trainer"),h(K,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(K,"href","#utilities-for-trainer"),h(A,"class","relative group"),h(Ve,"href","/docs/transformers/pr_16825/en/main_classes/trainer#transformers.Trainer"),h(W,"id","transformers.EvalPrediction"),h(W,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(W,"href","#transformers.EvalPrediction"),h(C,"class","relative group"),h(L,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(U,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(I,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(z,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(J,"id","transformers.trainer_callback.CallbackHandler"),h(J,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(J,"href","#transformers.trainer_callback.CallbackHandler"),h(S,"class","relative group"),h(N,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(Q,"id","transformers.trainer_pt_utils.DistributedTensorGatherer"),h(Q,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(Q,"href","#transformers.trainer_pt_utils.DistributedTensorGatherer"),h(H,"class","relative group"),h(X,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(Z,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(u,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(ee,"id","transformers.HfArgumentParser"),h(ee,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(ee,"href","#transformers.HfArgumentParser"),h(M,"class","relative group"),h(x,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(te,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(ae,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(E,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),h(re,"id","transformers.debug_utils.DebugUnderflowOverflow"),h(re,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(re,"href","#transformers.debug_utils.DebugUnderflowOverflow"),h(R,"class","relative group"),h(d,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(a,m){e(document.head,O),f(a,ka,m),f(a,A,m),e(A,K),e(K,rt),_(ne,rt,null),e(A,vr),e(A,st),e(st,_r),f(a,xa,m),f(a,Y,m),e(Y,wr),e(Y,Ve),e(Ve,yr),e(Y,$r),f(a,Ta,m),f(a,Me,m),e(Me,Er),f(a,Oa,m),f(a,C,m),e(C,W),e(W,nt),_(oe,nt,null),e(C,Dr),e(C,ot),e(ot,jr),f(a,Aa,m),f(a,L,m),_(le,L,null),e(L,Pr),e(L,lt),e(lt,kr),f(a,Ca,m),f(a,U,m),_(ie,U,null),e(U,xr),e(U,it),e(it,Tr),f(a,La,m),f(a,I,m),_(pe,I,null),e(I,Or),e(I,D),e(D,Ar),e(D,pt),e(pt,Cr),e(D,Lr),e(D,dt),e(dt,Ur),e(D,Ir),e(D,ct),e(ct,zr),e(D,Sr),e(D,ht),e(ht,Nr),e(D,Hr),f(a,Ua,m),f(a,z,m),_(de,z,null),e(z,Gr),e(z,ut),e(ut,Vr),f(a,Ia,m),f(a,S,m),e(S,J),e(J,mt),_(ce,mt,null),e(S,Mr),e(S,ft),e(ft,Rr),f(a,za,m),f(a,N,m),_(he,N,null),e(N,Fr),e(N,gt),e(gt,qr),f(a,Sa,m),f(a,H,m),e(H,Q),e(Q,bt),_(ue,bt,null),e(H,Br),e(H,vt),e(vt,Kr),f(a,Na,m),f(a,u,m),_(me,u,null),e(u,Yr),e(u,_t),e(_t,Wr),e(u,Jr),e(u,wt),e(wt,Qr),e(u,Xr),e(u,yt),e(yt,$t),e($t,Zr),e(u,es),e(u,Et),e(Et,ts),e(u,as),e(u,G),e(G,Re),e(Re,rs),e(Re,Dt),e(Dt,ss),e(G,ns),e(G,Fe),e(Fe,os),e(Fe,jt),e(jt,ls),e(G,is),e(G,qe),e(qe,ps),e(qe,Pt),e(Pt,ds),e(u,cs),e(u,kt),e(kt,hs),e(u,us),e(u,V),e(V,Be),e(Be,ms),e(Be,xt),e(xt,fs),e(V,gs),e(V,Ke),e(Ke,bs),e(Ke,Tt),e(Tt,vs),e(V,_s),e(V,Ye),e(Ye,ws),e(Ye,Ot),e(Ot,ys),e(u,$s),e(u,At),e(At,Es),e(u,Ds),e(u,Ct),e(Ct,Lt),e(Lt,js),e(u,Ps),e(u,Ut),e(Ut,ks),e(u,xs),e(u,It),e(It,zt),e(zt,Ts),e(u,Os),e(u,St),e(St,As),e(u,Cs),e(u,X),_(fe,X,null),e(X,Ls),e(X,ge),e(ge,Us),e(ge,Nt),e(Nt,Is),e(ge,zs),e(u,Ss),e(u,Z),_(be,Z,null),e(Z,Ns),e(Z,Ht),e(Ht,Hs),f(a,Ha,m),f(a,M,m),e(M,ee),e(ee,Gt),_(ve,Gt,null),e(M,Gs),e(M,Vt),e(Vt,Vs),f(a,Ga,m),f(a,E,m),_(_e,E,null),e(E,Ms),e(E,we),e(we,Rs),e(we,Mt),e(Mt,Fs),e(we,qs),e(E,Bs),e(E,ye),e(ye,Ks),e(ye,Rt),e(Rt,Ys),e(ye,Ws),e(E,Js),e(E,x),_($e,x,null),e(x,Qs),e(x,Ft),e(Ft,Xs),e(x,Zs),e(x,Ee),e(Ee,en),e(Ee,qt),e(qt,tn),e(Ee,an),e(E,rn),e(E,te),_(De,te,null),e(te,sn),e(te,je),e(je,nn),e(je,Bt),e(Bt,on),e(je,ln),e(E,pn),e(E,ae),_(Pe,ae,null),e(ae,dn),e(ae,ke),e(ke,cn),e(ke,Kt),e(Kt,hn),e(ke,un),f(a,Va,m),f(a,R,m),e(R,re),e(re,Yt),_(xe,Yt,null),e(R,mn),e(R,Wt),e(Wt,fn),f(a,Ma,m),f(a,d,m),_(Te,d,null),e(d,gn),e(d,F),e(F,bn),e(F,Jt),e(Jt,vn),e(F,_n),e(F,Qt),e(Qt,wn),e(F,yn),e(d,$n),e(d,Xt),e(Xt,En),e(d,Dn),e(d,Oe),e(Oe,Zt),e(Zt,jn),e(Oe,Pn),e(Oe,ea),e(ea,kn),e(d,xn),e(d,ta),e(ta,Tn),e(d,On),e(d,aa),e(aa,An),e(d,Cn),_(Ae,d,null),e(d,Ln),e(d,k),e(k,Un),e(k,ra),e(ra,In),e(k,zn),e(k,sa),e(sa,Sn),e(k,Nn),e(k,na),e(na,Hn),e(k,Gn),e(d,Vn),e(d,Ce),e(Ce,Le),e(Le,Mn),e(Le,oa),e(oa,Rn),e(Le,Fn),e(Ce,qn),e(Ce,la),e(la,Bn),e(d,Kn),e(d,Ue),e(Ue,Yn),e(Ue,ia),e(ia,Wn),e(Ue,Jn),e(d,Qn),_(Ie,d,null),e(d,Xn),e(d,q),e(q,Zn),e(q,pa),e(pa,eo),e(q,to),e(q,da),e(da,ao),e(q,ro),e(d,so),e(d,ca),e(ca,no),e(d,oo),e(d,ze),e(ze,lo),e(ze,ha),e(ha,io),e(ze,po),e(d,co),e(d,ua),e(ua,ho),e(d,uo),_(Se,d,null),e(d,mo),e(d,ma),e(ma,fo),e(d,go),e(d,fa),e(fa,bo),e(d,vo),e(d,ga),e(ga,_o),e(d,wo),e(d,Ne),e(Ne,yo),e(Ne,ba),e(ba,$o),e(Ne,Eo),e(d,Do),_(He,d,null),e(d,jo),e(d,va),e(va,Po),e(d,ko),e(d,_a),e(_a,xo),e(d,To),e(d,wa),e(wa,Oo),e(d,Ao),e(d,ya),e(ya,Co),e(d,Lo),_(Ge,d,null),e(d,Uo),e(d,$a),e($a,Io),e(d,zo),e(d,We),e(We,Ea),e(Ea,So),e(We,No),e(d,Ho),e(d,B),e(B,Go),e(B,Da),e(Da,Vo),e(B,Mo),e(B,ja),e(ja,Ro),e(B,Fo),Ra=!0},p:Ui,i(a){Ra||(w(ne.$$.fragment,a),w(oe.$$.fragment,a),w(le.$$.fragment,a),w(ie.$$.fragment,a),w(pe.$$.fragment,a),w(de.$$.fragment,a),w(ce.$$.fragment,a),w(he.$$.fragment,a),w(ue.$$.fragment,a),w(me.$$.fragment,a),w(fe.$$.fragment,a),w(be.$$.fragment,a),w(ve.$$.fragment,a),w(_e.$$.fragment,a),w($e.$$.fragment,a),w(De.$$.fragment,a),w(Pe.$$.fragment,a),w(xe.$$.fragment,a),w(Te.$$.fragment,a),w(Ae.$$.fragment,a),w(Ie.$$.fragment,a),w(Se.$$.fragment,a),w(He.$$.fragment,a),w(Ge.$$.fragment,a),Ra=!0)},o(a){y(ne.$$.fragment,a),y(oe.$$.fragment,a),y(le.$$.fragment,a),y(ie.$$.fragment,a),y(pe.$$.fragment,a),y(de.$$.fragment,a),y(ce.$$.fragment,a),y(he.$$.fragment,a),y(ue.$$.fragment,a),y(me.$$.fragment,a),y(fe.$$.fragment,a),y(be.$$.fragment,a),y(ve.$$.fragment,a),y(_e.$$.fragment,a),y($e.$$.fragment,a),y(De.$$.fragment,a),y(Pe.$$.fragment,a),y(xe.$$.fragment,a),y(Te.$$.fragment,a),y(Ae.$$.fragment,a),y(Ie.$$.fragment,a),y(Se.$$.fragment,a),y(He.$$.fragment,a),y(Ge.$$.fragment,a),Ra=!1},d(a){t(O),a&&t(ka),a&&t(A),$(ne),a&&t(xa),a&&t(Y),a&&t(Ta),a&&t(Me),a&&t(Oa),a&&t(C),$(oe),a&&t(Aa),a&&t(L),$(le),a&&t(Ca),a&&t(U),$(ie),a&&t(La),a&&t(I),$(pe),a&&t(Ua),a&&t(z),$(de),a&&t(Ia),a&&t(S),$(ce),a&&t(za),a&&t(N),$(he),a&&t(Sa),a&&t(H),$(ue),a&&t(Na),a&&t(u),$(me),$(fe),$(be),a&&t(Ha),a&&t(M),$(ve),a&&t(Ga),a&&t(E),$(_e),$($e),$(De),$(Pe),a&&t(Va),a&&t(R),$(xe),a&&t(Ma),a&&t(d),$(Te),$(Ae),$(Ie),$(Se),$(He),$(Ge)}}}const Si={local:"utilities-for-trainer",sections:[{local:"transformers.EvalPrediction",title:"Utilities"},{local:"transformers.trainer_callback.CallbackHandler",title:"Callbacks internals"},{local:"transformers.trainer_pt_utils.DistributedTensorGatherer",title:"Distributed Evaluation"},{local:"transformers.HfArgumentParser",title:"Distributed Evaluation"},{local:"transformers.debug_utils.DebugUnderflowOverflow",title:"Debug Utilities"}],title:"Utilities for Trainer"};function Ni(Xo){return Ii(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Ri extends Oi{constructor(O){super();Ai(this,O,Ni,zi,Ci,{})}}export{Ri as default,Si as metadata};
