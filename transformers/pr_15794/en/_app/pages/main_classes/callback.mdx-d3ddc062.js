import{S as xd,i as Fd,s as jd,e as s,k as c,w as _,t as r,M as Nd,c as o,d as t,m as f,a as l,x as u,h as n,b as i,F as e,g as m,y as v,q as b,o as E,B as k}from"../../chunks/vendor-22ad994f.js";import{T as Wd}from"../../chunks/Tip-540f533b.js";import{D as $}from"../../chunks/Docstring-3bc3620c.js";import{C as bh}from"../../chunks/CodeBlock-03069293.js";import{I as $n}from"../../chunks/IconCopyLink-2eb9a001.js";import"../../chunks/CopyButton-f539c482.js";function zd(nr){let w,Y,A,S,Z,M,Qe,ee;return{c(){w=s("p"),Y=r(`In all this class, one step is to be understood as one update step. When using gradient accumulation, one update
step may require several forward and backward passes: if you use `),A=s("code"),S=r("gradient_accumulation_steps=n"),Z=r(`, then one update
step requires going through `),M=s("em"),Qe=r("n"),ee=r(" batches.")},l(te){w=o(te,"P",{});var x=l(w);Y=n(x,`In all this class, one step is to be understood as one update step. When using gradient accumulation, one update
step may require several forward and backward passes: if you use `),A=o(x,"CODE",{});var q=l(A);S=n(q,"gradient_accumulation_steps=n"),q.forEach(t),Z=n(x,`, then one update
step requires going through `),M=o(x,"EM",{});var sa=l(M);Qe=n(sa,"n"),sa.forEach(t),ee=n(x," batches."),x.forEach(t)},m(te,x){m(te,w,x),e(w,Y),e(w,A),e(A,S),e(w,Z),e(w,M),e(M,Qe),e(w,ee)},d(te){te&&t(w)}}}function Bd(nr){let w,Y,A,S,Z,M,Qe,ee,te,x,q,sa,oa,Fs,js,Cn,j,Ns,la,Ws,zs,ia,Bs,Vs,ca,qs,Rs,wn,Ee,Hs,fa,Us,Gs,yn,D,ha,ma,Js,Ys,Xs,X,da,Ks,Qs,pa,Zs,eo,ga,to,ao,ro,_a,ua,no,so,oo,ke,va,lo,io,Ze,co,fo,ho,Te,ba,mo,po,et,go,_o,uo,$e,Ea,vo,bo,tt,Eo,ko,To,Ce,ka,$o,Co,at,wo,yo,An,L,Ao,Ta,Do,Lo,$a,So,Po,Ca,Oo,Io,wa,Mo,xo,ya,Fo,jo,Dn,ae,we,sr,rt,No,or,Wo,Ln,ye,zo,Aa,Bo,Vo,Sn,R,nt,qo,re,Ro,Da,Ho,Uo,st,Go,Jo,Yo,N,ot,Xo,lr,Ko,Qo,C,Zo,ir,el,tl,cr,al,rl,fr,nl,sl,hr,ol,ll,mr,il,cl,dr,fl,hl,pr,ml,dl,gr,pl,gl,_r,_l,ul,vl,lt,bl,it,El,kl,Pn,ne,ct,Tl,ft,$l,La,Cl,wl,On,se,ht,yl,mt,Al,Sa,Dl,Ll,In,oe,dt,Sl,pt,Pl,Pa,Ol,Il,Mn,H,gt,Ml,_t,xl,Oa,Fl,jl,Nl,U,Wl,Ia,zl,Bl,ur,Vl,ql,Ma,Rl,Hl,xn,le,ut,Ul,ie,Gl,xa,Jl,Yl,vt,Xl,Kl,Fn,G,bt,Ql,ce,Zl,Fa,ei,ti,Et,ai,ri,ni,W,kt,si,Tt,oi,vr,li,ii,ci,$t,fi,Ct,hi,mi,di,d,pi,br,gi,_i,Er,ui,vi,kr,bi,Ei,Tr,ki,Ti,$r,$i,Ci,Cr,wi,yi,wr,Ai,Di,yr,Li,Si,Ar,Pi,Oi,Dr,Ii,Mi,Lr,xi,Fi,Sr,ji,Ni,Pr,Wi,zi,Or,Bi,Vi,Ir,qi,Ri,Mr,Hi,Ui,xr,Gi,Ji,Fr,Yi,Xi,jr,Ki,Qi,jn,J,wt,Zi,fe,ec,ja,tc,ac,yt,rc,nc,sc,z,At,oc,Nr,lc,ic,he,cc,Wr,fc,hc,zr,mc,dc,pc,F,gc,Br,_c,uc,Vr,vc,bc,Na,Ec,kc,qr,Tc,$c,Nn,me,Dt,Cc,de,wc,Wa,yc,Ac,Lt,Dc,Lc,Wn,pe,Ae,Rr,St,Sc,Hr,Pc,zn,p,Pt,Oc,Ur,Ic,Mc,Ot,xc,Gr,Fc,jc,Nc,P,Wc,Jr,zc,Bc,Yr,Vc,qc,Xr,Rc,Hc,Kr,Uc,Gc,Qr,Jc,Yc,Xc,Zr,Kc,Qc,It,Zc,De,Mt,ef,en,tf,af,Le,xt,rf,tn,nf,sf,Se,Ft,of,an,lf,cf,Pe,jt,ff,Nt,hf,za,mf,df,pf,Oe,Wt,gf,rn,_f,uf,Ie,zt,vf,nn,bf,Ef,Me,Bt,kf,sn,Tf,$f,xe,Vt,Cf,on,wf,yf,Fe,qt,Af,ln,Df,Lf,je,Rt,Sf,cn,Pf,Of,Ne,Ht,If,fn,Mf,xf,We,Ut,Ff,hn,jf,Bn,ze,Nf,Ba,Wf,zf,Vn,Gt,qn,Be,Bf,mn,Vf,qf,Rn,Jt,Hn,ge,Ve,dn,Yt,Rf,pn,Hf,Un,O,Xt,Uf,_e,Gf,Va,Jf,Yf,qa,Xf,Kf,Qf,qe,Zf,Re,Kt,eh,Qt,th,gn,ah,rh,nh,He,Zt,sh,ea,oh,_n,lh,ih,Gn,ue,Ue,un,ta,ch,vn,fh,Jn,ve,aa,hh,be,mh,Ra,dh,ph,Ha,gh,_h,Yn;return M=new $n({}),rt=new $n({}),nt=new $({props:{name:"class transformers.integrations.CometCallback",anchor:"transformers.integrations.CometCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/integrations.py#L660"}}),ot=new $({props:{name:"setup",anchor:"transformers.integrations.CometCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/integrations.py#L671"}}),ct=new $({props:{name:"class transformers.DefaultFlowCallback",anchor:"transformers.DefaultFlowCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L406"}}),ht=new $({props:{name:"class transformers.PrinterCallback",anchor:"transformers.PrinterCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L494"}}),dt=new $({props:{name:"class transformers.ProgressCallback",anchor:"transformers.ProgressCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L452"}}),gt=new $({props:{name:"class transformers.EarlyStoppingCallback",anchor:"transformers.EarlyStoppingCallback",parameters:[{name:"early_stopping_patience",val:": int = 1"},{name:"early_stopping_threshold",val:": typing.Optional[float] = 0.0"}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L505",parametersDescription:[{anchor:"transformers.EarlyStoppingCallback.early_stopping_patience",description:`<strong>early_stopping_patience</strong> (<code>int</code>) &#x2014;
Use with <code>metric_for_best_model</code> to stop training when the specified metric worsens for
<code>early_stopping_patience</code> evaluation calls.`,name:"early_stopping_patience"},{anchor:"transformers.EarlyStoppingCallback.early_stopping_threshold(float,",description:`<strong>early_stopping_threshold(<code>float</code>,</strong> <em>optional</em>) &#x2014;
Use with TrainingArguments <code>metric_for_best_model</code> and <code>early_stopping_patience</code> to denote how much the
specified metric must improve to satisfy early stopping conditions. \``,name:"early_stopping_threshold(float,"}]}}),ut=new $({props:{name:"class transformers.integrations.TensorBoardCallback",anchor:"transformers.integrations.TensorBoardCallback",parameters:[{name:"tb_writer",val:" = None"}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/integrations.py#L446",parametersDescription:[{anchor:"transformers.integrations.TensorBoardCallback.tb_writer",description:`<strong>tb_writer</strong> (<code>SummaryWriter</code>, <em>optional</em>) &#x2014;
The writer to use. Will instantiate one if not set.`,name:"tb_writer"}]}}),bt=new $({props:{name:"class transformers.integrations.WandbCallback",anchor:"transformers.integrations.WandbCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/integrations.py#L534"}}),kt=new $({props:{name:"setup",anchor:"transformers.integrations.WandbCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/integrations.py#L551"}}),wt=new $({props:{name:"class transformers.integrations.MLflowCallback",anchor:"transformers.integrations.MLflowCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/integrations.py#L759"}}),At=new $({props:{name:"setup",anchor:"transformers.integrations.MLflowCallback.setup",parameters:[{name:"args",val:""},{name:"state",val:""},{name:"model",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/integrations.py#L776"}}),Dt=new $({props:{name:"class transformers.integrations.AzureMLCallback",anchor:"transformers.integrations.AzureMLCallback",parameters:[{name:"azureml_run",val:" = None"}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/integrations.py#L736"}}),St=new $n({}),Pt=new $({props:{name:"class transformers.TrainerCallback",anchor:"transformers.TrainerCallback",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L159",parametersDescription:[{anchor:"transformers.TrainerCallback.args",description:`<strong>args</strong> (<a href="/docs/transformers/pr_15794/en/main_classes/trainer#transformers.TrainingArguments">TrainingArguments</a>) &#x2014;
The training arguments used to instantiate the <a href="/docs/transformers/pr_15794/en/main_classes/trainer#transformers.Trainer">Trainer</a>.`,name:"args"},{anchor:"transformers.TrainerCallback.state",description:`<strong>state</strong> (<a href="/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerState">TrainerState</a>) &#x2014;
The current state of the <a href="/docs/transformers/pr_15794/en/main_classes/trainer#transformers.Trainer">Trainer</a>.`,name:"state"},{anchor:"transformers.TrainerCallback.control",description:`<strong>control</strong> (<a href="/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerControl">TrainerControl</a>) &#x2014;
The object that is returned to the <a href="/docs/transformers/pr_15794/en/main_classes/trainer#transformers.Trainer">Trainer</a> and can be used to make some decisions.`,name:"control"},{anchor:"transformers.TrainerCallback.model",description:`<strong>model</strong> (<a href="/docs/transformers/pr_15794/en/main_classes/model#transformers.PreTrainedModel">PreTrainedModel</a> or <code>torch.nn.Module</code>) &#x2014;
The model being trained.`,name:"model"},{anchor:"transformers.TrainerCallback.tokenizer",description:`<strong>tokenizer</strong> (<a href="/docs/transformers/pr_15794/en/main_classes/tokenizer#transformers.PreTrainedTokenizer">PreTrainedTokenizer</a>) &#x2014;
The tokenizer used for encoding the data.`,name:"tokenizer"},{anchor:"transformers.TrainerCallback.optimizer",description:`<strong>optimizer</strong> (<code>torch.optim.Optimizer</code>) &#x2014;
The optimizer used for the training steps.`,name:"optimizer"},{anchor:"transformers.TrainerCallback.lr_scheduler",description:`<strong>lr_scheduler</strong> (<code>torch.optim.lr_scheduler.LambdaLR</code>) &#x2014;
The scheduler used for setting the learning rate.`,name:"lr_scheduler"},{anchor:"transformers.TrainerCallback.train_dataloader",description:`<strong>train_dataloader</strong> (<code>torch.utils.data.DataLoader</code>, <em>optional</em>) &#x2014;
The current dataloader used for training.`,name:"train_dataloader"},{anchor:"transformers.TrainerCallback.eval_dataloader",description:`<strong>eval_dataloader</strong> (<code>torch.utils.data.DataLoader</code>, <em>optional</em>) &#x2014;
The current dataloader used for training.`,name:"eval_dataloader"},{anchor:"transformers.TrainerCallback.metrics",description:`<strong>metrics</strong> (<code>Dict[str, float]</code>) &#x2014;
The metrics computed by the last evaluation phase.</p>
<p>Those are only accessible in the event <code>on_evaluate</code>.`,name:"metrics"},{anchor:"transformers.TrainerCallback.logs",description:`<strong>logs</strong>  (<code>Dict[str, float]</code>) &#x2014;
The values to log.</p>
<p>Those are only accessible in the event <code>on_log</code>.`,name:"logs"}]}}),It=new bh({props:{code:`class PrinterCallback(TrainerCallback):
    def on_log(self, args, state, control, logs=None, **kwargs):
        _ = logs.pop("total_flos", None)
        if state.is_local_process_zero:
            print(logs),`,highlighted:`<span class="hljs-keyword">class</span> <span class="hljs-title class_">PrinterCallback</span>(<span class="hljs-title class_ inherited__">TrainerCallback</span>):
    <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_log</span>(<span class="hljs-params">self, args, state, control, logs=<span class="hljs-literal">None</span>, **kwargs</span>):
        _ = logs.pop(<span class="hljs-string">&quot;total_flos&quot;</span>, <span class="hljs-literal">None</span>)
        <span class="hljs-keyword">if</span> state.is_local_process_zero:
            <span class="hljs-built_in">print</span>(logs)`}}),Mt=new $({props:{name:"on_epoch_begin",anchor:"transformers.TrainerCallback.on_epoch_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L227"}}),xt=new $({props:{name:"on_epoch_end",anchor:"transformers.TrainerCallback.on_epoch_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L233"}}),Ft=new $({props:{name:"on_evaluate",anchor:"transformers.TrainerCallback.on_evaluate",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L259"}}),jt=new $({props:{name:"on_init_end",anchor:"transformers.TrainerCallback.on_init_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L209"}}),Wt=new $({props:{name:"on_log",anchor:"transformers.TrainerCallback.on_log",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L271"}}),zt=new $({props:{name:"on_prediction_step",anchor:"transformers.TrainerCallback.on_prediction_step",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L277"}}),Bt=new $({props:{name:"on_save",anchor:"transformers.TrainerCallback.on_save",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L265"}}),Vt=new $({props:{name:"on_step_begin",anchor:"transformers.TrainerCallback.on_step_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L239"}}),qt=new $({props:{name:"on_step_end",anchor:"transformers.TrainerCallback.on_step_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L252"}}),Rt=new $({props:{name:"on_substep_end",anchor:"transformers.TrainerCallback.on_substep_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L246"}}),Ht=new $({props:{name:"on_train_begin",anchor:"transformers.TrainerCallback.on_train_begin",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L215"}}),Ut=new $({props:{name:"on_train_end",anchor:"transformers.TrainerCallback.on_train_end",parameters:[{name:"args",val:": TrainingArguments"},{name:"state",val:": TrainerState"},{name:"control",val:": TrainerControl"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L221"}}),Gt=new bh({props:{code:`class MyCallback(TrainerCallback):
    "A callback that prints a message at the beginning of training"

    def on_train_begin(self, args, state, control, **kwargs):
        print("Starting training")


trainer = Trainer(
    model,
    args,
    train_dataset=train_dataset,
    eval_dataset=eval_dataset,
    callbacks=[MyCallback],  # We can either pass the callback class this way or an instance of it (MyCallback())
),`,highlighted:`<span class="hljs-keyword">class</span> <span class="hljs-title class_">MyCallback</span>(<span class="hljs-title class_ inherited__">TrainerCallback</span>):
    <span class="hljs-string">&quot;A callback that prints a message at the beginning of training&quot;</span>

    <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_train_begin</span>(<span class="hljs-params">self, args, state, control, **kwargs</span>):
        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Starting training&quot;</span>)


trainer = Trainer(
    model,
    args,
    train_dataset=train_dataset,
    eval_dataset=eval_dataset,
    callbacks=[MyCallback],  <span class="hljs-comment"># We can either pass the callback class this way or an instance of it (MyCallback())</span>
)`}}),Jt=new bh({props:{code:`trainer = Trainer(...)
trainer.add_callback(MyCallback)
# Alternatively, we can pass an instance of the callback class
trainer.add_callback(MyCallback()),`,highlighted:`trainer = Trainer(...)
trainer.add_callback(MyCallback)
<span class="hljs-comment"># Alternatively, we can pass an instance of the callback class</span>
trainer.add_callback(MyCallback())`}}),Yt=new $n({}),Xt=new $({props:{name:"class transformers.TrainerState",anchor:"transformers.TrainerState",parameters:[{name:"epoch",val:": typing.Optional[float] = None"},{name:"global_step",val:": int = 0"},{name:"max_steps",val:": int = 0"},{name:"num_train_epochs",val:": int = 0"},{name:"total_flos",val:": float = 0"},{name:"log_history",val:": typing.List[typing.Dict[str, float]] = None"},{name:"best_metric",val:": typing.Optional[float] = None"},{name:"best_model_checkpoint",val:": typing.Optional[str] = None"},{name:"is_local_process_zero",val:": bool = True"},{name:"is_world_process_zero",val:": bool = True"},{name:"is_hyper_param_search",val:": bool = False"},{name:"trial_name",val:": str = None"},{name:"trial_params",val:": typing.Dict[str, typing.Union[str, float, int, bool]] = None"}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L35",parametersDescription:[{anchor:"transformers.TrainerState.epoch",description:`<strong>epoch</strong> (<code>float</code>, <em>optional</em>) &#x2014;
Only set during training, will represent the epoch the training is at (the decimal part being the
percentage of the current epoch completed).`,name:"epoch"},{anchor:"transformers.TrainerState.global_step",description:`<strong>global_step</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
During training, represents the number of update steps completed.`,name:"global_step"},{anchor:"transformers.TrainerState.max_steps",description:`<strong>max_steps</strong> (<code>int</code>, <em>optional</em>, defaults to 0) &#x2014;
The number of update steps to do during the current training.`,name:"max_steps"},{anchor:"transformers.TrainerState.total_flos",description:`<strong>total_flos</strong> (<code>float</code>, <em>optional</em>, defaults to 0) &#x2014;
The total number of floating operations done by the model since the beginning of training (stored as floats
to avoid overflow).`,name:"total_flos"},{anchor:"transformers.TrainerState.log_history",description:`<strong>log_history</strong> (<code>List[Dict[str, float]]</code>, <em>optional</em>) &#x2014;
The list of logs done since the beginning of training.`,name:"log_history"},{anchor:"transformers.TrainerState.best_metric",description:`<strong>best_metric</strong> (<code>float</code>, <em>optional</em>) &#x2014;
When tracking the best model, the value of the best metric encountered so far.`,name:"best_metric"},{anchor:"transformers.TrainerState.best_model_checkpoint",description:`<strong>best_model_checkpoint</strong> (<code>str</code>, <em>optional</em>) &#x2014;
When tracking the best model, the value of the name of the checkpoint for the best model encountered so
far.`,name:"best_model_checkpoint"},{anchor:"transformers.TrainerState.is_local_process_zero",description:`<strong>is_local_process_zero</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not this process is the local (e.g., on one machine if training in a distributed fashion on
several machines) main process.`,name:"is_local_process_zero"},{anchor:"transformers.TrainerState.is_world_process_zero",description:`<strong>is_world_process_zero</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether or not this process is the global main process (when training in a distributed fashion on several
machines, this is only going to be <code>True</code> for one process).`,name:"is_world_process_zero"},{anchor:"transformers.TrainerState.is_hyper_param_search",description:`<strong>is_hyper_param_search</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether we are in the process of a hyper parameter search using Trainer.hyperparameter_search. This will
impact the way data will be logged in TensorBoard.`,name:"is_hyper_param_search"}]}}),qe=new Wd({props:{$$slots:{default:[zd]},$$scope:{ctx:nr}}}),Kt=new $({props:{name:"load_from_json",anchor:"transformers.TrainerState.load_from_json",parameters:[{name:"json_path",val:": str"}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L101"}}),Zt=new $({props:{name:"save_to_json",anchor:"transformers.TrainerState.save_to_json",parameters:[{name:"json_path",val:": str"}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L95"}}),ta=new $n({}),aa=new $({props:{name:"class transformers.TrainerControl",anchor:"transformers.TrainerControl",parameters:[{name:"should_training_stop",val:": bool = False"},{name:"should_epoch_stop",val:": bool = False"},{name:"should_save",val:": bool = False"},{name:"should_evaluate",val:": bool = False"},{name:"should_log",val:": bool = False"}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/trainer_callback.py#L110",parametersDescription:[{anchor:"transformers.TrainerControl.should_training_stop",description:`<strong>should_training_stop</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the training should be interrupted.</p>
<p>If <code>True</code>, this variable will not be set back to <code>False</code>. The training will just stop.`,name:"should_training_stop"},{anchor:"transformers.TrainerControl.should_epoch_stop",description:`<strong>should_epoch_stop</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the current epoch should be interrupted.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next epoch.`,name:"should_epoch_stop"},{anchor:"transformers.TrainerControl.should_save",description:`<strong>should_save</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the model should be saved at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_save"},{anchor:"transformers.TrainerControl.should_evaluate",description:`<strong>should_evaluate</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the model should be evaluated at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_evaluate"},{anchor:"transformers.TrainerControl.should_log",description:`<strong>should_log</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>False</code>) &#x2014;
Whether or not the logs should be reported at this step.</p>
<p>If <code>True</code>, this variable will be set back to <code>False</code> at the beginning of the next step.`,name:"should_log"}]}}),{c(){w=s("meta"),Y=c(),A=s("h1"),S=s("a"),Z=s("span"),_(M.$$.fragment),Qe=c(),ee=s("span"),te=r("Callbacks"),x=c(),q=s("p"),sa=r(`Callbacks are objects that can customize the behavior of the training loop in the PyTorch
`),oa=s("a"),Fs=r("Trainer"),js=r(` (this feature is not yet implemented in TensorFlow) that can inspect the training loop
state (for progress reporting, logging on TensorBoard or other ML platforms\u2026) and take decisions (like early
stopping).`),Cn=c(),j=s("p"),Ns=r("Callbacks are \u201Cread only\u201D pieces of code, apart from the "),la=s("a"),Ws=r("TrainerControl"),zs=r(` object they return, they
cannot change anything in the training loop. For customizations that require changes in the training loop, you should
subclass `),ia=s("a"),Bs=r("Trainer"),Vs=r(" and override the methods you need (see "),ca=s("a"),qs=r("trainer"),Rs=r(" for examples)."),wn=c(),Ee=s("p"),Hs=r("By default a "),fa=s("a"),Us=r("Trainer"),Gs=r(" will use the following callbacks:"),yn=c(),D=s("ul"),ha=s("li"),ma=s("a"),Js=r("DefaultFlowCallback"),Ys=r(" which handles the default behavior for logging, saving and evaluation."),Xs=c(),X=s("li"),da=s("a"),Ks=r("PrinterCallback"),Qs=r(" or "),pa=s("a"),Zs=r("ProgressCallback"),eo=r(` to display progress and print the
logs (the first one is used if you deactivate tqdm through the `),ga=s("a"),to=r("TrainingArguments"),ao=r(`, otherwise
it\u2019s the second one).`),ro=c(),_a=s("li"),ua=s("a"),no=r("TensorBoardCallback"),so=r(` if tensorboard is accessible (either through PyTorch >= 1.4
or tensorboardX).`),oo=c(),ke=s("li"),va=s("a"),lo=r("WandbCallback"),io=r(" if "),Ze=s("a"),co=r("wandb"),fo=r(" is installed."),ho=c(),Te=s("li"),ba=s("a"),mo=r("CometCallback"),po=r(" if "),et=s("a"),go=r("comet_ml"),_o=r(" is installed."),uo=c(),$e=s("li"),Ea=s("a"),vo=r("MLflowCallback"),bo=r(" if "),tt=s("a"),Eo=r("mlflow"),ko=r(" is installed."),To=c(),Ce=s("li"),ka=s("a"),$o=r("AzureMLCallback"),Co=r(" if "),at=s("a"),wo=r("azureml-sdk"),yo=r(` is
installed.`),An=c(),L=s("p"),Ao=r("The main class that implements callbacks is "),Ta=s("a"),Do=r("TrainerCallback"),Lo=r(`. It gets the
`),$a=s("a"),So=r("TrainingArguments"),Po=r(" used to instantiate the "),Ca=s("a"),Oo=r("Trainer"),Io=r(`, can access that
Trainer\u2019s internal state via `),wa=s("a"),Mo=r("TrainerState"),xo=r(`, and can take some actions on the training loop via
`),ya=s("a"),Fo=r("TrainerControl"),jo=r("."),Dn=c(),ae=s("h2"),we=s("a"),sr=s("span"),_(rt.$$.fragment),No=c(),or=s("span"),Wo=r("Available Callbacks"),Ln=c(),ye=s("p"),zo=r("Here is the list of the available "),Aa=s("a"),Bo=r("TrainerCallback"),Vo=r(" in the library:"),Sn=c(),R=s("div"),_(nt.$$.fragment),qo=c(),re=s("p"),Ro=r("A "),Da=s("a"),Ho=r("TrainerCallback"),Uo=r(" that sends the logs to "),st=s("a"),Go=r("Comet ML"),Jo=r("."),Yo=c(),N=s("div"),_(ot.$$.fragment),Xo=c(),lr=s("p"),Ko=r("Setup the optional Comet.ml integration."),Qo=c(),C=s("p"),Zo=r(`Environment:
COMET_MODE (`),ir=s("code"),el=r("str"),tl=r(", "),cr=s("em"),al=r("optional"),rl=r(`):
Whether to create an online, offline experiment or disable Comet logging. Can be \u201COFFLINE\u201D, \u201CONLINE\u201D,
or \u201CDISABLED\u201D. Defaults to \u201CONLINE\u201D.
COMET_PROJECT_NAME (`),fr=s("code"),nl=r("str"),sl=r(", "),hr=s("em"),ol=r("optional"),ll=r(`):
Comet project name for experiments
COMET_OFFLINE_DIRECTORY (`),mr=s("code"),il=r("str"),cl=r(", "),dr=s("em"),fl=r("optional"),hl=r(`):
Folder to use for saving offline experiments when `),pr=s("code"),ml=r("COMET_MODE"),dl=r(` is \u201COFFLINE\u201D
COMET_LOG_ASSETS (`),gr=s("code"),pl=r("str"),gl=r(", "),_r=s("em"),_l=r("optional"),ul=r(`):
Whether or not to log training assets (tf event logs, checkpoints, etc), to Comet. Can be \u201CTRUE\u201D, or
\u201CFALSE\u201D. Defaults to \u201CTRUE\u201D.`),vl=c(),lt=s("p"),bl=r(`For a number of configurable items in the environment, see
`),it=s("a"),El=r("here"),kl=r("."),Pn=c(),ne=s("div"),_(ct.$$.fragment),Tl=c(),ft=s("p"),$l=r("A "),La=s("a"),Cl=r("TrainerCallback"),wl=r(" that handles the default flow of the training loop for logs, evaluation and checkpoints."),On=c(),se=s("div"),_(ht.$$.fragment),yl=c(),mt=s("p"),Al=r("A bare "),Sa=s("a"),Dl=r("TrainerCallback"),Ll=r(" that just prints the logs."),In=c(),oe=s("div"),_(dt.$$.fragment),Sl=c(),pt=s("p"),Pl=r("A "),Pa=s("a"),Ol=r("TrainerCallback"),Il=r(" that displays the progress of training or evaluation."),Mn=c(),H=s("div"),_(gt.$$.fragment),Ml=c(),_t=s("p"),xl=r("A "),Oa=s("a"),Fl=r("TrainerCallback"),jl=r(" that handles early stopping."),Nl=c(),U=s("p"),Wl=r("This callback depends on "),Ia=s("a"),zl=r("TrainingArguments"),Bl=r(" argument "),ur=s("em"),Vl=r("load_best_model_at_end"),ql=r(` functionality to set best_metric
in `),Ma=s("a"),Rl=r("TrainerState"),Hl=r("."),xn=c(),le=s("div"),_(ut.$$.fragment),Ul=c(),ie=s("p"),Gl=r("A "),xa=s("a"),Jl=r("TrainerCallback"),Yl=r(" that sends the logs to "),vt=s("a"),Xl=r("TensorBoard"),Kl=r("."),Fn=c(),G=s("div"),_(bt.$$.fragment),Ql=c(),ce=s("p"),Zl=r("A "),Fa=s("a"),ei=r("TrainerCallback"),ti=r(" that sends the logs to "),Et=s("a"),ai=r("Weight and Biases"),ri=r("."),ni=c(),W=s("div"),_(kt.$$.fragment),si=c(),Tt=s("p"),oi=r("Setup the optional Weights & Biases ("),vr=s("em"),li=r("wandb"),ii=r(") integration."),ci=c(),$t=s("p"),fi=r(`One can subclass and override this method to customize the setup if needed. Find more information
`),Ct=s("a"),hi=r("here"),mi=r(`. You can also override the following environment
variables:`),di=c(),d=s("p"),pi=r(`Environment:
WANDB_LOG_MODEL (`),br=s("code"),gi=r("bool"),_i=r(", "),Er=s("em"),ui=r("optional"),vi=r(", defaults to "),kr=s("code"),bi=r("False"),Ei=r(`):
Whether or not to log model as artifact at the end of training. Use along with
`),Tr=s("em"),ki=r("TrainingArguments.load_best_model_at_end"),Ti=r(` to upload best model.
WANDB_WATCH (`),$r=s("code"),$i=r("str"),Ci=r(", "),Cr=s("em"),wi=r("optional"),yi=r(" defaults to "),wr=s("code"),Ai=r('"gradients"'),Di=r(`):
Can be `),yr=s("code"),Li=r('"gradients"'),Si=r(", "),Ar=s("code"),Pi=r('"all"'),Oi=r(" or "),Dr=s("code"),Ii=r('"false"'),Mi=r(". Set to "),Lr=s("code"),xi=r('"false"'),Fi=r(" to disable gradient logging or "),Sr=s("code"),ji=r('"all"'),Ni=r(` to
log gradients and parameters.
WANDB_PROJECT (`),Pr=s("code"),Wi=r("str"),zi=r(", "),Or=s("em"),Bi=r("optional"),Vi=r(", defaults to "),Ir=s("code"),qi=r('"huggingface"'),Ri=r(`):
Set this to a custom string to store results in a different project.
WANDB_DISABLED (`),Mr=s("code"),Hi=r("bool"),Ui=r(", "),xr=s("em"),Gi=r("optional"),Ji=r(", defaults to "),Fr=s("code"),Yi=r("False"),Xi=r(`):
Whether or not to disable wandb entirely. Set `),jr=s("em"),Ki=r("WANDB_DISABLED=true"),Qi=r(" to disable."),jn=c(),J=s("div"),_(wt.$$.fragment),Zi=c(),fe=s("p"),ec=r("A "),ja=s("a"),tc=r("TrainerCallback"),ac=r(" that sends the logs to "),yt=s("a"),rc=r("MLflow"),nc=r("."),sc=c(),z=s("div"),_(At.$$.fragment),oc=c(),Nr=s("p"),lc=r("Setup the optional MLflow integration."),ic=c(),he=s("p"),cc=r(`Environment:
HF_MLFLOW_LOG_ARTIFACTS (`),Wr=s("code"),fc=r("str"),hc=r(", "),zr=s("em"),mc=r("optional"),dc=r(`):
Whether to use MLflow .log_artifact() facility to log artifacts.`),pc=c(),F=s("p"),gc=r("This only makes sense if logging to a remote server, e.g. s3 or GCS. If set to "),Br=s("code"),_c=r("True"),uc=r(" or "),Vr=s("em"),vc=r("1"),bc=r(`, will copy
whatever is in `),Na=s("a"),Ec=r("TrainingArguments"),kc=r("\u2019s "),qr=s("code"),Tc=r("output_dir"),$c=r(` to the local or remote artifact storage. Using it
without a remote storage will just copy the files to your artifact location.`),Nn=c(),me=s("div"),_(Dt.$$.fragment),Cc=c(),de=s("p"),wc=r("A "),Wa=s("a"),yc=r("TrainerCallback"),Ac=r(" that sends the logs to "),Lt=s("a"),Dc=r("AzureML"),Lc=r("."),Wn=c(),pe=s("h2"),Ae=s("a"),Rr=s("span"),_(St.$$.fragment),Sc=c(),Hr=s("span"),Pc=r("TrainerCallback"),zn=c(),p=s("div"),_(Pt.$$.fragment),Oc=c(),Ur=s("p"),Ic=r(`A class for objects that will inspect the state of the training loop at some events and take some decisions. At
each of those events the following arguments are available:`),Mc=c(),Ot=s("p"),xc=r("The "),Gr=s("code"),Fc=r("control"),jc=r(` object is the only one that can be changed by the callback, in which case the event that changes it
should return the modified version.`),Nc=c(),P=s("p"),Wc=r("The argument "),Jr=s("code"),zc=r("args"),Bc=r(", "),Yr=s("code"),Vc=r("state"),qc=r(" and "),Xr=s("code"),Rc=r("control"),Hc=r(" are positionals for all events, all the others are grouped in "),Kr=s("code"),Uc=r("kwargs"),Gc=r(`.
You can unpack the ones you need in the signature of the event using them. As an example, see the code of the
simple `),Qr=s("code"),Jc=r("PrinterCallback"),Yc=r("."),Xc=c(),Zr=s("p"),Kc=r("Example:"),Qc=c(),_(It.$$.fragment),Zc=c(),De=s("div"),_(Mt.$$.fragment),ef=c(),en=s("p"),tf=r("Event called at the beginning of an epoch."),af=c(),Le=s("div"),_(xt.$$.fragment),rf=c(),tn=s("p"),nf=r("Event called at the end of an epoch."),sf=c(),Se=s("div"),_(Ft.$$.fragment),of=c(),an=s("p"),lf=r("Event called after an evaluation phase."),cf=c(),Pe=s("div"),_(jt.$$.fragment),ff=c(),Nt=s("p"),hf=r("Event called at the end of the initialization of the "),za=s("a"),mf=r("Trainer"),df=r("."),pf=c(),Oe=s("div"),_(Wt.$$.fragment),gf=c(),rn=s("p"),_f=r("Event called after logging the last logs."),uf=c(),Ie=s("div"),_(zt.$$.fragment),vf=c(),nn=s("p"),bf=r("Event called after a prediction step."),Ef=c(),Me=s("div"),_(Bt.$$.fragment),kf=c(),sn=s("p"),Tf=r("Event called after a checkpoint save."),$f=c(),xe=s("div"),_(Vt.$$.fragment),Cf=c(),on=s("p"),wf=r(`Event called at the beginning of a training step. If using gradient accumulation, one training step might take
several inputs.`),yf=c(),Fe=s("div"),_(qt.$$.fragment),Af=c(),ln=s("p"),Df=r(`Event called at the end of a training step. If using gradient accumulation, one training step might take
several inputs.`),Lf=c(),je=s("div"),_(Rt.$$.fragment),Sf=c(),cn=s("p"),Pf=r("Event called at the end of an substep during gradient accumulation."),Of=c(),Ne=s("div"),_(Ht.$$.fragment),If=c(),fn=s("p"),Mf=r("Event called at the beginning of training."),xf=c(),We=s("div"),_(Ut.$$.fragment),Ff=c(),hn=s("p"),jf=r("Event called at the end of training."),Bn=c(),ze=s("p"),Nf=r("Here is an example of how to register a custom callback with the PyTorch "),Ba=s("a"),Wf=r("Trainer"),zf=r(":"),Vn=c(),_(Gt.$$.fragment),qn=c(),Be=s("p"),Bf=r("Another way to register a callback is to call "),mn=s("code"),Vf=r("trainer.add_callback()"),qf=r(" as follows:"),Rn=c(),_(Jt.$$.fragment),Hn=c(),ge=s("h2"),Ve=s("a"),dn=s("span"),_(Yt.$$.fragment),Rf=c(),pn=s("span"),Hf=r("TrainerState"),Un=c(),O=s("div"),_(Xt.$$.fragment),Uf=c(),_e=s("p"),Gf=r("A class containing the "),Va=s("a"),Jf=r("Trainer"),Yf=r(` inner state that will be saved along the model and optimizer when checkpointing
and passed to the `),qa=s("a"),Xf=r("TrainerCallback"),Kf=r("."),Qf=c(),_(qe.$$.fragment),Zf=c(),Re=s("div"),_(Kt.$$.fragment),eh=c(),Qt=s("p"),th=r("Create an instance from the content of "),gn=s("code"),ah=r("json_path"),rh=r("."),nh=c(),He=s("div"),_(Zt.$$.fragment),sh=c(),ea=s("p"),oh=r("Save the content of this instance in JSON format inside "),_n=s("code"),lh=r("json_path"),ih=r("."),Gn=c(),ue=s("h2"),Ue=s("a"),un=s("span"),_(ta.$$.fragment),ch=c(),vn=s("span"),fh=r("TrainerControl"),Jn=c(),ve=s("div"),_(aa.$$.fragment),hh=c(),be=s("p"),mh=r("A class that handles the "),Ra=s("a"),dh=r("Trainer"),ph=r(" control flow. This class is used by the "),Ha=s("a"),gh=r("TrainerCallback"),_h=r(` to activate some
switches in the training loop.`),this.h()},l(a){const h=Nd('[data-svelte="svelte-1phssyn"]',document.head);w=o(h,"META",{name:!0,content:!0}),h.forEach(t),Y=f(a),A=o(a,"H1",{class:!0});var ra=l(A);S=o(ra,"A",{id:!0,class:!0,href:!0});var Eh=l(S);Z=o(Eh,"SPAN",{});var kh=l(Z);u(M.$$.fragment,kh),kh.forEach(t),Eh.forEach(t),Qe=f(ra),ee=o(ra,"SPAN",{});var Th=l(ee);te=n(Th,"Callbacks"),Th.forEach(t),ra.forEach(t),x=f(a),q=o(a,"P",{});var Xn=l(q);sa=n(Xn,`Callbacks are objects that can customize the behavior of the training loop in the PyTorch
`),oa=o(Xn,"A",{href:!0});var $h=l(oa);Fs=n($h,"Trainer"),$h.forEach(t),js=n(Xn,` (this feature is not yet implemented in TensorFlow) that can inspect the training loop
state (for progress reporting, logging on TensorBoard or other ML platforms\u2026) and take decisions (like early
stopping).`),Xn.forEach(t),Cn=f(a),j=o(a,"P",{});var Ge=l(j);Ns=n(Ge,"Callbacks are \u201Cread only\u201D pieces of code, apart from the "),la=o(Ge,"A",{href:!0});var Ch=l(la);Ws=n(Ch,"TrainerControl"),Ch.forEach(t),zs=n(Ge,` object they return, they
cannot change anything in the training loop. For customizations that require changes in the training loop, you should
subclass `),ia=o(Ge,"A",{href:!0});var wh=l(ia);Bs=n(wh,"Trainer"),wh.forEach(t),Vs=n(Ge," and override the methods you need (see "),ca=o(Ge,"A",{href:!0});var yh=l(ca);qs=n(yh,"trainer"),yh.forEach(t),Rs=n(Ge," for examples)."),Ge.forEach(t),wn=f(a),Ee=o(a,"P",{});var Kn=l(Ee);Hs=n(Kn,"By default a "),fa=o(Kn,"A",{href:!0});var Ah=l(fa);Us=n(Ah,"Trainer"),Ah.forEach(t),Gs=n(Kn," will use the following callbacks:"),Kn.forEach(t),yn=f(a),D=o(a,"UL",{});var I=l(D);ha=o(I,"LI",{});var uh=l(ha);ma=o(uh,"A",{href:!0});var Dh=l(ma);Js=n(Dh,"DefaultFlowCallback"),Dh.forEach(t),Ys=n(uh," which handles the default behavior for logging, saving and evaluation."),uh.forEach(t),Xs=f(I),X=o(I,"LI",{});var na=l(X);da=o(na,"A",{href:!0});var Lh=l(da);Ks=n(Lh,"PrinterCallback"),Lh.forEach(t),Qs=n(na," or "),pa=o(na,"A",{href:!0});var Sh=l(pa);Zs=n(Sh,"ProgressCallback"),Sh.forEach(t),eo=n(na,` to display progress and print the
logs (the first one is used if you deactivate tqdm through the `),ga=o(na,"A",{href:!0});var Ph=l(ga);to=n(Ph,"TrainingArguments"),Ph.forEach(t),ao=n(na,`, otherwise
it\u2019s the second one).`),na.forEach(t),ro=f(I),_a=o(I,"LI",{});var vh=l(_a);ua=o(vh,"A",{href:!0});var Oh=l(ua);no=n(Oh,"TensorBoardCallback"),Oh.forEach(t),so=n(vh,` if tensorboard is accessible (either through PyTorch >= 1.4
or tensorboardX).`),vh.forEach(t),oo=f(I),ke=o(I,"LI",{});var bn=l(ke);va=o(bn,"A",{href:!0});var Ih=l(va);lo=n(Ih,"WandbCallback"),Ih.forEach(t),io=n(bn," if "),Ze=o(bn,"A",{href:!0,rel:!0});var Mh=l(Ze);co=n(Mh,"wandb"),Mh.forEach(t),fo=n(bn," is installed."),bn.forEach(t),ho=f(I),Te=o(I,"LI",{});var En=l(Te);ba=o(En,"A",{href:!0});var xh=l(ba);mo=n(xh,"CometCallback"),xh.forEach(t),po=n(En," if "),et=o(En,"A",{href:!0,rel:!0});var Fh=l(et);go=n(Fh,"comet_ml"),Fh.forEach(t),_o=n(En," is installed."),En.forEach(t),uo=f(I),$e=o(I,"LI",{});var kn=l($e);Ea=o(kn,"A",{href:!0});var jh=l(Ea);vo=n(jh,"MLflowCallback"),jh.forEach(t),bo=n(kn," if "),tt=o(kn,"A",{href:!0,rel:!0});var Nh=l(tt);Eo=n(Nh,"mlflow"),Nh.forEach(t),ko=n(kn," is installed."),kn.forEach(t),To=f(I),Ce=o(I,"LI",{});var Tn=l(Ce);ka=o(Tn,"A",{href:!0});var Wh=l(ka);$o=n(Wh,"AzureMLCallback"),Wh.forEach(t),Co=n(Tn," if "),at=o(Tn,"A",{href:!0,rel:!0});var zh=l(at);wo=n(zh,"azureml-sdk"),zh.forEach(t),yo=n(Tn,` is
installed.`),Tn.forEach(t),I.forEach(t),An=f(a),L=o(a,"P",{});var B=l(L);Ao=n(B,"The main class that implements callbacks is "),Ta=o(B,"A",{href:!0});var Bh=l(Ta);Do=n(Bh,"TrainerCallback"),Bh.forEach(t),Lo=n(B,`. It gets the
`),$a=o(B,"A",{href:!0});var Vh=l($a);So=n(Vh,"TrainingArguments"),Vh.forEach(t),Po=n(B," used to instantiate the "),Ca=o(B,"A",{href:!0});var qh=l(Ca);Oo=n(qh,"Trainer"),qh.forEach(t),Io=n(B,`, can access that
Trainer\u2019s internal state via `),wa=o(B,"A",{href:!0});var Rh=l(wa);Mo=n(Rh,"TrainerState"),Rh.forEach(t),xo=n(B,`, and can take some actions on the training loop via
`),ya=o(B,"A",{href:!0});var Hh=l(ya);Fo=n(Hh,"TrainerControl"),Hh.forEach(t),jo=n(B,"."),B.forEach(t),Dn=f(a),ae=o(a,"H2",{class:!0});var Qn=l(ae);we=o(Qn,"A",{id:!0,class:!0,href:!0});var Uh=l(we);sr=o(Uh,"SPAN",{});var Gh=l(sr);u(rt.$$.fragment,Gh),Gh.forEach(t),Uh.forEach(t),No=f(Qn),or=o(Qn,"SPAN",{});var Jh=l(or);Wo=n(Jh,"Available Callbacks"),Jh.forEach(t),Qn.forEach(t),Ln=f(a),ye=o(a,"P",{});var Zn=l(ye);zo=n(Zn,"Here is the list of the available "),Aa=o(Zn,"A",{href:!0});var Yh=l(Aa);Bo=n(Yh,"TrainerCallback"),Yh.forEach(t),Vo=n(Zn," in the library:"),Zn.forEach(t),Sn=f(a),R=o(a,"DIV",{class:!0});var Ua=l(R);u(nt.$$.fragment,Ua),qo=f(Ua),re=o(Ua,"P",{});var Ga=l(re);Ro=n(Ga,"A "),Da=o(Ga,"A",{href:!0});var Xh=l(Da);Ho=n(Xh,"TrainerCallback"),Xh.forEach(t),Uo=n(Ga," that sends the logs to "),st=o(Ga,"A",{href:!0,rel:!0});var Kh=l(st);Go=n(Kh,"Comet ML"),Kh.forEach(t),Jo=n(Ga,"."),Ga.forEach(t),Yo=f(Ua),N=o(Ua,"DIV",{class:!0});var Je=l(N);u(ot.$$.fragment,Je),Xo=f(Je),lr=o(Je,"P",{});var Qh=l(lr);Ko=n(Qh,"Setup the optional Comet.ml integration."),Qh.forEach(t),Qo=f(Je),C=o(Je,"P",{});var y=l(C);Zo=n(y,`Environment:
COMET_MODE (`),ir=o(y,"CODE",{});var Zh=l(ir);el=n(Zh,"str"),Zh.forEach(t),tl=n(y,", "),cr=o(y,"EM",{});var em=l(cr);al=n(em,"optional"),em.forEach(t),rl=n(y,`):
Whether to create an online, offline experiment or disable Comet logging. Can be \u201COFFLINE\u201D, \u201CONLINE\u201D,
or \u201CDISABLED\u201D. Defaults to \u201CONLINE\u201D.
COMET_PROJECT_NAME (`),fr=o(y,"CODE",{});var tm=l(fr);nl=n(tm,"str"),tm.forEach(t),sl=n(y,", "),hr=o(y,"EM",{});var am=l(hr);ol=n(am,"optional"),am.forEach(t),ll=n(y,`):
Comet project name for experiments
COMET_OFFLINE_DIRECTORY (`),mr=o(y,"CODE",{});var rm=l(mr);il=n(rm,"str"),rm.forEach(t),cl=n(y,", "),dr=o(y,"EM",{});var nm=l(dr);fl=n(nm,"optional"),nm.forEach(t),hl=n(y,`):
Folder to use for saving offline experiments when `),pr=o(y,"CODE",{});var sm=l(pr);ml=n(sm,"COMET_MODE"),sm.forEach(t),dl=n(y,` is \u201COFFLINE\u201D
COMET_LOG_ASSETS (`),gr=o(y,"CODE",{});var om=l(gr);pl=n(om,"str"),om.forEach(t),gl=n(y,", "),_r=o(y,"EM",{});var lm=l(_r);_l=n(lm,"optional"),lm.forEach(t),ul=n(y,`):
Whether or not to log training assets (tf event logs, checkpoints, etc), to Comet. Can be \u201CTRUE\u201D, or
\u201CFALSE\u201D. Defaults to \u201CTRUE\u201D.`),y.forEach(t),vl=f(Je),lt=o(Je,"P",{});var es=l(lt);bl=n(es,`For a number of configurable items in the environment, see
`),it=o(es,"A",{href:!0,rel:!0});var im=l(it);El=n(im,"here"),im.forEach(t),kl=n(es,"."),es.forEach(t),Je.forEach(t),Ua.forEach(t),Pn=f(a),ne=o(a,"DIV",{class:!0});var ts=l(ne);u(ct.$$.fragment,ts),Tl=f(ts),ft=o(ts,"P",{});var as=l(ft);$l=n(as,"A "),La=o(as,"A",{href:!0});var cm=l(La);Cl=n(cm,"TrainerCallback"),cm.forEach(t),wl=n(as," that handles the default flow of the training loop for logs, evaluation and checkpoints."),as.forEach(t),ts.forEach(t),On=f(a),se=o(a,"DIV",{class:!0});var rs=l(se);u(ht.$$.fragment,rs),yl=f(rs),mt=o(rs,"P",{});var ns=l(mt);Al=n(ns,"A bare "),Sa=o(ns,"A",{href:!0});var fm=l(Sa);Dl=n(fm,"TrainerCallback"),fm.forEach(t),Ll=n(ns," that just prints the logs."),ns.forEach(t),rs.forEach(t),In=f(a),oe=o(a,"DIV",{class:!0});var ss=l(oe);u(dt.$$.fragment,ss),Sl=f(ss),pt=o(ss,"P",{});var os=l(pt);Pl=n(os,"A "),Pa=o(os,"A",{href:!0});var hm=l(Pa);Ol=n(hm,"TrainerCallback"),hm.forEach(t),Il=n(os," that displays the progress of training or evaluation."),os.forEach(t),ss.forEach(t),Mn=f(a),H=o(a,"DIV",{class:!0});var Ja=l(H);u(gt.$$.fragment,Ja),Ml=f(Ja),_t=o(Ja,"P",{});var ls=l(_t);xl=n(ls,"A "),Oa=o(ls,"A",{href:!0});var mm=l(Oa);Fl=n(mm,"TrainerCallback"),mm.forEach(t),jl=n(ls," that handles early stopping."),ls.forEach(t),Nl=f(Ja),U=o(Ja,"P",{});var Ye=l(U);Wl=n(Ye,"This callback depends on "),Ia=o(Ye,"A",{href:!0});var dm=l(Ia);zl=n(dm,"TrainingArguments"),dm.forEach(t),Bl=n(Ye," argument "),ur=o(Ye,"EM",{});var pm=l(ur);Vl=n(pm,"load_best_model_at_end"),pm.forEach(t),ql=n(Ye,` functionality to set best_metric
in `),Ma=o(Ye,"A",{href:!0});var gm=l(Ma);Rl=n(gm,"TrainerState"),gm.forEach(t),Hl=n(Ye,"."),Ye.forEach(t),Ja.forEach(t),xn=f(a),le=o(a,"DIV",{class:!0});var is=l(le);u(ut.$$.fragment,is),Ul=f(is),ie=o(is,"P",{});var Ya=l(ie);Gl=n(Ya,"A "),xa=o(Ya,"A",{href:!0});var _m=l(xa);Jl=n(_m,"TrainerCallback"),_m.forEach(t),Yl=n(Ya," that sends the logs to "),vt=o(Ya,"A",{href:!0,rel:!0});var um=l(vt);Xl=n(um,"TensorBoard"),um.forEach(t),Kl=n(Ya,"."),Ya.forEach(t),is.forEach(t),Fn=f(a),G=o(a,"DIV",{class:!0});var Xa=l(G);u(bt.$$.fragment,Xa),Ql=f(Xa),ce=o(Xa,"P",{});var Ka=l(ce);Zl=n(Ka,"A "),Fa=o(Ka,"A",{href:!0});var vm=l(Fa);ei=n(vm,"TrainerCallback"),vm.forEach(t),ti=n(Ka," that sends the logs to "),Et=o(Ka,"A",{href:!0,rel:!0});var bm=l(Et);ai=n(bm,"Weight and Biases"),bm.forEach(t),ri=n(Ka,"."),Ka.forEach(t),ni=f(Xa),W=o(Xa,"DIV",{class:!0});var Xe=l(W);u(kt.$$.fragment,Xe),si=f(Xe),Tt=o(Xe,"P",{});var cs=l(Tt);oi=n(cs,"Setup the optional Weights & Biases ("),vr=o(cs,"EM",{});var Em=l(vr);li=n(Em,"wandb"),Em.forEach(t),ii=n(cs,") integration."),cs.forEach(t),ci=f(Xe),$t=o(Xe,"P",{});var fs=l($t);fi=n(fs,`One can subclass and override this method to customize the setup if needed. Find more information
`),Ct=o(fs,"A",{href:!0,rel:!0});var km=l(Ct);hi=n(km,"here"),km.forEach(t),mi=n(fs,`. You can also override the following environment
variables:`),fs.forEach(t),di=f(Xe),d=o(Xe,"P",{});var g=l(d);pi=n(g,`Environment:
WANDB_LOG_MODEL (`),br=o(g,"CODE",{});var Tm=l(br);gi=n(Tm,"bool"),Tm.forEach(t),_i=n(g,", "),Er=o(g,"EM",{});var $m=l(Er);ui=n($m,"optional"),$m.forEach(t),vi=n(g,", defaults to "),kr=o(g,"CODE",{});var Cm=l(kr);bi=n(Cm,"False"),Cm.forEach(t),Ei=n(g,`):
Whether or not to log model as artifact at the end of training. Use along with
`),Tr=o(g,"EM",{});var wm=l(Tr);ki=n(wm,"TrainingArguments.load_best_model_at_end"),wm.forEach(t),Ti=n(g,` to upload best model.
WANDB_WATCH (`),$r=o(g,"CODE",{});var ym=l($r);$i=n(ym,"str"),ym.forEach(t),Ci=n(g,", "),Cr=o(g,"EM",{});var Am=l(Cr);wi=n(Am,"optional"),Am.forEach(t),yi=n(g," defaults to "),wr=o(g,"CODE",{});var Dm=l(wr);Ai=n(Dm,'"gradients"'),Dm.forEach(t),Di=n(g,`):
Can be `),yr=o(g,"CODE",{});var Lm=l(yr);Li=n(Lm,'"gradients"'),Lm.forEach(t),Si=n(g,", "),Ar=o(g,"CODE",{});var Sm=l(Ar);Pi=n(Sm,'"all"'),Sm.forEach(t),Oi=n(g," or "),Dr=o(g,"CODE",{});var Pm=l(Dr);Ii=n(Pm,'"false"'),Pm.forEach(t),Mi=n(g,". Set to "),Lr=o(g,"CODE",{});var Om=l(Lr);xi=n(Om,'"false"'),Om.forEach(t),Fi=n(g," to disable gradient logging or "),Sr=o(g,"CODE",{});var Im=l(Sr);ji=n(Im,'"all"'),Im.forEach(t),Ni=n(g,` to
log gradients and parameters.
WANDB_PROJECT (`),Pr=o(g,"CODE",{});var Mm=l(Pr);Wi=n(Mm,"str"),Mm.forEach(t),zi=n(g,", "),Or=o(g,"EM",{});var xm=l(Or);Bi=n(xm,"optional"),xm.forEach(t),Vi=n(g,", defaults to "),Ir=o(g,"CODE",{});var Fm=l(Ir);qi=n(Fm,'"huggingface"'),Fm.forEach(t),Ri=n(g,`):
Set this to a custom string to store results in a different project.
WANDB_DISABLED (`),Mr=o(g,"CODE",{});var jm=l(Mr);Hi=n(jm,"bool"),jm.forEach(t),Ui=n(g,", "),xr=o(g,"EM",{});var Nm=l(xr);Gi=n(Nm,"optional"),Nm.forEach(t),Ji=n(g,", defaults to "),Fr=o(g,"CODE",{});var Wm=l(Fr);Yi=n(Wm,"False"),Wm.forEach(t),Xi=n(g,`):
Whether or not to disable wandb entirely. Set `),jr=o(g,"EM",{});var zm=l(jr);Ki=n(zm,"WANDB_DISABLED=true"),zm.forEach(t),Qi=n(g," to disable."),g.forEach(t),Xe.forEach(t),Xa.forEach(t),jn=f(a),J=o(a,"DIV",{class:!0});var Qa=l(J);u(wt.$$.fragment,Qa),Zi=f(Qa),fe=o(Qa,"P",{});var Za=l(fe);ec=n(Za,"A "),ja=o(Za,"A",{href:!0});var Bm=l(ja);tc=n(Bm,"TrainerCallback"),Bm.forEach(t),ac=n(Za," that sends the logs to "),yt=o(Za,"A",{href:!0,rel:!0});var Vm=l(yt);rc=n(Vm,"MLflow"),Vm.forEach(t),nc=n(Za,"."),Za.forEach(t),sc=f(Qa),z=o(Qa,"DIV",{class:!0});var Ke=l(z);u(At.$$.fragment,Ke),oc=f(Ke),Nr=o(Ke,"P",{});var qm=l(Nr);lc=n(qm,"Setup the optional MLflow integration."),qm.forEach(t),ic=f(Ke),he=o(Ke,"P",{});var er=l(he);cc=n(er,`Environment:
HF_MLFLOW_LOG_ARTIFACTS (`),Wr=o(er,"CODE",{});var Rm=l(Wr);fc=n(Rm,"str"),Rm.forEach(t),hc=n(er,", "),zr=o(er,"EM",{});var Hm=l(zr);mc=n(Hm,"optional"),Hm.forEach(t),dc=n(er,`):
Whether to use MLflow .log_artifact() facility to log artifacts.`),er.forEach(t),pc=f(Ke),F=o(Ke,"P",{});var K=l(F);gc=n(K,"This only makes sense if logging to a remote server, e.g. s3 or GCS. If set to "),Br=o(K,"CODE",{});var Um=l(Br);_c=n(Um,"True"),Um.forEach(t),uc=n(K," or "),Vr=o(K,"EM",{});var Gm=l(Vr);vc=n(Gm,"1"),Gm.forEach(t),bc=n(K,`, will copy
whatever is in `),Na=o(K,"A",{href:!0});var Jm=l(Na);Ec=n(Jm,"TrainingArguments"),Jm.forEach(t),kc=n(K,"\u2019s "),qr=o(K,"CODE",{});var Ym=l(qr);Tc=n(Ym,"output_dir"),Ym.forEach(t),$c=n(K,` to the local or remote artifact storage. Using it
without a remote storage will just copy the files to your artifact location.`),K.forEach(t),Ke.forEach(t),Qa.forEach(t),Nn=f(a),me=o(a,"DIV",{class:!0});var hs=l(me);u(Dt.$$.fragment,hs),Cc=f(hs),de=o(hs,"P",{});var tr=l(de);wc=n(tr,"A "),Wa=o(tr,"A",{href:!0});var Xm=l(Wa);yc=n(Xm,"TrainerCallback"),Xm.forEach(t),Ac=n(tr," that sends the logs to "),Lt=o(tr,"A",{href:!0,rel:!0});var Km=l(Lt);Dc=n(Km,"AzureML"),Km.forEach(t),Lc=n(tr,"."),tr.forEach(t),hs.forEach(t),Wn=f(a),pe=o(a,"H2",{class:!0});var ms=l(pe);Ae=o(ms,"A",{id:!0,class:!0,href:!0});var Qm=l(Ae);Rr=o(Qm,"SPAN",{});var Zm=l(Rr);u(St.$$.fragment,Zm),Zm.forEach(t),Qm.forEach(t),Sc=f(ms),Hr=o(ms,"SPAN",{});var ed=l(Hr);Pc=n(ed,"TrainerCallback"),ed.forEach(t),ms.forEach(t),zn=f(a),p=o(a,"DIV",{class:!0});var T=l(p);u(Pt.$$.fragment,T),Oc=f(T),Ur=o(T,"P",{});var td=l(Ur);Ic=n(td,`A class for objects that will inspect the state of the training loop at some events and take some decisions. At
each of those events the following arguments are available:`),td.forEach(t),Mc=f(T),Ot=o(T,"P",{});var ds=l(Ot);xc=n(ds,"The "),Gr=o(ds,"CODE",{});var ad=l(Gr);Fc=n(ad,"control"),ad.forEach(t),jc=n(ds,` object is the only one that can be changed by the callback, in which case the event that changes it
should return the modified version.`),ds.forEach(t),Nc=f(T),P=o(T,"P",{});var V=l(P);Wc=n(V,"The argument "),Jr=o(V,"CODE",{});var rd=l(Jr);zc=n(rd,"args"),rd.forEach(t),Bc=n(V,", "),Yr=o(V,"CODE",{});var nd=l(Yr);Vc=n(nd,"state"),nd.forEach(t),qc=n(V," and "),Xr=o(V,"CODE",{});var sd=l(Xr);Rc=n(sd,"control"),sd.forEach(t),Hc=n(V," are positionals for all events, all the others are grouped in "),Kr=o(V,"CODE",{});var od=l(Kr);Uc=n(od,"kwargs"),od.forEach(t),Gc=n(V,`.
You can unpack the ones you need in the signature of the event using them. As an example, see the code of the
simple `),Qr=o(V,"CODE",{});var ld=l(Qr);Jc=n(ld,"PrinterCallback"),ld.forEach(t),Yc=n(V,"."),V.forEach(t),Xc=f(T),Zr=o(T,"P",{});var id=l(Zr);Kc=n(id,"Example:"),id.forEach(t),Qc=f(T),u(It.$$.fragment,T),Zc=f(T),De=o(T,"DIV",{class:!0});var ps=l(De);u(Mt.$$.fragment,ps),ef=f(ps),en=o(ps,"P",{});var cd=l(en);tf=n(cd,"Event called at the beginning of an epoch."),cd.forEach(t),ps.forEach(t),af=f(T),Le=o(T,"DIV",{class:!0});var gs=l(Le);u(xt.$$.fragment,gs),rf=f(gs),tn=o(gs,"P",{});var fd=l(tn);nf=n(fd,"Event called at the end of an epoch."),fd.forEach(t),gs.forEach(t),sf=f(T),Se=o(T,"DIV",{class:!0});var _s=l(Se);u(Ft.$$.fragment,_s),of=f(_s),an=o(_s,"P",{});var hd=l(an);lf=n(hd,"Event called after an evaluation phase."),hd.forEach(t),_s.forEach(t),cf=f(T),Pe=o(T,"DIV",{class:!0});var us=l(Pe);u(jt.$$.fragment,us),ff=f(us),Nt=o(us,"P",{});var vs=l(Nt);hf=n(vs,"Event called at the end of the initialization of the "),za=o(vs,"A",{href:!0});var md=l(za);mf=n(md,"Trainer"),md.forEach(t),df=n(vs,"."),vs.forEach(t),us.forEach(t),pf=f(T),Oe=o(T,"DIV",{class:!0});var bs=l(Oe);u(Wt.$$.fragment,bs),gf=f(bs),rn=o(bs,"P",{});var dd=l(rn);_f=n(dd,"Event called after logging the last logs."),dd.forEach(t),bs.forEach(t),uf=f(T),Ie=o(T,"DIV",{class:!0});var Es=l(Ie);u(zt.$$.fragment,Es),vf=f(Es),nn=o(Es,"P",{});var pd=l(nn);bf=n(pd,"Event called after a prediction step."),pd.forEach(t),Es.forEach(t),Ef=f(T),Me=o(T,"DIV",{class:!0});var ks=l(Me);u(Bt.$$.fragment,ks),kf=f(ks),sn=o(ks,"P",{});var gd=l(sn);Tf=n(gd,"Event called after a checkpoint save."),gd.forEach(t),ks.forEach(t),$f=f(T),xe=o(T,"DIV",{class:!0});var Ts=l(xe);u(Vt.$$.fragment,Ts),Cf=f(Ts),on=o(Ts,"P",{});var _d=l(on);wf=n(_d,`Event called at the beginning of a training step. If using gradient accumulation, one training step might take
several inputs.`),_d.forEach(t),Ts.forEach(t),yf=f(T),Fe=o(T,"DIV",{class:!0});var $s=l(Fe);u(qt.$$.fragment,$s),Af=f($s),ln=o($s,"P",{});var ud=l(ln);Df=n(ud,`Event called at the end of a training step. If using gradient accumulation, one training step might take
several inputs.`),ud.forEach(t),$s.forEach(t),Lf=f(T),je=o(T,"DIV",{class:!0});var Cs=l(je);u(Rt.$$.fragment,Cs),Sf=f(Cs),cn=o(Cs,"P",{});var vd=l(cn);Pf=n(vd,"Event called at the end of an substep during gradient accumulation."),vd.forEach(t),Cs.forEach(t),Of=f(T),Ne=o(T,"DIV",{class:!0});var ws=l(Ne);u(Ht.$$.fragment,ws),If=f(ws),fn=o(ws,"P",{});var bd=l(fn);Mf=n(bd,"Event called at the beginning of training."),bd.forEach(t),ws.forEach(t),xf=f(T),We=o(T,"DIV",{class:!0});var ys=l(We);u(Ut.$$.fragment,ys),Ff=f(ys),hn=o(ys,"P",{});var Ed=l(hn);jf=n(Ed,"Event called at the end of training."),Ed.forEach(t),ys.forEach(t),T.forEach(t),Bn=f(a),ze=o(a,"P",{});var As=l(ze);Nf=n(As,"Here is an example of how to register a custom callback with the PyTorch "),Ba=o(As,"A",{href:!0});var kd=l(Ba);Wf=n(kd,"Trainer"),kd.forEach(t),zf=n(As,":"),As.forEach(t),Vn=f(a),u(Gt.$$.fragment,a),qn=f(a),Be=o(a,"P",{});var Ds=l(Be);Bf=n(Ds,"Another way to register a callback is to call "),mn=o(Ds,"CODE",{});var Td=l(mn);Vf=n(Td,"trainer.add_callback()"),Td.forEach(t),qf=n(Ds," as follows:"),Ds.forEach(t),Rn=f(a),u(Jt.$$.fragment,a),Hn=f(a),ge=o(a,"H2",{class:!0});var Ls=l(ge);Ve=o(Ls,"A",{id:!0,class:!0,href:!0});var $d=l(Ve);dn=o($d,"SPAN",{});var Cd=l(dn);u(Yt.$$.fragment,Cd),Cd.forEach(t),$d.forEach(t),Rf=f(Ls),pn=o(Ls,"SPAN",{});var wd=l(pn);Hf=n(wd,"TrainerState"),wd.forEach(t),Ls.forEach(t),Un=f(a),O=o(a,"DIV",{class:!0});var Q=l(O);u(Xt.$$.fragment,Q),Uf=f(Q),_e=o(Q,"P",{});var ar=l(_e);Gf=n(ar,"A class containing the "),Va=o(ar,"A",{href:!0});var yd=l(Va);Jf=n(yd,"Trainer"),yd.forEach(t),Yf=n(ar,` inner state that will be saved along the model and optimizer when checkpointing
and passed to the `),qa=o(ar,"A",{href:!0});var Ad=l(qa);Xf=n(Ad,"TrainerCallback"),Ad.forEach(t),Kf=n(ar,"."),ar.forEach(t),Qf=f(Q),u(qe.$$.fragment,Q),Zf=f(Q),Re=o(Q,"DIV",{class:!0});var Ss=l(Re);u(Kt.$$.fragment,Ss),eh=f(Ss),Qt=o(Ss,"P",{});var Ps=l(Qt);th=n(Ps,"Create an instance from the content of "),gn=o(Ps,"CODE",{});var Dd=l(gn);ah=n(Dd,"json_path"),Dd.forEach(t),rh=n(Ps,"."),Ps.forEach(t),Ss.forEach(t),nh=f(Q),He=o(Q,"DIV",{class:!0});var Os=l(He);u(Zt.$$.fragment,Os),sh=f(Os),ea=o(Os,"P",{});var Is=l(ea);oh=n(Is,"Save the content of this instance in JSON format inside "),_n=o(Is,"CODE",{});var Ld=l(_n);lh=n(Ld,"json_path"),Ld.forEach(t),ih=n(Is,"."),Is.forEach(t),Os.forEach(t),Q.forEach(t),Gn=f(a),ue=o(a,"H2",{class:!0});var Ms=l(ue);Ue=o(Ms,"A",{id:!0,class:!0,href:!0});var Sd=l(Ue);un=o(Sd,"SPAN",{});var Pd=l(un);u(ta.$$.fragment,Pd),Pd.forEach(t),Sd.forEach(t),ch=f(Ms),vn=o(Ms,"SPAN",{});var Od=l(vn);fh=n(Od,"TrainerControl"),Od.forEach(t),Ms.forEach(t),Jn=f(a),ve=o(a,"DIV",{class:!0});var xs=l(ve);u(aa.$$.fragment,xs),hh=f(xs),be=o(xs,"P",{});var rr=l(be);mh=n(rr,"A class that handles the "),Ra=o(rr,"A",{href:!0});var Id=l(Ra);dh=n(Id,"Trainer"),Id.forEach(t),ph=n(rr," control flow. This class is used by the "),Ha=o(rr,"A",{href:!0});var Md=l(Ha);gh=n(Md,"TrainerCallback"),Md.forEach(t),_h=n(rr,` to activate some
switches in the training loop.`),rr.forEach(t),xs.forEach(t),this.h()},h(){i(w,"name","hf:doc:metadata"),i(w,"content",JSON.stringify(Vd)),i(S,"id","callbacks"),i(S,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(S,"href","#callbacks"),i(A,"class","relative group"),i(oa,"href","/docs/transformers/pr_15794/en/main_classes/trainer#transformers.Trainer"),i(la,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerControl"),i(ia,"href","/docs/transformers/pr_15794/en/main_classes/trainer#transformers.Trainer"),i(ca,"href","trainer"),i(fa,"href","/docs/transformers/pr_15794/en/main_classes/trainer#transformers.Trainer"),i(ma,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.DefaultFlowCallback"),i(da,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.PrinterCallback"),i(pa,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.ProgressCallback"),i(ga,"href","/docs/transformers/pr_15794/en/main_classes/trainer#transformers.TrainingArguments"),i(ua,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.integrations.TensorBoardCallback"),i(va,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.integrations.WandbCallback"),i(Ze,"href","https://www.wandb.com/"),i(Ze,"rel","nofollow"),i(ba,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.integrations.CometCallback"),i(et,"href","https://www.comet.ml/site/"),i(et,"rel","nofollow"),i(Ea,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.integrations.MLflowCallback"),i(tt,"href","https://www.mlflow.org/"),i(tt,"rel","nofollow"),i(ka,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.integrations.AzureMLCallback"),i(at,"href","https://pypi.org/project/azureml-sdk/"),i(at,"rel","nofollow"),i(Ta,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerCallback"),i($a,"href","/docs/transformers/pr_15794/en/main_classes/trainer#transformers.TrainingArguments"),i(Ca,"href","/docs/transformers/pr_15794/en/main_classes/trainer#transformers.Trainer"),i(wa,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerState"),i(ya,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerControl"),i(we,"id","transformers.integrations.CometCallback"),i(we,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(we,"href","#transformers.integrations.CometCallback"),i(ae,"class","relative group"),i(Aa,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerCallback"),i(Da,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerCallback"),i(st,"href","https://www.comet.ml/site/"),i(st,"rel","nofollow"),i(it,"href","https://www.comet.ml/docs/python-sdk/advanced/#comet-configuration-variables"),i(it,"rel","nofollow"),i(N,"class","docstring"),i(R,"class","docstring"),i(La,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerCallback"),i(ne,"class","docstring"),i(Sa,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerCallback"),i(se,"class","docstring"),i(Pa,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerCallback"),i(oe,"class","docstring"),i(Oa,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerCallback"),i(Ia,"href","/docs/transformers/pr_15794/en/main_classes/trainer#transformers.TrainingArguments"),i(Ma,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerState"),i(H,"class","docstring"),i(xa,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerCallback"),i(vt,"href","https://www.tensorflow.org/tensorboard"),i(vt,"rel","nofollow"),i(le,"class","docstring"),i(Fa,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerCallback"),i(Et,"href","https://www.wandb.com/"),i(Et,"rel","nofollow"),i(Ct,"href","https://docs.wandb.ai/integrations/huggingface"),i(Ct,"rel","nofollow"),i(W,"class","docstring"),i(G,"class","docstring"),i(ja,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerCallback"),i(yt,"href","https://www.mlflow.org/"),i(yt,"rel","nofollow"),i(Na,"href","/docs/transformers/pr_15794/en/main_classes/trainer#transformers.TrainingArguments"),i(z,"class","docstring"),i(J,"class","docstring"),i(Wa,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerCallback"),i(Lt,"href","https://pypi.org/project/azureml-sdk/"),i(Lt,"rel","nofollow"),i(me,"class","docstring"),i(Ae,"id","transformers.TrainerCallback"),i(Ae,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Ae,"href","#transformers.TrainerCallback"),i(pe,"class","relative group"),i(De,"class","docstring"),i(Le,"class","docstring"),i(Se,"class","docstring"),i(za,"href","/docs/transformers/pr_15794/en/main_classes/trainer#transformers.Trainer"),i(Pe,"class","docstring"),i(Oe,"class","docstring"),i(Ie,"class","docstring"),i(Me,"class","docstring"),i(xe,"class","docstring"),i(Fe,"class","docstring"),i(je,"class","docstring"),i(Ne,"class","docstring"),i(We,"class","docstring"),i(p,"class","docstring"),i(Ba,"href","/docs/transformers/pr_15794/en/main_classes/trainer#transformers.Trainer"),i(Ve,"id","transformers.TrainerState"),i(Ve,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Ve,"href","#transformers.TrainerState"),i(ge,"class","relative group"),i(Va,"href","/docs/transformers/pr_15794/en/main_classes/trainer#transformers.Trainer"),i(qa,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerCallback"),i(Re,"class","docstring"),i(He,"class","docstring"),i(O,"class","docstring"),i(Ue,"id","transformers.TrainerControl"),i(Ue,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),i(Ue,"href","#transformers.TrainerControl"),i(ue,"class","relative group"),i(Ra,"href","/docs/transformers/pr_15794/en/main_classes/trainer#transformers.Trainer"),i(Ha,"href","/docs/transformers/pr_15794/en/main_classes/callback#transformers.TrainerCallback"),i(ve,"class","docstring")},m(a,h){e(document.head,w),m(a,Y,h),m(a,A,h),e(A,S),e(S,Z),v(M,Z,null),e(A,Qe),e(A,ee),e(ee,te),m(a,x,h),m(a,q,h),e(q,sa),e(q,oa),e(oa,Fs),e(q,js),m(a,Cn,h),m(a,j,h),e(j,Ns),e(j,la),e(la,Ws),e(j,zs),e(j,ia),e(ia,Bs),e(j,Vs),e(j,ca),e(ca,qs),e(j,Rs),m(a,wn,h),m(a,Ee,h),e(Ee,Hs),e(Ee,fa),e(fa,Us),e(Ee,Gs),m(a,yn,h),m(a,D,h),e(D,ha),e(ha,ma),e(ma,Js),e(ha,Ys),e(D,Xs),e(D,X),e(X,da),e(da,Ks),e(X,Qs),e(X,pa),e(pa,Zs),e(X,eo),e(X,ga),e(ga,to),e(X,ao),e(D,ro),e(D,_a),e(_a,ua),e(ua,no),e(_a,so),e(D,oo),e(D,ke),e(ke,va),e(va,lo),e(ke,io),e(ke,Ze),e(Ze,co),e(ke,fo),e(D,ho),e(D,Te),e(Te,ba),e(ba,mo),e(Te,po),e(Te,et),e(et,go),e(Te,_o),e(D,uo),e(D,$e),e($e,Ea),e(Ea,vo),e($e,bo),e($e,tt),e(tt,Eo),e($e,ko),e(D,To),e(D,Ce),e(Ce,ka),e(ka,$o),e(Ce,Co),e(Ce,at),e(at,wo),e(Ce,yo),m(a,An,h),m(a,L,h),e(L,Ao),e(L,Ta),e(Ta,Do),e(L,Lo),e(L,$a),e($a,So),e(L,Po),e(L,Ca),e(Ca,Oo),e(L,Io),e(L,wa),e(wa,Mo),e(L,xo),e(L,ya),e(ya,Fo),e(L,jo),m(a,Dn,h),m(a,ae,h),e(ae,we),e(we,sr),v(rt,sr,null),e(ae,No),e(ae,or),e(or,Wo),m(a,Ln,h),m(a,ye,h),e(ye,zo),e(ye,Aa),e(Aa,Bo),e(ye,Vo),m(a,Sn,h),m(a,R,h),v(nt,R,null),e(R,qo),e(R,re),e(re,Ro),e(re,Da),e(Da,Ho),e(re,Uo),e(re,st),e(st,Go),e(re,Jo),e(R,Yo),e(R,N),v(ot,N,null),e(N,Xo),e(N,lr),e(lr,Ko),e(N,Qo),e(N,C),e(C,Zo),e(C,ir),e(ir,el),e(C,tl),e(C,cr),e(cr,al),e(C,rl),e(C,fr),e(fr,nl),e(C,sl),e(C,hr),e(hr,ol),e(C,ll),e(C,mr),e(mr,il),e(C,cl),e(C,dr),e(dr,fl),e(C,hl),e(C,pr),e(pr,ml),e(C,dl),e(C,gr),e(gr,pl),e(C,gl),e(C,_r),e(_r,_l),e(C,ul),e(N,vl),e(N,lt),e(lt,bl),e(lt,it),e(it,El),e(lt,kl),m(a,Pn,h),m(a,ne,h),v(ct,ne,null),e(ne,Tl),e(ne,ft),e(ft,$l),e(ft,La),e(La,Cl),e(ft,wl),m(a,On,h),m(a,se,h),v(ht,se,null),e(se,yl),e(se,mt),e(mt,Al),e(mt,Sa),e(Sa,Dl),e(mt,Ll),m(a,In,h),m(a,oe,h),v(dt,oe,null),e(oe,Sl),e(oe,pt),e(pt,Pl),e(pt,Pa),e(Pa,Ol),e(pt,Il),m(a,Mn,h),m(a,H,h),v(gt,H,null),e(H,Ml),e(H,_t),e(_t,xl),e(_t,Oa),e(Oa,Fl),e(_t,jl),e(H,Nl),e(H,U),e(U,Wl),e(U,Ia),e(Ia,zl),e(U,Bl),e(U,ur),e(ur,Vl),e(U,ql),e(U,Ma),e(Ma,Rl),e(U,Hl),m(a,xn,h),m(a,le,h),v(ut,le,null),e(le,Ul),e(le,ie),e(ie,Gl),e(ie,xa),e(xa,Jl),e(ie,Yl),e(ie,vt),e(vt,Xl),e(ie,Kl),m(a,Fn,h),m(a,G,h),v(bt,G,null),e(G,Ql),e(G,ce),e(ce,Zl),e(ce,Fa),e(Fa,ei),e(ce,ti),e(ce,Et),e(Et,ai),e(ce,ri),e(G,ni),e(G,W),v(kt,W,null),e(W,si),e(W,Tt),e(Tt,oi),e(Tt,vr),e(vr,li),e(Tt,ii),e(W,ci),e(W,$t),e($t,fi),e($t,Ct),e(Ct,hi),e($t,mi),e(W,di),e(W,d),e(d,pi),e(d,br),e(br,gi),e(d,_i),e(d,Er),e(Er,ui),e(d,vi),e(d,kr),e(kr,bi),e(d,Ei),e(d,Tr),e(Tr,ki),e(d,Ti),e(d,$r),e($r,$i),e(d,Ci),e(d,Cr),e(Cr,wi),e(d,yi),e(d,wr),e(wr,Ai),e(d,Di),e(d,yr),e(yr,Li),e(d,Si),e(d,Ar),e(Ar,Pi),e(d,Oi),e(d,Dr),e(Dr,Ii),e(d,Mi),e(d,Lr),e(Lr,xi),e(d,Fi),e(d,Sr),e(Sr,ji),e(d,Ni),e(d,Pr),e(Pr,Wi),e(d,zi),e(d,Or),e(Or,Bi),e(d,Vi),e(d,Ir),e(Ir,qi),e(d,Ri),e(d,Mr),e(Mr,Hi),e(d,Ui),e(d,xr),e(xr,Gi),e(d,Ji),e(d,Fr),e(Fr,Yi),e(d,Xi),e(d,jr),e(jr,Ki),e(d,Qi),m(a,jn,h),m(a,J,h),v(wt,J,null),e(J,Zi),e(J,fe),e(fe,ec),e(fe,ja),e(ja,tc),e(fe,ac),e(fe,yt),e(yt,rc),e(fe,nc),e(J,sc),e(J,z),v(At,z,null),e(z,oc),e(z,Nr),e(Nr,lc),e(z,ic),e(z,he),e(he,cc),e(he,Wr),e(Wr,fc),e(he,hc),e(he,zr),e(zr,mc),e(he,dc),e(z,pc),e(z,F),e(F,gc),e(F,Br),e(Br,_c),e(F,uc),e(F,Vr),e(Vr,vc),e(F,bc),e(F,Na),e(Na,Ec),e(F,kc),e(F,qr),e(qr,Tc),e(F,$c),m(a,Nn,h),m(a,me,h),v(Dt,me,null),e(me,Cc),e(me,de),e(de,wc),e(de,Wa),e(Wa,yc),e(de,Ac),e(de,Lt),e(Lt,Dc),e(de,Lc),m(a,Wn,h),m(a,pe,h),e(pe,Ae),e(Ae,Rr),v(St,Rr,null),e(pe,Sc),e(pe,Hr),e(Hr,Pc),m(a,zn,h),m(a,p,h),v(Pt,p,null),e(p,Oc),e(p,Ur),e(Ur,Ic),e(p,Mc),e(p,Ot),e(Ot,xc),e(Ot,Gr),e(Gr,Fc),e(Ot,jc),e(p,Nc),e(p,P),e(P,Wc),e(P,Jr),e(Jr,zc),e(P,Bc),e(P,Yr),e(Yr,Vc),e(P,qc),e(P,Xr),e(Xr,Rc),e(P,Hc),e(P,Kr),e(Kr,Uc),e(P,Gc),e(P,Qr),e(Qr,Jc),e(P,Yc),e(p,Xc),e(p,Zr),e(Zr,Kc),e(p,Qc),v(It,p,null),e(p,Zc),e(p,De),v(Mt,De,null),e(De,ef),e(De,en),e(en,tf),e(p,af),e(p,Le),v(xt,Le,null),e(Le,rf),e(Le,tn),e(tn,nf),e(p,sf),e(p,Se),v(Ft,Se,null),e(Se,of),e(Se,an),e(an,lf),e(p,cf),e(p,Pe),v(jt,Pe,null),e(Pe,ff),e(Pe,Nt),e(Nt,hf),e(Nt,za),e(za,mf),e(Nt,df),e(p,pf),e(p,Oe),v(Wt,Oe,null),e(Oe,gf),e(Oe,rn),e(rn,_f),e(p,uf),e(p,Ie),v(zt,Ie,null),e(Ie,vf),e(Ie,nn),e(nn,bf),e(p,Ef),e(p,Me),v(Bt,Me,null),e(Me,kf),e(Me,sn),e(sn,Tf),e(p,$f),e(p,xe),v(Vt,xe,null),e(xe,Cf),e(xe,on),e(on,wf),e(p,yf),e(p,Fe),v(qt,Fe,null),e(Fe,Af),e(Fe,ln),e(ln,Df),e(p,Lf),e(p,je),v(Rt,je,null),e(je,Sf),e(je,cn),e(cn,Pf),e(p,Of),e(p,Ne),v(Ht,Ne,null),e(Ne,If),e(Ne,fn),e(fn,Mf),e(p,xf),e(p,We),v(Ut,We,null),e(We,Ff),e(We,hn),e(hn,jf),m(a,Bn,h),m(a,ze,h),e(ze,Nf),e(ze,Ba),e(Ba,Wf),e(ze,zf),m(a,Vn,h),v(Gt,a,h),m(a,qn,h),m(a,Be,h),e(Be,Bf),e(Be,mn),e(mn,Vf),e(Be,qf),m(a,Rn,h),v(Jt,a,h),m(a,Hn,h),m(a,ge,h),e(ge,Ve),e(Ve,dn),v(Yt,dn,null),e(ge,Rf),e(ge,pn),e(pn,Hf),m(a,Un,h),m(a,O,h),v(Xt,O,null),e(O,Uf),e(O,_e),e(_e,Gf),e(_e,Va),e(Va,Jf),e(_e,Yf),e(_e,qa),e(qa,Xf),e(_e,Kf),e(O,Qf),v(qe,O,null),e(O,Zf),e(O,Re),v(Kt,Re,null),e(Re,eh),e(Re,Qt),e(Qt,th),e(Qt,gn),e(gn,ah),e(Qt,rh),e(O,nh),e(O,He),v(Zt,He,null),e(He,sh),e(He,ea),e(ea,oh),e(ea,_n),e(_n,lh),e(ea,ih),m(a,Gn,h),m(a,ue,h),e(ue,Ue),e(Ue,un),v(ta,un,null),e(ue,ch),e(ue,vn),e(vn,fh),m(a,Jn,h),m(a,ve,h),v(aa,ve,null),e(ve,hh),e(ve,be),e(be,mh),e(be,Ra),e(Ra,dh),e(be,ph),e(be,Ha),e(Ha,gh),e(be,_h),Yn=!0},p(a,[h]){const ra={};h&2&&(ra.$$scope={dirty:h,ctx:a}),qe.$set(ra)},i(a){Yn||(b(M.$$.fragment,a),b(rt.$$.fragment,a),b(nt.$$.fragment,a),b(ot.$$.fragment,a),b(ct.$$.fragment,a),b(ht.$$.fragment,a),b(dt.$$.fragment,a),b(gt.$$.fragment,a),b(ut.$$.fragment,a),b(bt.$$.fragment,a),b(kt.$$.fragment,a),b(wt.$$.fragment,a),b(At.$$.fragment,a),b(Dt.$$.fragment,a),b(St.$$.fragment,a),b(Pt.$$.fragment,a),b(It.$$.fragment,a),b(Mt.$$.fragment,a),b(xt.$$.fragment,a),b(Ft.$$.fragment,a),b(jt.$$.fragment,a),b(Wt.$$.fragment,a),b(zt.$$.fragment,a),b(Bt.$$.fragment,a),b(Vt.$$.fragment,a),b(qt.$$.fragment,a),b(Rt.$$.fragment,a),b(Ht.$$.fragment,a),b(Ut.$$.fragment,a),b(Gt.$$.fragment,a),b(Jt.$$.fragment,a),b(Yt.$$.fragment,a),b(Xt.$$.fragment,a),b(qe.$$.fragment,a),b(Kt.$$.fragment,a),b(Zt.$$.fragment,a),b(ta.$$.fragment,a),b(aa.$$.fragment,a),Yn=!0)},o(a){E(M.$$.fragment,a),E(rt.$$.fragment,a),E(nt.$$.fragment,a),E(ot.$$.fragment,a),E(ct.$$.fragment,a),E(ht.$$.fragment,a),E(dt.$$.fragment,a),E(gt.$$.fragment,a),E(ut.$$.fragment,a),E(bt.$$.fragment,a),E(kt.$$.fragment,a),E(wt.$$.fragment,a),E(At.$$.fragment,a),E(Dt.$$.fragment,a),E(St.$$.fragment,a),E(Pt.$$.fragment,a),E(It.$$.fragment,a),E(Mt.$$.fragment,a),E(xt.$$.fragment,a),E(Ft.$$.fragment,a),E(jt.$$.fragment,a),E(Wt.$$.fragment,a),E(zt.$$.fragment,a),E(Bt.$$.fragment,a),E(Vt.$$.fragment,a),E(qt.$$.fragment,a),E(Rt.$$.fragment,a),E(Ht.$$.fragment,a),E(Ut.$$.fragment,a),E(Gt.$$.fragment,a),E(Jt.$$.fragment,a),E(Yt.$$.fragment,a),E(Xt.$$.fragment,a),E(qe.$$.fragment,a),E(Kt.$$.fragment,a),E(Zt.$$.fragment,a),E(ta.$$.fragment,a),E(aa.$$.fragment,a),Yn=!1},d(a){t(w),a&&t(Y),a&&t(A),k(M),a&&t(x),a&&t(q),a&&t(Cn),a&&t(j),a&&t(wn),a&&t(Ee),a&&t(yn),a&&t(D),a&&t(An),a&&t(L),a&&t(Dn),a&&t(ae),k(rt),a&&t(Ln),a&&t(ye),a&&t(Sn),a&&t(R),k(nt),k(ot),a&&t(Pn),a&&t(ne),k(ct),a&&t(On),a&&t(se),k(ht),a&&t(In),a&&t(oe),k(dt),a&&t(Mn),a&&t(H),k(gt),a&&t(xn),a&&t(le),k(ut),a&&t(Fn),a&&t(G),k(bt),k(kt),a&&t(jn),a&&t(J),k(wt),k(At),a&&t(Nn),a&&t(me),k(Dt),a&&t(Wn),a&&t(pe),k(St),a&&t(zn),a&&t(p),k(Pt),k(It),k(Mt),k(xt),k(Ft),k(jt),k(Wt),k(zt),k(Bt),k(Vt),k(qt),k(Rt),k(Ht),k(Ut),a&&t(Bn),a&&t(ze),a&&t(Vn),k(Gt,a),a&&t(qn),a&&t(Be),a&&t(Rn),k(Jt,a),a&&t(Hn),a&&t(ge),k(Yt),a&&t(Un),a&&t(O),k(Xt),k(qe),k(Kt),k(Zt),a&&t(Gn),a&&t(ue),k(ta),a&&t(Jn),a&&t(ve),k(aa)}}}const Vd={local:"callbacks",sections:[{local:"transformers.integrations.CometCallback",title:"Available Callbacks"},{local:"transformers.TrainerCallback",title:"TrainerCallback"},{local:"transformers.TrainerState",title:"TrainerState"},{local:"transformers.TrainerControl",title:"TrainerControl"}],title:"Callbacks"};function qd(nr,w,Y){let{fw:A}=w;return nr.$$set=S=>{"fw"in S&&Y(0,A=S.fw)},[A]}class Xd extends xd{constructor(w){super();Fd(this,w,qd,Bd,jd,{fw:0})}}export{Xd as default,Vd as metadata};
