import{S as vl,i as _l,s as bl,e as o,k as g,w as h,t as n,M as El,c as s,d as t,m as f,a as l,x as u,h as a,b as c,F as r,g as m,y as v,q as _,o as b,B as E}from"../../chunks/vendor-22ad994f.js";import{T as $l}from"../../chunks/Tip-540f533b.js";import{D as S}from"../../chunks/Docstring-3bc3620c.js";import{C as xt}from"../../chunks/CodeBlock-03069293.js";import{I as Es}from"../../chunks/IconCopyLink-2eb9a001.js";import"../../chunks/CopyButton-f539c482.js";function yl(yr){let y,H,R,d,A,G,X,Z,Te,U,q,Se,M,L,ee,re,Le,C,_e,F,Ce,be,D,Ee,p,j,te,oe,Fe,se,z,Pe,x,Ve;return{c(){y=o("p"),H=n("\u{1F917} Transformers has following logging levels:"),R=g(),d=o("ul"),A=o("li"),G=n("50: "),X=o("code"),Z=n("transformers.logging.CRITICAL"),Te=n(" or "),U=o("code"),q=n("transformers.logging.FATAL"),Se=g(),M=o("li"),L=n("40: "),ee=o("code"),re=n("transformers.logging.ERROR"),Le=g(),C=o("li"),_e=n("30: "),F=o("code"),Ce=n("transformers.logging.WARNING"),be=n(" or "),D=o("code"),Ee=n("transformers.logging.WARN"),p=g(),j=o("li"),te=n("20: "),oe=o("code"),Fe=n("transformers.logging.INFO"),se=g(),z=o("li"),Pe=n("10: "),x=o("code"),Ve=n("transformers.logging.DEBUG")},l(w){y=s(w,"P",{});var P=l(y);H=a(P,"\u{1F917} Transformers has following logging levels:"),P.forEach(t),R=f(w),d=s(w,"UL",{});var I=l(d);A=s(I,"LI",{});var le=l(A);G=a(le,"50: "),X=s(le,"CODE",{});var $e=l(X);Z=a($e,"transformers.logging.CRITICAL"),$e.forEach(t),Te=a(le," or "),U=s(le,"CODE",{});var ir=l(U);q=a(ir,"transformers.logging.FATAL"),ir.forEach(t),le.forEach(t),Se=f(I),M=s(I,"LI",{});var Ge=l(M);L=a(Ge,"40: "),ee=s(Ge,"CODE",{});var ye=l(ee);re=a(ye,"transformers.logging.ERROR"),ye.forEach(t),Ge.forEach(t),Le=f(I),C=s(I,"LI",{});var ne=l(C);_e=a(ne,"30: "),F=s(ne,"CODE",{});var gr=l(F);Ce=a(gr,"transformers.logging.WARNING"),gr.forEach(t),be=a(ne," or "),D=s(ne,"CODE",{});var Me=l(D);Ee=a(Me,"transformers.logging.WARN"),Me.forEach(t),ne.forEach(t),p=f(I),j=s(I,"LI",{});var B=l(j);te=a(B,"20: "),oe=s(B,"CODE",{});var xe=l(oe);Fe=a(xe,"transformers.logging.INFO"),xe.forEach(t),B.forEach(t),se=f(I),z=s(I,"LI",{});var $=l(z);Pe=a($,"10: "),x=s($,"CODE",{});var fr=l(x);Ve=a(fr,"transformers.logging.DEBUG"),fr.forEach(t),$.forEach(t),I.forEach(t)},m(w,P){m(w,y,P),r(y,H),m(w,R,P),m(w,d,P),r(d,A),r(A,G),r(A,X),r(X,Z),r(A,Te),r(A,U),r(U,q),r(d,Se),r(d,M),r(M,L),r(M,ee),r(ee,re),r(d,Le),r(d,C),r(C,_e),r(C,F),r(F,Ce),r(C,be),r(C,D),r(D,Ee),r(d,p),r(d,j),r(j,te),r(j,oe),r(oe,Fe),r(d,se),r(d,z),r(z,Pe),r(z,x),r(x,Ve)},d(w){w&&t(y),w&&t(R),w&&t(d)}}}function Rl(yr){let y,H,R,d,A,G,X,Z,Te,U,q,Se,M,L,ee,re,Le,C,_e,F,Ce,be,D,Ee,p,j,te,oe,Fe,se,z,Pe,x,Ve,w,P,I,le,$e,ir,Ge,ye,ne,gr,Me,B,xe,$,fr,Rr,Bt,kt,wr,Wt,Yt,Ar,Ht,Ut,Ir,qt,jt,ot,Be,st,J,zt,mr,Jt,Kt,cr,Qt,Xt,lt,O,Re,Or,Zt,eo,Nr,ro,to,oo,dr,Dr,so,lo,no,we,Tr,ao,io,Sr,go,fo,mo,pr,Lr,co,po,ho,hr,Cr,uo,vo,nt,V,_o,Fr,bo,Eo,ur,$o,yo,vr,Ro,wo,at,ae,Ae,Pr,ke,Ao,Vr,Io,it,ie,We,Oo,Ye,No,Gr,Do,To,gt,ge,He,So,Ue,Lo,Mr,Co,Fo,ft,fe,qe,Po,je,Vo,xr,Go,Mo,mt,me,ze,xo,Je,Bo,Br,ko,Wo,ct,ce,Ie,kr,Ke,Yo,Wr,Ho,dt,k,Qe,Uo,Yr,qo,jo,Oe,pt,de,Xe,zo,Hr,Jo,ht,W,Ze,Ko,Ur,Qo,Xo,qr,Zo,ut,pe,er,es,jr,rs,vt,he,rr,ts,zr,os,_t,T,tr,ss,Jr,ls,ns,or,as,Kr,is,bt,Y,sr,gs,Qr,fs,ms,Xr,cs,Et,ue,lr,ds,Zr,ps,$t,ve,nr,hs,et,us,yt;return G=new Es({}),D=new xt({props:{code:`import transformers

transformers.logging.set_verbosity_info(),`,highlighted:`<span class="hljs-keyword">import</span> transformers

transformers.logging.set_verbosity_info()`}}),B=new xt({props:{code:"TRANSFORMERS_VERBOSITY=error ./myprogram.py,",highlighted:"TRANSFORMERS_VERBOSITY=error ./myprogram.py"}}),Be=new xt({props:{code:"TRANSFORMERS_NO_ADVISORY_WARNINGS=1 ./myprogram.py,",highlighted:"TRANSFORMERS_NO_ADVISORY_WARNINGS=1 ./myprogram.py"}}),ke=new Es({}),We=new S({props:{name:"transformers.utils.logging.set_verbosity_error",anchor:"transformers.utils.logging.set_verbosity_error",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/utils/logging.py#L184"}}),He=new S({props:{name:"transformers.utils.logging.set_verbosity_warning",anchor:"transformers.utils.logging.set_verbosity_warning",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/utils/logging.py#L174"}}),qe=new S({props:{name:"transformers.utils.logging.set_verbosity_info",anchor:"transformers.utils.logging.set_verbosity_info",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/utils/logging.py#L169"}}),ze=new S({props:{name:"transformers.utils.logging.set_verbosity_debug",anchor:"transformers.utils.logging.set_verbosity_debug",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/utils/logging.py#L179"}}),Ke=new Es({}),Qe=new S({props:{name:"transformers.utils.logging.get_verbosity",anchor:"transformers.utils.logging.get_verbosity",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/utils/logging.py#L127",returnDescription:`
<p>The logging level.</p>
`,returnType:`
<p><code>int</code></p>
`}}),Oe=new $l({props:{$$slots:{default:[yl]},$$scope:{ctx:yr}}}),Xe=new S({props:{name:"transformers.utils.logging.set_verbosity",anchor:"transformers.utils.logging.set_verbosity",parameters:[{name:"verbosity",val:": int"}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/utils/logging.py#L150",parametersDescription:[{anchor:"transformers.utils.logging.set_verbosity.verbosity",description:`<strong>verbosity</strong> (<code>int</code>) &#x2014;
Logging level, e.g., one of:</p>
<ul>
<li><code>transformers.logging.CRITICAL</code> or <code>transformers.logging.FATAL</code></li>
<li><code>transformers.logging.ERROR</code></li>
<li><code>transformers.logging.WARNING</code> or <code>transformers.logging.WARN</code></li>
<li><code>transformers.logging.INFO</code></li>
<li><code>transformers.logging.DEBUG</code></li>
</ul>`,name:"verbosity"}]}}),Ze=new S({props:{name:"transformers.utils.logging.get_logger",anchor:"transformers.utils.logging.get_logger",parameters:[{name:"name",val:": typing.Optional[str] = None"}],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/utils/logging.py#L113"}}),er=new S({props:{name:"transformers.utils.logging.enable_default_handler",anchor:"transformers.utils.logging.enable_default_handler",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/utils/logging.py#L198"}}),rr=new S({props:{name:"transformers.utils.logging.disable_default_handler",anchor:"transformers.utils.logging.disable_default_handler",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/utils/logging.py#L189"}}),tr=new S({props:{name:"transformers.utils.logging.enable_explicit_format",anchor:"transformers.utils.logging.enable_explicit_format",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/utils/logging.py#L244"}}),or=new xt({props:{code:"    [LEVELNAME|FILENAME|LINE NUMBER] TIME >> MESSAGE,",highlighted:'    [LEVELNAME|<span class="hljs-type">FILENAME</span>|<span class="hljs-type">LINE</span> NUMBER] TIME &gt;&gt; MESSAGE'}}),sr=new S({props:{name:"transformers.utils.logging.reset_format",anchor:"transformers.utils.logging.reset_format",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/utils/logging.py#L259"}}),lr=new S({props:{name:"transformers.utils.logging.enable_progress_bar",anchor:"transformers.utils.logging.enable_progress_bar",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/utils/logging.py#L335"}}),nr=new S({props:{name:"transformers.utils.logging.disable_progress_bar",anchor:"transformers.utils.logging.disable_progress_bar",parameters:[],source:"https://github.com/huggingface/transformers/blob/pr_15794/src/transformers/utils/logging.py#L341"}}),{c(){y=o("meta"),H=g(),R=o("h1"),d=o("a"),A=o("span"),h(G.$$.fragment),X=g(),Z=o("span"),Te=n("Logging"),U=g(),q=o("p"),Se=n("\u{1F917} Transformers has a centralized logging system, so that you can setup the verbosity of the library easily."),M=g(),L=o("p"),ee=n("Currently the default verbosity of the library is "),re=o("code"),Le=n("WARNING"),C=n("."),_e=g(),F=o("p"),Ce=n(`To change the level of verbosity, just use one of the direct setters. For instance, here is how to change the verbosity
to the INFO level.`),be=g(),h(D.$$.fragment),Ee=g(),p=o("p"),j=n("You can also use the environment variable "),te=o("code"),oe=n("TRANSFORMERS_VERBOSITY"),Fe=n(` to override the default verbosity. You can set it
to one of the following: `),se=o("code"),z=n("debug"),Pe=n(", "),x=o("code"),Ve=n("info"),w=n(", "),P=o("code"),I=n("warning"),le=n(", "),$e=o("code"),ir=n("error"),Ge=n(", "),ye=o("code"),ne=n("critical"),gr=n(". For example:"),Me=g(),h(B.$$.fragment),xe=g(),$=o("p"),fr=n("Additionally, some "),Rr=o("code"),Bt=n("warnings"),kt=n(` can be disabled by setting the environment variable
`),wr=o("code"),Wt=n("TRANSFORMERS_NO_ADVISORY_WARNINGS"),Yt=n(" to a true value, like "),Ar=o("em"),Ht=n("1"),Ut=n(`. This will disable any warning that is logged using
`),Ir=o("code"),qt=n("logger.warning_advice()"),jt=n(" For example:"),ot=g(),h(Be.$$.fragment),st=g(),J=o("p"),zt=n(`All the methods of this logging module are documented below, the main ones are
`),mr=o("a"),Jt=n("logging.get_verbosity()"),Kt=n(` to get the current level of verbosity in the logger and
`),cr=o("a"),Qt=n("logging.set_verbosity()"),Xt=n(` to set the verbosity to the level of your choice. In order (from the least
verbose to the most verbose), those levels (with their corresponding int values in parenthesis) are:`),lt=g(),O=o("ul"),Re=o("li"),Or=o("code"),Zt=n("transformers.logging.CRITICAL"),eo=n(" or "),Nr=o("code"),ro=n("transformers.logging.FATAL"),to=n(` (int value, 50): only report the most
critical errors.`),oo=g(),dr=o("li"),Dr=o("code"),so=n("transformers.logging.ERROR"),lo=n(" (int value, 40): only report errors."),no=g(),we=o("li"),Tr=o("code"),ao=n("transformers.logging.WARNING"),io=n(" or "),Sr=o("code"),go=n("transformers.logging.WARN"),fo=n(` (int value, 30): only reports error and
warnings. This the default level used by the library.`),mo=g(),pr=o("li"),Lr=o("code"),co=n("transformers.logging.INFO"),po=n(" (int value, 20): reports error, warnings and basic information."),ho=g(),hr=o("li"),Cr=o("code"),uo=n("transformers.logging.DEBUG"),vo=n(" (int value, 10): report all information."),nt=g(),V=o("p"),_o=n("By default, "),Fr=o("code"),bo=n("tqdm"),Eo=n(" progress bars will be displayed during model download. "),ur=o("a"),$o=n("logging.disable_progress_bar()"),yo=n(" and "),vr=o("a"),Ro=n("logging.enable_progress_bar()"),wo=n(" can be used to suppress or unsuppress this behavior."),at=g(),ae=o("h2"),Ae=o("a"),Pr=o("span"),h(ke.$$.fragment),Ao=g(),Vr=o("span"),Io=n("Base setters"),it=g(),ie=o("div"),h(We.$$.fragment),Oo=g(),Ye=o("p"),No=n("Set the verbosity to the "),Gr=o("code"),Do=n("ERROR"),To=n(" level."),gt=g(),ge=o("div"),h(He.$$.fragment),So=g(),Ue=o("p"),Lo=n("Set the verbosity to the "),Mr=o("code"),Co=n("WARNING"),Fo=n(" level."),ft=g(),fe=o("div"),h(qe.$$.fragment),Po=g(),je=o("p"),Vo=n("Set the verbosity to the "),xr=o("code"),Go=n("INFO"),Mo=n(" level."),mt=g(),me=o("div"),h(ze.$$.fragment),xo=g(),Je=o("p"),Bo=n("Set the verbosity to the "),Br=o("code"),ko=n("DEBUG"),Wo=n(" level."),ct=g(),ce=o("h2"),Ie=o("a"),kr=o("span"),h(Ke.$$.fragment),Yo=g(),Wr=o("span"),Ho=n("Other functions"),dt=g(),k=o("div"),h(Qe.$$.fragment),Uo=g(),Yr=o("p"),qo=n("Return the current level for the \u{1F917} Transformers\u2019s root logger as an int."),jo=g(),h(Oe.$$.fragment),pt=g(),de=o("div"),h(Xe.$$.fragment),zo=g(),Hr=o("p"),Jo=n("Set the verbosity level for the \u{1F917} Transformers\u2019s root logger."),ht=g(),W=o("div"),h(Ze.$$.fragment),Ko=g(),Ur=o("p"),Qo=n("Return a logger with the specified name."),Xo=g(),qr=o("p"),Zo=n("This function is not supposed to be directly accessed unless you are writing a custom transformers module."),ut=g(),pe=o("div"),h(er.$$.fragment),es=g(),jr=o("p"),rs=n("Enable the default handler of the HuggingFace Transformers\u2019s root logger."),vt=g(),he=o("div"),h(rr.$$.fragment),ts=g(),zr=o("p"),os=n("Disable the default handler of the HuggingFace Transformers\u2019s root logger."),_t=g(),T=o("div"),h(tr.$$.fragment),ss=g(),Jr=o("p"),ls=n("Enable explicit formatting for every HuggingFace Transformers\u2019s logger. The explicit formatter is as follows:"),ns=g(),h(or.$$.fragment),as=g(),Kr=o("p"),is=n("All handlers currently bound to the root logger are affected by this method."),bt=g(),Y=o("div"),h(sr.$$.fragment),gs=g(),Qr=o("p"),fs=n("Resets the formatting for HuggingFace Transformers\u2019s loggers."),ms=g(),Xr=o("p"),cs=n("All handlers currently bound to the root logger are affected by this method."),Et=g(),ue=o("div"),h(lr.$$.fragment),ds=g(),Zr=o("p"),ps=n("Enable tqdm progress bar."),$t=g(),ve=o("div"),h(nr.$$.fragment),hs=g(),et=o("p"),us=n("Enable tqdm progress bar."),this.h()},l(e){const i=El('[data-svelte="svelte-1phssyn"]',document.head);y=s(i,"META",{name:!0,content:!0}),i.forEach(t),H=f(e),R=s(e,"H1",{class:!0});var ar=l(R);d=s(ar,"A",{id:!0,class:!0,href:!0});var $s=l(d);A=s($s,"SPAN",{});var ys=l(A);u(G.$$.fragment,ys),ys.forEach(t),$s.forEach(t),X=f(ar),Z=s(ar,"SPAN",{});var Rs=l(Z);Te=a(Rs,"Logging"),Rs.forEach(t),ar.forEach(t),U=f(e),q=s(e,"P",{});var ws=l(q);Se=a(ws,"\u{1F917} Transformers has a centralized logging system, so that you can setup the verbosity of the library easily."),ws.forEach(t),M=f(e),L=s(e,"P",{});var Rt=l(L);ee=a(Rt,"Currently the default verbosity of the library is "),re=s(Rt,"CODE",{});var As=l(re);Le=a(As,"WARNING"),As.forEach(t),C=a(Rt,"."),Rt.forEach(t),_e=f(e),F=s(e,"P",{});var Is=l(F);Ce=a(Is,`To change the level of verbosity, just use one of the direct setters. For instance, here is how to change the verbosity
to the INFO level.`),Is.forEach(t),be=f(e),u(D.$$.fragment,e),Ee=f(e),p=s(e,"P",{});var N=l(p);j=a(N,"You can also use the environment variable "),te=s(N,"CODE",{});var Os=l(te);oe=a(Os,"TRANSFORMERS_VERBOSITY"),Os.forEach(t),Fe=a(N,` to override the default verbosity. You can set it
to one of the following: `),se=s(N,"CODE",{});var Ns=l(se);z=a(Ns,"debug"),Ns.forEach(t),Pe=a(N,", "),x=s(N,"CODE",{});var Ds=l(x);Ve=a(Ds,"info"),Ds.forEach(t),w=a(N,", "),P=s(N,"CODE",{});var Ts=l(P);I=a(Ts,"warning"),Ts.forEach(t),le=a(N,", "),$e=s(N,"CODE",{});var Ss=l($e);ir=a(Ss,"error"),Ss.forEach(t),Ge=a(N,", "),ye=s(N,"CODE",{});var Ls=l(ye);ne=a(Ls,"critical"),Ls.forEach(t),gr=a(N,". For example:"),N.forEach(t),Me=f(e),u(B.$$.fragment,e),xe=f(e),$=s(e,"P",{});var K=l($);fr=a(K,"Additionally, some "),Rr=s(K,"CODE",{});var Cs=l(Rr);Bt=a(Cs,"warnings"),Cs.forEach(t),kt=a(K,` can be disabled by setting the environment variable
`),wr=s(K,"CODE",{});var Fs=l(wr);Wt=a(Fs,"TRANSFORMERS_NO_ADVISORY_WARNINGS"),Fs.forEach(t),Yt=a(K," to a true value, like "),Ar=s(K,"EM",{});var Ps=l(Ar);Ht=a(Ps,"1"),Ps.forEach(t),Ut=a(K,`. This will disable any warning that is logged using
`),Ir=s(K,"CODE",{});var Vs=l(Ir);qt=a(Vs,"logger.warning_advice()"),Vs.forEach(t),jt=a(K," For example:"),K.forEach(t),ot=f(e),u(Be.$$.fragment,e),st=f(e),J=s(e,"P",{});var _r=l(J);zt=a(_r,`All the methods of this logging module are documented below, the main ones are
`),mr=s(_r,"A",{href:!0});var Gs=l(mr);Jt=a(Gs,"logging.get_verbosity()"),Gs.forEach(t),Kt=a(_r,` to get the current level of verbosity in the logger and
`),cr=s(_r,"A",{href:!0});var Ms=l(cr);Qt=a(Ms,"logging.set_verbosity()"),Ms.forEach(t),Xt=a(_r,` to set the verbosity to the level of your choice. In order (from the least
verbose to the most verbose), those levels (with their corresponding int values in parenthesis) are:`),_r.forEach(t),lt=f(e),O=s(e,"UL",{});var Q=l(O);Re=s(Q,"LI",{});var rt=l(Re);Or=s(rt,"CODE",{});var xs=l(Or);Zt=a(xs,"transformers.logging.CRITICAL"),xs.forEach(t),eo=a(rt," or "),Nr=s(rt,"CODE",{});var Bs=l(Nr);ro=a(Bs,"transformers.logging.FATAL"),Bs.forEach(t),to=a(rt,` (int value, 50): only report the most
critical errors.`),rt.forEach(t),oo=f(Q),dr=s(Q,"LI",{});var vs=l(dr);Dr=s(vs,"CODE",{});var ks=l(Dr);so=a(ks,"transformers.logging.ERROR"),ks.forEach(t),lo=a(vs," (int value, 40): only report errors."),vs.forEach(t),no=f(Q),we=s(Q,"LI",{});var tt=l(we);Tr=s(tt,"CODE",{});var Ws=l(Tr);ao=a(Ws,"transformers.logging.WARNING"),Ws.forEach(t),io=a(tt," or "),Sr=s(tt,"CODE",{});var Ys=l(Sr);go=a(Ys,"transformers.logging.WARN"),Ys.forEach(t),fo=a(tt,` (int value, 30): only reports error and
warnings. This the default level used by the library.`),tt.forEach(t),mo=f(Q),pr=s(Q,"LI",{});var _s=l(pr);Lr=s(_s,"CODE",{});var Hs=l(Lr);co=a(Hs,"transformers.logging.INFO"),Hs.forEach(t),po=a(_s," (int value, 20): reports error, warnings and basic information."),_s.forEach(t),ho=f(Q),hr=s(Q,"LI",{});var bs=l(hr);Cr=s(bs,"CODE",{});var Us=l(Cr);uo=a(Us,"transformers.logging.DEBUG"),Us.forEach(t),vo=a(bs," (int value, 10): report all information."),bs.forEach(t),Q.forEach(t),nt=f(e),V=s(e,"P",{});var Ne=l(V);_o=a(Ne,"By default, "),Fr=s(Ne,"CODE",{});var qs=l(Fr);bo=a(qs,"tqdm"),qs.forEach(t),Eo=a(Ne," progress bars will be displayed during model download. "),ur=s(Ne,"A",{href:!0});var js=l(ur);$o=a(js,"logging.disable_progress_bar()"),js.forEach(t),yo=a(Ne," and "),vr=s(Ne,"A",{href:!0});var zs=l(vr);Ro=a(zs,"logging.enable_progress_bar()"),zs.forEach(t),wo=a(Ne," can be used to suppress or unsuppress this behavior."),Ne.forEach(t),at=f(e),ae=s(e,"H2",{class:!0});var wt=l(ae);Ae=s(wt,"A",{id:!0,class:!0,href:!0});var Js=l(Ae);Pr=s(Js,"SPAN",{});var Ks=l(Pr);u(ke.$$.fragment,Ks),Ks.forEach(t),Js.forEach(t),Ao=f(wt),Vr=s(wt,"SPAN",{});var Qs=l(Vr);Io=a(Qs,"Base setters"),Qs.forEach(t),wt.forEach(t),it=f(e),ie=s(e,"DIV",{class:!0});var At=l(ie);u(We.$$.fragment,At),Oo=f(At),Ye=s(At,"P",{});var It=l(Ye);No=a(It,"Set the verbosity to the "),Gr=s(It,"CODE",{});var Xs=l(Gr);Do=a(Xs,"ERROR"),Xs.forEach(t),To=a(It," level."),It.forEach(t),At.forEach(t),gt=f(e),ge=s(e,"DIV",{class:!0});var Ot=l(ge);u(He.$$.fragment,Ot),So=f(Ot),Ue=s(Ot,"P",{});var Nt=l(Ue);Lo=a(Nt,"Set the verbosity to the "),Mr=s(Nt,"CODE",{});var Zs=l(Mr);Co=a(Zs,"WARNING"),Zs.forEach(t),Fo=a(Nt," level."),Nt.forEach(t),Ot.forEach(t),ft=f(e),fe=s(e,"DIV",{class:!0});var Dt=l(fe);u(qe.$$.fragment,Dt),Po=f(Dt),je=s(Dt,"P",{});var Tt=l(je);Vo=a(Tt,"Set the verbosity to the "),xr=s(Tt,"CODE",{});var el=l(xr);Go=a(el,"INFO"),el.forEach(t),Mo=a(Tt," level."),Tt.forEach(t),Dt.forEach(t),mt=f(e),me=s(e,"DIV",{class:!0});var St=l(me);u(ze.$$.fragment,St),xo=f(St),Je=s(St,"P",{});var Lt=l(Je);Bo=a(Lt,"Set the verbosity to the "),Br=s(Lt,"CODE",{});var rl=l(Br);ko=a(rl,"DEBUG"),rl.forEach(t),Wo=a(Lt," level."),Lt.forEach(t),St.forEach(t),ct=f(e),ce=s(e,"H2",{class:!0});var Ct=l(ce);Ie=s(Ct,"A",{id:!0,class:!0,href:!0});var tl=l(Ie);kr=s(tl,"SPAN",{});var ol=l(kr);u(Ke.$$.fragment,ol),ol.forEach(t),tl.forEach(t),Yo=f(Ct),Wr=s(Ct,"SPAN",{});var sl=l(Wr);Ho=a(sl,"Other functions"),sl.forEach(t),Ct.forEach(t),dt=f(e),k=s(e,"DIV",{class:!0});var br=l(k);u(Qe.$$.fragment,br),Uo=f(br),Yr=s(br,"P",{});var ll=l(Yr);qo=a(ll,"Return the current level for the \u{1F917} Transformers\u2019s root logger as an int."),ll.forEach(t),jo=f(br),u(Oe.$$.fragment,br),br.forEach(t),pt=f(e),de=s(e,"DIV",{class:!0});var Ft=l(de);u(Xe.$$.fragment,Ft),zo=f(Ft),Hr=s(Ft,"P",{});var nl=l(Hr);Jo=a(nl,"Set the verbosity level for the \u{1F917} Transformers\u2019s root logger."),nl.forEach(t),Ft.forEach(t),ht=f(e),W=s(e,"DIV",{class:!0});var Er=l(W);u(Ze.$$.fragment,Er),Ko=f(Er),Ur=s(Er,"P",{});var al=l(Ur);Qo=a(al,"Return a logger with the specified name."),al.forEach(t),Xo=f(Er),qr=s(Er,"P",{});var il=l(qr);Zo=a(il,"This function is not supposed to be directly accessed unless you are writing a custom transformers module."),il.forEach(t),Er.forEach(t),ut=f(e),pe=s(e,"DIV",{class:!0});var Pt=l(pe);u(er.$$.fragment,Pt),es=f(Pt),jr=s(Pt,"P",{});var gl=l(jr);rs=a(gl,"Enable the default handler of the HuggingFace Transformers\u2019s root logger."),gl.forEach(t),Pt.forEach(t),vt=f(e),he=s(e,"DIV",{class:!0});var Vt=l(he);u(rr.$$.fragment,Vt),ts=f(Vt),zr=s(Vt,"P",{});var fl=l(zr);os=a(fl,"Disable the default handler of the HuggingFace Transformers\u2019s root logger."),fl.forEach(t),Vt.forEach(t),_t=f(e),T=s(e,"DIV",{class:!0});var De=l(T);u(tr.$$.fragment,De),ss=f(De),Jr=s(De,"P",{});var ml=l(Jr);ls=a(ml,"Enable explicit formatting for every HuggingFace Transformers\u2019s logger. The explicit formatter is as follows:"),ml.forEach(t),ns=f(De),u(or.$$.fragment,De),as=f(De),Kr=s(De,"P",{});var cl=l(Kr);is=a(cl,"All handlers currently bound to the root logger are affected by this method."),cl.forEach(t),De.forEach(t),bt=f(e),Y=s(e,"DIV",{class:!0});var $r=l(Y);u(sr.$$.fragment,$r),gs=f($r),Qr=s($r,"P",{});var dl=l(Qr);fs=a(dl,"Resets the formatting for HuggingFace Transformers\u2019s loggers."),dl.forEach(t),ms=f($r),Xr=s($r,"P",{});var pl=l(Xr);cs=a(pl,"All handlers currently bound to the root logger are affected by this method."),pl.forEach(t),$r.forEach(t),Et=f(e),ue=s(e,"DIV",{class:!0});var Gt=l(ue);u(lr.$$.fragment,Gt),ds=f(Gt),Zr=s(Gt,"P",{});var hl=l(Zr);ps=a(hl,"Enable tqdm progress bar."),hl.forEach(t),Gt.forEach(t),$t=f(e),ve=s(e,"DIV",{class:!0});var Mt=l(ve);u(nr.$$.fragment,Mt),hs=f(Mt),et=s(Mt,"P",{});var ul=l(et);us=a(ul,"Enable tqdm progress bar."),ul.forEach(t),Mt.forEach(t),this.h()},h(){c(y,"name","hf:doc:metadata"),c(y,"content",JSON.stringify(wl)),c(d,"id","logging"),c(d,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(d,"href","#logging"),c(R,"class","relative group"),c(mr,"href","/docs/transformers/pr_15794/en/main_classes/logging#transformers.utils.logging.get_verbosity"),c(cr,"href","/docs/transformers/pr_15794/en/main_classes/logging#transformers.utils.logging.set_verbosity"),c(ur,"href","/docs/transformers/pr_15794/en/main_classes/logging#transformers.utils.logging.disable_progress_bar"),c(vr,"href","/docs/transformers/pr_15794/en/main_classes/logging#transformers.utils.logging.enable_progress_bar"),c(Ae,"id","transformers.utils.logging.set_verbosity_error"),c(Ae,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Ae,"href","#transformers.utils.logging.set_verbosity_error"),c(ae,"class","relative group"),c(ie,"class","docstring"),c(ge,"class","docstring"),c(fe,"class","docstring"),c(me,"class","docstring"),c(Ie,"id","transformers.utils.logging.get_verbosity"),c(Ie,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(Ie,"href","#transformers.utils.logging.get_verbosity"),c(ce,"class","relative group"),c(k,"class","docstring"),c(de,"class","docstring"),c(W,"class","docstring"),c(pe,"class","docstring"),c(he,"class","docstring"),c(T,"class","docstring"),c(Y,"class","docstring"),c(ue,"class","docstring"),c(ve,"class","docstring")},m(e,i){r(document.head,y),m(e,H,i),m(e,R,i),r(R,d),r(d,A),v(G,A,null),r(R,X),r(R,Z),r(Z,Te),m(e,U,i),m(e,q,i),r(q,Se),m(e,M,i),m(e,L,i),r(L,ee),r(L,re),r(re,Le),r(L,C),m(e,_e,i),m(e,F,i),r(F,Ce),m(e,be,i),v(D,e,i),m(e,Ee,i),m(e,p,i),r(p,j),r(p,te),r(te,oe),r(p,Fe),r(p,se),r(se,z),r(p,Pe),r(p,x),r(x,Ve),r(p,w),r(p,P),r(P,I),r(p,le),r(p,$e),r($e,ir),r(p,Ge),r(p,ye),r(ye,ne),r(p,gr),m(e,Me,i),v(B,e,i),m(e,xe,i),m(e,$,i),r($,fr),r($,Rr),r(Rr,Bt),r($,kt),r($,wr),r(wr,Wt),r($,Yt),r($,Ar),r(Ar,Ht),r($,Ut),r($,Ir),r(Ir,qt),r($,jt),m(e,ot,i),v(Be,e,i),m(e,st,i),m(e,J,i),r(J,zt),r(J,mr),r(mr,Jt),r(J,Kt),r(J,cr),r(cr,Qt),r(J,Xt),m(e,lt,i),m(e,O,i),r(O,Re),r(Re,Or),r(Or,Zt),r(Re,eo),r(Re,Nr),r(Nr,ro),r(Re,to),r(O,oo),r(O,dr),r(dr,Dr),r(Dr,so),r(dr,lo),r(O,no),r(O,we),r(we,Tr),r(Tr,ao),r(we,io),r(we,Sr),r(Sr,go),r(we,fo),r(O,mo),r(O,pr),r(pr,Lr),r(Lr,co),r(pr,po),r(O,ho),r(O,hr),r(hr,Cr),r(Cr,uo),r(hr,vo),m(e,nt,i),m(e,V,i),r(V,_o),r(V,Fr),r(Fr,bo),r(V,Eo),r(V,ur),r(ur,$o),r(V,yo),r(V,vr),r(vr,Ro),r(V,wo),m(e,at,i),m(e,ae,i),r(ae,Ae),r(Ae,Pr),v(ke,Pr,null),r(ae,Ao),r(ae,Vr),r(Vr,Io),m(e,it,i),m(e,ie,i),v(We,ie,null),r(ie,Oo),r(ie,Ye),r(Ye,No),r(Ye,Gr),r(Gr,Do),r(Ye,To),m(e,gt,i),m(e,ge,i),v(He,ge,null),r(ge,So),r(ge,Ue),r(Ue,Lo),r(Ue,Mr),r(Mr,Co),r(Ue,Fo),m(e,ft,i),m(e,fe,i),v(qe,fe,null),r(fe,Po),r(fe,je),r(je,Vo),r(je,xr),r(xr,Go),r(je,Mo),m(e,mt,i),m(e,me,i),v(ze,me,null),r(me,xo),r(me,Je),r(Je,Bo),r(Je,Br),r(Br,ko),r(Je,Wo),m(e,ct,i),m(e,ce,i),r(ce,Ie),r(Ie,kr),v(Ke,kr,null),r(ce,Yo),r(ce,Wr),r(Wr,Ho),m(e,dt,i),m(e,k,i),v(Qe,k,null),r(k,Uo),r(k,Yr),r(Yr,qo),r(k,jo),v(Oe,k,null),m(e,pt,i),m(e,de,i),v(Xe,de,null),r(de,zo),r(de,Hr),r(Hr,Jo),m(e,ht,i),m(e,W,i),v(Ze,W,null),r(W,Ko),r(W,Ur),r(Ur,Qo),r(W,Xo),r(W,qr),r(qr,Zo),m(e,ut,i),m(e,pe,i),v(er,pe,null),r(pe,es),r(pe,jr),r(jr,rs),m(e,vt,i),m(e,he,i),v(rr,he,null),r(he,ts),r(he,zr),r(zr,os),m(e,_t,i),m(e,T,i),v(tr,T,null),r(T,ss),r(T,Jr),r(Jr,ls),r(T,ns),v(or,T,null),r(T,as),r(T,Kr),r(Kr,is),m(e,bt,i),m(e,Y,i),v(sr,Y,null),r(Y,gs),r(Y,Qr),r(Qr,fs),r(Y,ms),r(Y,Xr),r(Xr,cs),m(e,Et,i),m(e,ue,i),v(lr,ue,null),r(ue,ds),r(ue,Zr),r(Zr,ps),m(e,$t,i),m(e,ve,i),v(nr,ve,null),r(ve,hs),r(ve,et),r(et,us),yt=!0},p(e,[i]){const ar={};i&2&&(ar.$$scope={dirty:i,ctx:e}),Oe.$set(ar)},i(e){yt||(_(G.$$.fragment,e),_(D.$$.fragment,e),_(B.$$.fragment,e),_(Be.$$.fragment,e),_(ke.$$.fragment,e),_(We.$$.fragment,e),_(He.$$.fragment,e),_(qe.$$.fragment,e),_(ze.$$.fragment,e),_(Ke.$$.fragment,e),_(Qe.$$.fragment,e),_(Oe.$$.fragment,e),_(Xe.$$.fragment,e),_(Ze.$$.fragment,e),_(er.$$.fragment,e),_(rr.$$.fragment,e),_(tr.$$.fragment,e),_(or.$$.fragment,e),_(sr.$$.fragment,e),_(lr.$$.fragment,e),_(nr.$$.fragment,e),yt=!0)},o(e){b(G.$$.fragment,e),b(D.$$.fragment,e),b(B.$$.fragment,e),b(Be.$$.fragment,e),b(ke.$$.fragment,e),b(We.$$.fragment,e),b(He.$$.fragment,e),b(qe.$$.fragment,e),b(ze.$$.fragment,e),b(Ke.$$.fragment,e),b(Qe.$$.fragment,e),b(Oe.$$.fragment,e),b(Xe.$$.fragment,e),b(Ze.$$.fragment,e),b(er.$$.fragment,e),b(rr.$$.fragment,e),b(tr.$$.fragment,e),b(or.$$.fragment,e),b(sr.$$.fragment,e),b(lr.$$.fragment,e),b(nr.$$.fragment,e),yt=!1},d(e){t(y),e&&t(H),e&&t(R),E(G),e&&t(U),e&&t(q),e&&t(M),e&&t(L),e&&t(_e),e&&t(F),e&&t(be),E(D,e),e&&t(Ee),e&&t(p),e&&t(Me),E(B,e),e&&t(xe),e&&t($),e&&t(ot),E(Be,e),e&&t(st),e&&t(J),e&&t(lt),e&&t(O),e&&t(nt),e&&t(V),e&&t(at),e&&t(ae),E(ke),e&&t(it),e&&t(ie),E(We),e&&t(gt),e&&t(ge),E(He),e&&t(ft),e&&t(fe),E(qe),e&&t(mt),e&&t(me),E(ze),e&&t(ct),e&&t(ce),E(Ke),e&&t(dt),e&&t(k),E(Qe),E(Oe),e&&t(pt),e&&t(de),E(Xe),e&&t(ht),e&&t(W),E(Ze),e&&t(ut),e&&t(pe),E(er),e&&t(vt),e&&t(he),E(rr),e&&t(_t),e&&t(T),E(tr),E(or),e&&t(bt),e&&t(Y),E(sr),e&&t(Et),e&&t(ue),E(lr),e&&t($t),e&&t(ve),E(nr)}}}const wl={local:"logging",sections:[{local:"transformers.utils.logging.set_verbosity_error",title:"Base setters"},{local:"transformers.utils.logging.get_verbosity",title:"Other functions"}],title:"Logging"};function Al(yr,y,H){let{fw:R}=y;return yr.$$set=d=>{"fw"in d&&H(0,R=d.fw)},[R]}class Ll extends vl{constructor(y){super();_l(this,y,Al,Rl,bl,{fw:0})}}export{Ll as default,wl as metadata};
