import{S as df,i as bf,s as hf,e as r,k as f,w as d,t as o,M as vf,c as a,d as t,m as p,a as n,x as b,h as g,b as u,F as s,g as l,y as h,q as v,o as m,B as c}from"../../chunks/vendor-e67aec41.js";import{T as mf}from"../../chunks/Tip-76459d1c.js";import{D as de}from"../../chunks/Docstring-ebff01a5.js";import{C as q}from"../../chunks/CodeBlock-e2bcf023.js";import{I as B}from"../../chunks/IconCopyLink-ffd7f84e.js";function cf(As){let E,V,y,_,N,R,Ye,Y,M,be,D,J,L,Me,Je,k,x,Ke,K,Q,Qe,he,P,H,$,Xe,j,X,Ze;return{c(){E=r("p"),V=o("HuggingFace datasets library has following logging levels:"),y=f(),_=r("ul"),N=r("li"),R=r("code"),Ye=o("datasets.logging.CRITICAL"),Y=o(", "),M=r("code"),be=o("datasets.logging.FATAL"),D=f(),J=r("li"),L=r("code"),Me=o("datasets.logging.ERROR"),Je=f(),k=r("li"),x=r("code"),Ke=o("datasets.logging.WARNING"),K=o(", "),Q=r("code"),Qe=o("datasets.logging.WARN"),he=f(),P=r("li"),H=r("code"),$=o("datasets.logging.INFO"),Xe=f(),j=r("li"),X=r("code"),Ze=o("datasets.logging.DEBUG")},l(w){E=a(w,"P",{});var W=n(E);V=g(W,"HuggingFace datasets library has following logging levels:"),W.forEach(t),y=p(w),_=a(w,"UL",{});var I=n(_);N=a(I,"LI",{});var z=n(N);R=a(z,"CODE",{});var Rt=n(R);Ye=g(Rt,"datasets.logging.CRITICAL"),Rt.forEach(t),Y=g(z,", "),M=a(z,"CODE",{});var Pt=n(M);be=g(Pt,"datasets.logging.FATAL"),Pt.forEach(t),z.forEach(t),D=p(I),J=a(I,"LI",{});var ve=n(J);L=a(ve,"CODE",{});var Ot=n(L);Me=g(Ot,"datasets.logging.ERROR"),Ot.forEach(t),ve.forEach(t),Je=p(I),k=a(I,"LI",{});var me=n(k);x=a(me,"CODE",{});var ce=n(x);Ke=g(ce,"datasets.logging.WARNING"),ce.forEach(t),K=g(me,", "),Q=a(me,"CODE",{});var St=n(Q);Qe=g(St,"datasets.logging.WARN"),St.forEach(t),me.forEach(t),he=p(I),P=a(I,"LI",{});var Ct=n(P);H=a(Ct,"CODE",{});var _e=n(H);$=g(_e,"datasets.logging.INFO"),_e.forEach(t),Ct.forEach(t),Xe=p(I),j=a(I,"LI",{});var Ft=n(j);X=a(Ft,"CODE",{});var Dt=n(X);Ze=g(Dt,"datasets.logging.DEBUG"),Dt.forEach(t),Ft.forEach(t),I.forEach(t)},m(w,W){l(w,E,W),s(E,V),l(w,y,W),l(w,_,W),s(_,N),s(N,R),s(R,Ye),s(N,Y),s(N,M),s(M,be),s(_,D),s(_,J),s(J,L),s(L,Me),s(_,Je),s(_,k),s(k,x),s(x,Ke),s(k,K),s(k,Q),s(Q,Qe),s(_,he),s(_,P),s(P,H),s(H,$),s(_,Xe),s(_,j),s(j,X),s(X,Ze)},d(w){w&&t(E),w&&t(y),w&&t(_)}}}function _f(As){let E,V,y,_,N,R,Ye,Y,M,be,D,J,L,Me,Je,k,x,Ke,K,Q,Qe,he,P,H,$,Xe,j,X,Ze,w,W,I,z,Rt,Pt,ve,Ot,me,ce,St,Ct,_e,Ft,Dt,Rr,et,Pr,kt,En,Or,$e,Lt,jt,yn,wn,xn,Gt,Bt,In,Tn,Sr,Ee,An,Ns,Nn,Rn,Cr,T,ye,Rs,Pn,On,Ps,Sn,Cn,Fn,Vt,Os,Dn,kn,Ln,we,Ss,jn,Gn,Cs,Bn,Vn,Hn,Ht,Fs,Wn,zn,Un,Wt,Ds,qn,Yn,Fr,Z,xe,ks,tt,Mn,Ls,Jn,Dr,G,st,Kn,js,Qn,Xn,Ie,kr,ee,rt,Zn,Gs,ei,Lr,O,at,ti,Bs,si,ri,Vs,ai,ni,zt,ii,Hs,li,jr,S,nt,oi,Ws,gi,fi,zs,pi,ui,Ut,di,Us,bi,Gr,C,it,hi,qs,vi,mi,Ys,ci,_i,qt,$i,Ms,Ei,Br,F,lt,yi,Js,wi,xi,Ks,Ii,Ti,Yt,Ai,Qs,Ni,Vr,te,ot,Ri,Xs,Pi,Hr,se,gt,Oi,Zs,Si,Wr,re,ft,Ci,er,Fi,zr,ae,Te,tr,pt,Di,sr,ki,Ur,ne,Ae,rr,ut,Li,ar,ji,qr,Mt,Gi,Yr,Jt,Bi,Mr,Kt,Vi,Jr,Ne,Hi,nr,Wi,zi,Kr,Qt,Ui,Qr,dt,Xr,ie,Re,ir,bt,qi,lr,Yi,Zr,Xt,Mi,ea,Zt,Ji,ta,es,Ki,sa,Pe,Qi,or,Xi,Zi,ra,ts,el,aa,ht,na,le,Oe,gr,vt,tl,fr,sl,ia,ss,rl,la,rs,al,oa,as,nl,ga,Se,il,pr,ll,ol,fa,ns,gl,pa,mt,ua,oe,Ce,ur,ct,fl,dr,pl,da,is,ul,ba,ls,dl,ha,os,bl,va,Fe,hl,br,vl,ml,ma,gs,cl,ca,_t,_a,ge,De,hr,$t,_l,vr,$l,$a,fs,El,Ea,ps,yl,ya,us,wl,wa,ke,xl,mr,Il,Tl,xa,ds,Al,Ia,Et,Ta,fe,Le,cr,yt,Nl,_r,Rl,Aa,bs,Pl,Na,hs,Ol,Ra,vs,Sl,Pa,je,Cl,$r,Fl,Dl,Oa,ms,kl,Sa,wt,Ca,pe,Ge,Er,xt,Ll,yr,jl,Fa,cs,Gl,Da,_s,Bl,ka,$s,Vl,La,Be,Hl,wr,Wl,zl,ja,Es,Ul,Ga,It,Ba,ue,Ve,xr,Tt,ql,Ir,Yl,Va,ys,Ml,Ha,ws,Jl,Wa,xs,Kl,za,He,Ql,Tr,Xl,Zl,Ua,Is,eo,qa,At,Ya;return R=new B({}),P=new q({props:{code:`import datasets
datasets.logging.set_verbosity_info()`,highlighted:`<span class="hljs-keyword">import</span> datasets
datasets.logging.set_verbosity_info()`}}),et=new q({props:{code:"DATASETS_VERBOSITY=error ./myprogram.py",highlighted:"DATASETS_VERBOSITY=error ./myprogram.py"}}),tt=new B({}),st=new de({props:{name:"datasets.utils.logging.get_verbosity",anchor:"datasets.utils.logging.get_verbosity",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3958/src/datasets/utils/logging.py#L85",returnDescription:`
<p>Logging level, e.g., <code>datasets.logging.DEBUG</code> and <code>datasets.logging.INFO</code>.</p>
`}}),Ie=new mf({props:{$$slots:{default:[cf]},$$scope:{ctx:As}}}),rt=new de({props:{name:"datasets.utils.logging.set_verbosity",anchor:"datasets.utils.logging.set_verbosity",parameters:[{name:"verbosity",val:": int"}],source:"https://github.com/huggingface/datasets/blob/pr_3958/src/datasets/utils/logging.py#L100"}}),at=new de({props:{name:"datasets.utils.logging.set_verbosity_info",anchor:"datasets.utils.logging.set_verbosity_info",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3958/src/datasets/utils/logging.py#L109"}}),nt=new de({props:{name:"datasets.utils.logging.set_verbosity_warning",anchor:"datasets.utils.logging.set_verbosity_warning",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3958/src/datasets/utils/logging.py#L119"}}),it=new de({props:{name:"datasets.utils.logging.set_verbosity_debug",anchor:"datasets.utils.logging.set_verbosity_debug",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3958/src/datasets/utils/logging.py#L129"}}),lt=new de({props:{name:"datasets.utils.logging.set_verbosity_error",anchor:"datasets.utils.logging.set_verbosity_error",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3958/src/datasets/utils/logging.py#L139"}}),ot=new de({props:{name:"datasets.utils.logging.disable_propagation",anchor:"datasets.utils.logging.disable_propagation",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3958/src/datasets/utils/logging.py#L149"}}),gt=new de({props:{name:"datasets.utils.logging.enable_propagation",anchor:"datasets.utils.logging.enable_propagation",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3958/src/datasets/utils/logging.py#L156"}}),ft=new de({props:{name:"datasets.utils.logging.get_logger",anchor:"datasets.utils.logging.get_logger",parameters:[{name:"name",val:": typing.Optional[str] = None"}],source:"https://github.com/huggingface/datasets/blob/pr_3958/src/datasets/utils/logging.py#L76"}}),pt=new B({}),ut=new B({}),dt=new q({props:{code:"int('0b100', base=0)",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0b100&#x27;</span>, base=<span class="hljs-number">0</span>)
<span class="hljs-number">4</span>`}}),bt=new B({}),ht=new q({props:{code:"int('0b100', base=0)",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0b100&#x27;</span>, base=<span class="hljs-number">0</span>)
<span class="hljs-number">4</span>`}}),vt=new B({}),mt=new q({props:{code:"int('0b100', base=0)",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0b100&#x27;</span>, base=<span class="hljs-number">0</span>)
<span class="hljs-number">4</span>`}}),ct=new B({}),_t=new q({props:{code:"int('0b100', base=0)",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0b100&#x27;</span>, base=<span class="hljs-number">0</span>)
<span class="hljs-number">4</span>`}}),$t=new B({}),Et=new q({props:{code:"int('0b100', base=0)",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0b100&#x27;</span>, base=<span class="hljs-number">0</span>)
<span class="hljs-number">4</span>`}}),yt=new B({}),wt=new q({props:{code:"int('0b100', base=0)",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0b100&#x27;</span>, base=<span class="hljs-number">0</span>)
<span class="hljs-number">4</span>`}}),xt=new B({}),It=new q({props:{code:"int('0b100', base=0)",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0b100&#x27;</span>, base=<span class="hljs-number">0</span>)
<span class="hljs-number">4</span>`}}),Tt=new B({}),At=new q({props:{code:"int('0b100', base=0)",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0b100&#x27;</span>, base=<span class="hljs-number">0</span>)
<span class="hljs-number">4</span>`}}),{c(){E=r("meta"),V=f(),y=r("h1"),_=r("a"),N=r("span"),d(R.$$.fragment),Ye=f(),Y=r("span"),M=o("Logging methods"),be=f(),D=r("p"),J=o("\u{1F917} Datasets strives to be transparent and explicit about how it works, but this can be quite verbose at times. We have included a series of logging methods which allow you to easily adjust the level of verbosity of the entire library. Currently the default verbosity of the library is set to "),L=r("code"),Me=o("WARNING"),Je=o("."),k=f(),x=r("p"),Ke=o("To change the level of verbosity, use one of the direct setters. For instance, here is how to change the verbosity to the "),K=r("code"),Q=o("INFO"),Qe=o(" level:"),he=f(),d(P.$$.fragment),H=f(),$=r("p"),Xe=o("You can also use the environment variable "),j=r("code"),X=o("DATASETS_VERBOSITY"),Ze=o(" to override the default verbosity, and set it to one of the following: "),w=r("code"),W=o("debug"),I=o(", "),z=r("code"),Rt=o("info"),Pt=o(", "),ve=r("code"),Ot=o("warning"),me=o(", "),ce=r("code"),St=o("error"),Ct=o(", "),_e=r("code"),Ft=o("critical"),Dt=o(":"),Rr=f(),d(et.$$.fragment),Pr=f(),kt=r("p"),En=o("All the methods of this logging module are documented below. The main ones are:"),Or=f(),$e=r("ul"),Lt=r("li"),jt=r("a"),yn=o("datasets.logging.get_verbosity()"),wn=o(" to get the current level of verbosity in the logger"),xn=f(),Gt=r("li"),Bt=r("a"),In=o("datasets.logging.set_verbosity()"),Tn=o(" to set the verbosity to the level of your choice"),Sr=f(),Ee=r("p"),An=o("In order from the least to the most verbose (with their corresponding "),Ns=r("code"),Nn=o("int"),Rn=o(" values):"),Cr=f(),T=r("ol"),ye=r("li"),Rs=r("code"),Pn=o("datasets.logging.CRITICAL"),On=o(" or "),Ps=r("code"),Sn=o("datasets.logging.FATAL"),Cn=o(" (int value, 50): only report the most critical errors."),Fn=f(),Vt=r("li"),Os=r("code"),Dn=o("datasets.logging.ERROR"),kn=o(" (int value, 40): only report errors."),Ln=f(),we=r("li"),Ss=r("code"),jn=o("datasets.logging.WARNING"),Gn=o(" or "),Cs=r("code"),Bn=o("datasets.logging.WARN"),Vn=o(" (int value, 30): only reports error and warnings. This the default level used by the library."),Hn=f(),Ht=r("li"),Fs=r("code"),Wn=o("datasets.logging.INFO"),zn=o(" (int value, 20): reports error, warnings and basic information."),Un=f(),Wt=r("li"),Ds=r("code"),qn=o("datasets.logging.DEBUG"),Yn=o(" (int value, 10): report all information."),Fr=f(),Z=r("h2"),xe=r("a"),ks=r("span"),d(tt.$$.fragment),Mn=f(),Ls=r("span"),Jn=o("Functions"),Dr=f(),G=r("div"),d(st.$$.fragment),Kn=f(),js=r("p"),Qn=o("Return the current level for the HuggingFace datasets library\u2019s root logger."),Xn=f(),d(Ie.$$.fragment),kr=f(),ee=r("div"),d(rt.$$.fragment),Zn=f(),Gs=r("p"),ei=o("Set the level for the HuggingFace datasets library\u2019s root logger."),Lr=f(),O=r("div"),d(at.$$.fragment),ti=f(),Bs=r("p"),si=o("Set the level for the HuggingFace datasets library\u2019s root logger to INFO."),ri=f(),Vs=r("p"),ai=o("This will display most of the logging information and tqdm bars."),ni=f(),zt=r("p"),ii=o("Shortcut to "),Hs=r("code"),li=o("datasets.logging.set_verbosity(datasets.logging.INFO)"),jr=f(),S=r("div"),d(nt.$$.fragment),oi=f(),Ws=r("p"),gi=o("Set the level for the HuggingFace datasets library\u2019s root logger to WARNING."),fi=f(),zs=r("p"),pi=o("This will display only the warning and errors logging information and tqdm bars."),ui=f(),Ut=r("p"),di=o("Shortcut to "),Us=r("code"),bi=o("datasets.logging.set_verbosity(datasets.logging.WARNING)"),Gr=f(),C=r("div"),d(it.$$.fragment),hi=f(),qs=r("p"),vi=o("Set the level for the HuggingFace datasets library\u2019s root logger to DEBUG."),mi=f(),Ys=r("p"),ci=o("This will display all the logging information and tqdm bars."),_i=f(),qt=r("p"),$i=o("Shortcut to "),Ms=r("code"),Ei=o("datasets.logging.set_verbosity(datasets.logging.DEBUG)"),Br=f(),F=r("div"),d(lt.$$.fragment),yi=f(),Js=r("p"),wi=o("Set the level for the HuggingFace datasets library\u2019s root logger to ERROR."),xi=f(),Ks=r("p"),Ii=o("This will display only the errors logging information and tqdm bars."),Ti=f(),Yt=r("p"),Ai=o("Shortcut to "),Qs=r("code"),Ni=o("datasets.logging.set_verbosity(datasets.logging.ERROR)"),Vr=f(),te=r("div"),d(ot.$$.fragment),Ri=f(),Xs=r("p"),Pi=o(`Disable propagation of the library log outputs.
Note that log propagation is disabled by default.`),Hr=f(),se=r("div"),d(gt.$$.fragment),Oi=f(),Zs=r("p"),Si=o(`Enable propagation of the library log outputs.
Please disable the HuggingFace datasets library\u2019s default handler to prevent double logging if the root logger has
been configured.`),Wr=f(),re=r("div"),d(ft.$$.fragment),Ci=f(),er=r("p"),Fi=o(`Return a logger with the specified name.
This function can be used in dataset and metrics scripts.`),zr=f(),ae=r("h2"),Te=r("a"),tr=r("span"),d(pt.$$.fragment),Di=f(),sr=r("span"),ki=o("Levels"),Ur=f(),ne=r("h3"),Ae=r("a"),rr=r("span"),d(ut.$$.fragment),Li=f(),ar=r("span"),ji=o("datasets.logging.CRITICAL"),qr=f(),Mt=r("p"),Gi=o("datasets.logging.CRITICAL = 50"),Yr=f(),Jt=r("p"),Bi=o("int([x]) -> integer"),Mr=f(),Kt=r("p"),Vi=o("int(x, base=10) -> integer"),Jr=f(),Ne=r("p"),Hi=o(`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),nr=r("strong"),Wi=o("int"),zi=o(`().  For floating point
numbers, this truncates towards zero.`),Kr=f(),Qt=r("p"),Ui=o(`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),Qr=f(),d(dt.$$.fragment),Xr=f(),ie=r("h3"),Re=r("a"),ir=r("span"),d(bt.$$.fragment),qi=f(),lr=r("span"),Yi=o("datasets.logging.DEBUG"),Zr=f(),Xt=r("p"),Mi=o("datasets.logging.DEBUG = 10"),ea=f(),Zt=r("p"),Ji=o("int([x]) -> integer"),ta=f(),es=r("p"),Ki=o("int(x, base=10) -> integer"),sa=f(),Pe=r("p"),Qi=o(`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),or=r("strong"),Xi=o("int"),Zi=o(`().  For floating point
numbers, this truncates towards zero.`),ra=f(),ts=r("p"),el=o(`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),aa=f(),d(ht.$$.fragment),na=f(),le=r("h3"),Oe=r("a"),gr=r("span"),d(vt.$$.fragment),tl=f(),fr=r("span"),sl=o("datasets.logging.ERROR"),ia=f(),ss=r("p"),rl=o("datasets.logging.ERROR = 40"),la=f(),rs=r("p"),al=o("int([x]) -> integer"),oa=f(),as=r("p"),nl=o("int(x, base=10) -> integer"),ga=f(),Se=r("p"),il=o(`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),pr=r("strong"),ll=o("int"),ol=o(`().  For floating point
numbers, this truncates towards zero.`),fa=f(),ns=r("p"),gl=o(`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),pa=f(),d(mt.$$.fragment),ua=f(),oe=r("h3"),Ce=r("a"),ur=r("span"),d(ct.$$.fragment),fl=f(),dr=r("span"),pl=o("datasets.logging.FATAL"),da=f(),is=r("p"),ul=o("datasets.logging.FATAL = 50"),ba=f(),ls=r("p"),dl=o("int([x]) -> integer"),ha=f(),os=r("p"),bl=o("int(x, base=10) -> integer"),va=f(),Fe=r("p"),hl=o(`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),br=r("strong"),vl=o("int"),ml=o(`().  For floating point
numbers, this truncates towards zero.`),ma=f(),gs=r("p"),cl=o(`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),ca=f(),d(_t.$$.fragment),_a=f(),ge=r("h3"),De=r("a"),hr=r("span"),d($t.$$.fragment),_l=f(),vr=r("span"),$l=o("datasets.logging.INFO"),$a=f(),fs=r("p"),El=o("datasets.logging.INFO = 20"),Ea=f(),ps=r("p"),yl=o("int([x]) -> integer"),ya=f(),us=r("p"),wl=o("int(x, base=10) -> integer"),wa=f(),ke=r("p"),xl=o(`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),mr=r("strong"),Il=o("int"),Tl=o(`().  For floating point
numbers, this truncates towards zero.`),xa=f(),ds=r("p"),Al=o(`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),Ia=f(),d(Et.$$.fragment),Ta=f(),fe=r("h3"),Le=r("a"),cr=r("span"),d(yt.$$.fragment),Nl=f(),_r=r("span"),Rl=o("datasets.logging.NOTSET"),Aa=f(),bs=r("p"),Pl=o("datasets.logging.NOTSET = 0"),Na=f(),hs=r("p"),Ol=o("int([x]) -> integer"),Ra=f(),vs=r("p"),Sl=o("int(x, base=10) -> integer"),Pa=f(),je=r("p"),Cl=o(`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),$r=r("strong"),Fl=o("int"),Dl=o(`().  For floating point
numbers, this truncates towards zero.`),Oa=f(),ms=r("p"),kl=o(`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),Sa=f(),d(wt.$$.fragment),Ca=f(),pe=r("h3"),Ge=r("a"),Er=r("span"),d(xt.$$.fragment),Ll=f(),yr=r("span"),jl=o("datasets.logging.WARN"),Fa=f(),cs=r("p"),Gl=o("datasets.logging.WARN = 30"),Da=f(),_s=r("p"),Bl=o("int([x]) -> integer"),ka=f(),$s=r("p"),Vl=o("int(x, base=10) -> integer"),La=f(),Be=r("p"),Hl=o(`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),wr=r("strong"),Wl=o("int"),zl=o(`().  For floating point
numbers, this truncates towards zero.`),ja=f(),Es=r("p"),Ul=o(`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),Ga=f(),d(It.$$.fragment),Ba=f(),ue=r("h3"),Ve=r("a"),xr=r("span"),d(Tt.$$.fragment),ql=f(),Ir=r("span"),Yl=o("datasets.logging.WARNING"),Va=f(),ys=r("p"),Ml=o("datasets.logging.WARNING = 30"),Ha=f(),ws=r("p"),Jl=o("int([x]) -> integer"),Wa=f(),xs=r("p"),Kl=o("int(x, base=10) -> integer"),za=f(),He=r("p"),Ql=o(`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),Tr=r("strong"),Xl=o("int"),Zl=o(`().  For floating point
numbers, this truncates towards zero.`),Ua=f(),Is=r("p"),eo=o(`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),qa=f(),d(At.$$.fragment),this.h()},l(e){const i=vf('[data-svelte="svelte-1phssyn"]',document.head);E=a(i,"META",{name:!0,content:!0}),i.forEach(t),V=p(e),y=a(e,"H1",{class:!0});var Nt=n(y);_=a(Nt,"A",{id:!0,class:!0,href:!0});var fo=n(_);N=a(fo,"SPAN",{});var po=n(N);b(R.$$.fragment,po),po.forEach(t),fo.forEach(t),Ye=p(Nt),Y=a(Nt,"SPAN",{});var uo=n(Y);M=g(uo,"Logging methods"),uo.forEach(t),Nt.forEach(t),be=p(e),D=a(e,"P",{});var Ma=n(D);J=g(Ma,"\u{1F917} Datasets strives to be transparent and explicit about how it works, but this can be quite verbose at times. We have included a series of logging methods which allow you to easily adjust the level of verbosity of the entire library. Currently the default verbosity of the library is set to "),L=a(Ma,"CODE",{});var bo=n(L);Me=g(bo,"WARNING"),bo.forEach(t),Je=g(Ma,"."),Ma.forEach(t),k=p(e),x=a(e,"P",{});var Ja=n(x);Ke=g(Ja,"To change the level of verbosity, use one of the direct setters. For instance, here is how to change the verbosity to the "),K=a(Ja,"CODE",{});var ho=n(K);Q=g(ho,"INFO"),ho.forEach(t),Qe=g(Ja," level:"),Ja.forEach(t),he=p(e),b(P.$$.fragment,e),H=p(e),$=a(e,"P",{});var A=n($);Xe=g(A,"You can also use the environment variable "),j=a(A,"CODE",{});var vo=n(j);X=g(vo,"DATASETS_VERBOSITY"),vo.forEach(t),Ze=g(A," to override the default verbosity, and set it to one of the following: "),w=a(A,"CODE",{});var mo=n(w);W=g(mo,"debug"),mo.forEach(t),I=g(A,", "),z=a(A,"CODE",{});var co=n(z);Rt=g(co,"info"),co.forEach(t),Pt=g(A,", "),ve=a(A,"CODE",{});var _o=n(ve);Ot=g(_o,"warning"),_o.forEach(t),me=g(A,", "),ce=a(A,"CODE",{});var $o=n(ce);St=g($o,"error"),$o.forEach(t),Ct=g(A,", "),_e=a(A,"CODE",{});var Eo=n(_e);Ft=g(Eo,"critical"),Eo.forEach(t),Dt=g(A,":"),A.forEach(t),Rr=p(e),b(et.$$.fragment,e),Pr=p(e),kt=a(e,"P",{});var yo=n(kt);En=g(yo,"All the methods of this logging module are documented below. The main ones are:"),yo.forEach(t),Or=p(e),$e=a(e,"UL",{});var Ka=n($e);Lt=a(Ka,"LI",{});var to=n(Lt);jt=a(to,"A",{href:!0});var wo=n(jt);yn=g(wo,"datasets.logging.get_verbosity()"),wo.forEach(t),wn=g(to," to get the current level of verbosity in the logger"),to.forEach(t),xn=p(Ka),Gt=a(Ka,"LI",{});var so=n(Gt);Bt=a(so,"A",{href:!0});var xo=n(Bt);In=g(xo,"datasets.logging.set_verbosity()"),xo.forEach(t),Tn=g(so," to set the verbosity to the level of your choice"),so.forEach(t),Ka.forEach(t),Sr=p(e),Ee=a(e,"P",{});var Qa=n(Ee);An=g(Qa,"In order from the least to the most verbose (with their corresponding "),Ns=a(Qa,"CODE",{});var Io=n(Ns);Nn=g(Io,"int"),Io.forEach(t),Rn=g(Qa," values):"),Qa.forEach(t),Cr=p(e),T=a(e,"OL",{});var U=n(T);ye=a(U,"LI",{});var Ar=n(ye);Rs=a(Ar,"CODE",{});var To=n(Rs);Pn=g(To,"datasets.logging.CRITICAL"),To.forEach(t),On=g(Ar," or "),Ps=a(Ar,"CODE",{});var Ao=n(Ps);Sn=g(Ao,"datasets.logging.FATAL"),Ao.forEach(t),Cn=g(Ar," (int value, 50): only report the most critical errors."),Ar.forEach(t),Fn=p(U),Vt=a(U,"LI",{});var ro=n(Vt);Os=a(ro,"CODE",{});var No=n(Os);Dn=g(No,"datasets.logging.ERROR"),No.forEach(t),kn=g(ro," (int value, 40): only report errors."),ro.forEach(t),Ln=p(U),we=a(U,"LI",{});var Nr=n(we);Ss=a(Nr,"CODE",{});var Ro=n(Ss);jn=g(Ro,"datasets.logging.WARNING"),Ro.forEach(t),Gn=g(Nr," or "),Cs=a(Nr,"CODE",{});var Po=n(Cs);Bn=g(Po,"datasets.logging.WARN"),Po.forEach(t),Vn=g(Nr," (int value, 30): only reports error and warnings. This the default level used by the library."),Nr.forEach(t),Hn=p(U),Ht=a(U,"LI",{});var ao=n(Ht);Fs=a(ao,"CODE",{});var Oo=n(Fs);Wn=g(Oo,"datasets.logging.INFO"),Oo.forEach(t),zn=g(ao," (int value, 20): reports error, warnings and basic information."),ao.forEach(t),Un=p(U),Wt=a(U,"LI",{});var no=n(Wt);Ds=a(no,"CODE",{});var So=n(Ds);qn=g(So,"datasets.logging.DEBUG"),So.forEach(t),Yn=g(no," (int value, 10): report all information."),no.forEach(t),U.forEach(t),Fr=p(e),Z=a(e,"H2",{class:!0});var Xa=n(Z);xe=a(Xa,"A",{id:!0,class:!0,href:!0});var Co=n(xe);ks=a(Co,"SPAN",{});var Fo=n(ks);b(tt.$$.fragment,Fo),Fo.forEach(t),Co.forEach(t),Mn=p(Xa),Ls=a(Xa,"SPAN",{});var Do=n(Ls);Jn=g(Do,"Functions"),Do.forEach(t),Xa.forEach(t),Dr=p(e),G=a(e,"DIV",{class:!0});var Ts=n(G);b(st.$$.fragment,Ts),Kn=p(Ts),js=a(Ts,"P",{});var ko=n(js);Qn=g(ko,"Return the current level for the HuggingFace datasets library\u2019s root logger."),ko.forEach(t),Xn=p(Ts),b(Ie.$$.fragment,Ts),Ts.forEach(t),kr=p(e),ee=a(e,"DIV",{class:!0});var Za=n(ee);b(rt.$$.fragment,Za),Zn=p(Za),Gs=a(Za,"P",{});var Lo=n(Gs);ei=g(Lo,"Set the level for the HuggingFace datasets library\u2019s root logger."),Lo.forEach(t),Za.forEach(t),Lr=p(e),O=a(e,"DIV",{class:!0});var We=n(O);b(at.$$.fragment,We),ti=p(We),Bs=a(We,"P",{});var jo=n(Bs);si=g(jo,"Set the level for the HuggingFace datasets library\u2019s root logger to INFO."),jo.forEach(t),ri=p(We),Vs=a(We,"P",{});var Go=n(Vs);ai=g(Go,"This will display most of the logging information and tqdm bars."),Go.forEach(t),ni=p(We),zt=a(We,"P",{});var io=n(zt);ii=g(io,"Shortcut to "),Hs=a(io,"CODE",{});var Bo=n(Hs);li=g(Bo,"datasets.logging.set_verbosity(datasets.logging.INFO)"),Bo.forEach(t),io.forEach(t),We.forEach(t),jr=p(e),S=a(e,"DIV",{class:!0});var ze=n(S);b(nt.$$.fragment,ze),oi=p(ze),Ws=a(ze,"P",{});var Vo=n(Ws);gi=g(Vo,"Set the level for the HuggingFace datasets library\u2019s root logger to WARNING."),Vo.forEach(t),fi=p(ze),zs=a(ze,"P",{});var Ho=n(zs);pi=g(Ho,"This will display only the warning and errors logging information and tqdm bars."),Ho.forEach(t),ui=p(ze),Ut=a(ze,"P",{});var lo=n(Ut);di=g(lo,"Shortcut to "),Us=a(lo,"CODE",{});var Wo=n(Us);bi=g(Wo,"datasets.logging.set_verbosity(datasets.logging.WARNING)"),Wo.forEach(t),lo.forEach(t),ze.forEach(t),Gr=p(e),C=a(e,"DIV",{class:!0});var Ue=n(C);b(it.$$.fragment,Ue),hi=p(Ue),qs=a(Ue,"P",{});var zo=n(qs);vi=g(zo,"Set the level for the HuggingFace datasets library\u2019s root logger to DEBUG."),zo.forEach(t),mi=p(Ue),Ys=a(Ue,"P",{});var Uo=n(Ys);ci=g(Uo,"This will display all the logging information and tqdm bars."),Uo.forEach(t),_i=p(Ue),qt=a(Ue,"P",{});var oo=n(qt);$i=g(oo,"Shortcut to "),Ms=a(oo,"CODE",{});var qo=n(Ms);Ei=g(qo,"datasets.logging.set_verbosity(datasets.logging.DEBUG)"),qo.forEach(t),oo.forEach(t),Ue.forEach(t),Br=p(e),F=a(e,"DIV",{class:!0});var qe=n(F);b(lt.$$.fragment,qe),yi=p(qe),Js=a(qe,"P",{});var Yo=n(Js);wi=g(Yo,"Set the level for the HuggingFace datasets library\u2019s root logger to ERROR."),Yo.forEach(t),xi=p(qe),Ks=a(qe,"P",{});var Mo=n(Ks);Ii=g(Mo,"This will display only the errors logging information and tqdm bars."),Mo.forEach(t),Ti=p(qe),Yt=a(qe,"P",{});var go=n(Yt);Ai=g(go,"Shortcut to "),Qs=a(go,"CODE",{});var Jo=n(Qs);Ni=g(Jo,"datasets.logging.set_verbosity(datasets.logging.ERROR)"),Jo.forEach(t),go.forEach(t),qe.forEach(t),Vr=p(e),te=a(e,"DIV",{class:!0});var en=n(te);b(ot.$$.fragment,en),Ri=p(en),Xs=a(en,"P",{});var Ko=n(Xs);Pi=g(Ko,`Disable propagation of the library log outputs.
Note that log propagation is disabled by default.`),Ko.forEach(t),en.forEach(t),Hr=p(e),se=a(e,"DIV",{class:!0});var tn=n(se);b(gt.$$.fragment,tn),Oi=p(tn),Zs=a(tn,"P",{});var Qo=n(Zs);Si=g(Qo,`Enable propagation of the library log outputs.
Please disable the HuggingFace datasets library\u2019s default handler to prevent double logging if the root logger has
been configured.`),Qo.forEach(t),tn.forEach(t),Wr=p(e),re=a(e,"DIV",{class:!0});var sn=n(re);b(ft.$$.fragment,sn),Ci=p(sn),er=a(sn,"P",{});var Xo=n(er);Fi=g(Xo,`Return a logger with the specified name.
This function can be used in dataset and metrics scripts.`),Xo.forEach(t),sn.forEach(t),zr=p(e),ae=a(e,"H2",{class:!0});var rn=n(ae);Te=a(rn,"A",{id:!0,class:!0,href:!0});var Zo=n(Te);tr=a(Zo,"SPAN",{});var eg=n(tr);b(pt.$$.fragment,eg),eg.forEach(t),Zo.forEach(t),Di=p(rn),sr=a(rn,"SPAN",{});var tg=n(sr);ki=g(tg,"Levels"),tg.forEach(t),rn.forEach(t),Ur=p(e),ne=a(e,"H3",{class:!0});var an=n(ne);Ae=a(an,"A",{id:!0,class:!0,href:!0});var sg=n(Ae);rr=a(sg,"SPAN",{});var rg=n(rr);b(ut.$$.fragment,rg),rg.forEach(t),sg.forEach(t),Li=p(an),ar=a(an,"SPAN",{});var ag=n(ar);ji=g(ag,"datasets.logging.CRITICAL"),ag.forEach(t),an.forEach(t),qr=p(e),Mt=a(e,"P",{});var ng=n(Mt);Gi=g(ng,"datasets.logging.CRITICAL = 50"),ng.forEach(t),Yr=p(e),Jt=a(e,"P",{});var ig=n(Jt);Bi=g(ig,"int([x]) -> integer"),ig.forEach(t),Mr=p(e),Kt=a(e,"P",{});var lg=n(Kt);Vi=g(lg,"int(x, base=10) -> integer"),lg.forEach(t),Jr=p(e),Ne=a(e,"P",{});var nn=n(Ne);Hi=g(nn,`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),nr=a(nn,"STRONG",{});var og=n(nr);Wi=g(og,"int"),og.forEach(t),zi=g(nn,`().  For floating point
numbers, this truncates towards zero.`),nn.forEach(t),Kr=p(e),Qt=a(e,"P",{});var gg=n(Qt);Ui=g(gg,`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),gg.forEach(t),Qr=p(e),b(dt.$$.fragment,e),Xr=p(e),ie=a(e,"H3",{class:!0});var ln=n(ie);Re=a(ln,"A",{id:!0,class:!0,href:!0});var fg=n(Re);ir=a(fg,"SPAN",{});var pg=n(ir);b(bt.$$.fragment,pg),pg.forEach(t),fg.forEach(t),qi=p(ln),lr=a(ln,"SPAN",{});var ug=n(lr);Yi=g(ug,"datasets.logging.DEBUG"),ug.forEach(t),ln.forEach(t),Zr=p(e),Xt=a(e,"P",{});var dg=n(Xt);Mi=g(dg,"datasets.logging.DEBUG = 10"),dg.forEach(t),ea=p(e),Zt=a(e,"P",{});var bg=n(Zt);Ji=g(bg,"int([x]) -> integer"),bg.forEach(t),ta=p(e),es=a(e,"P",{});var hg=n(es);Ki=g(hg,"int(x, base=10) -> integer"),hg.forEach(t),sa=p(e),Pe=a(e,"P",{});var on=n(Pe);Qi=g(on,`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),or=a(on,"STRONG",{});var vg=n(or);Xi=g(vg,"int"),vg.forEach(t),Zi=g(on,`().  For floating point
numbers, this truncates towards zero.`),on.forEach(t),ra=p(e),ts=a(e,"P",{});var mg=n(ts);el=g(mg,`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),mg.forEach(t),aa=p(e),b(ht.$$.fragment,e),na=p(e),le=a(e,"H3",{class:!0});var gn=n(le);Oe=a(gn,"A",{id:!0,class:!0,href:!0});var cg=n(Oe);gr=a(cg,"SPAN",{});var _g=n(gr);b(vt.$$.fragment,_g),_g.forEach(t),cg.forEach(t),tl=p(gn),fr=a(gn,"SPAN",{});var $g=n(fr);sl=g($g,"datasets.logging.ERROR"),$g.forEach(t),gn.forEach(t),ia=p(e),ss=a(e,"P",{});var Eg=n(ss);rl=g(Eg,"datasets.logging.ERROR = 40"),Eg.forEach(t),la=p(e),rs=a(e,"P",{});var yg=n(rs);al=g(yg,"int([x]) -> integer"),yg.forEach(t),oa=p(e),as=a(e,"P",{});var wg=n(as);nl=g(wg,"int(x, base=10) -> integer"),wg.forEach(t),ga=p(e),Se=a(e,"P",{});var fn=n(Se);il=g(fn,`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),pr=a(fn,"STRONG",{});var xg=n(pr);ll=g(xg,"int"),xg.forEach(t),ol=g(fn,`().  For floating point
numbers, this truncates towards zero.`),fn.forEach(t),fa=p(e),ns=a(e,"P",{});var Ig=n(ns);gl=g(Ig,`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),Ig.forEach(t),pa=p(e),b(mt.$$.fragment,e),ua=p(e),oe=a(e,"H3",{class:!0});var pn=n(oe);Ce=a(pn,"A",{id:!0,class:!0,href:!0});var Tg=n(Ce);ur=a(Tg,"SPAN",{});var Ag=n(ur);b(ct.$$.fragment,Ag),Ag.forEach(t),Tg.forEach(t),fl=p(pn),dr=a(pn,"SPAN",{});var Ng=n(dr);pl=g(Ng,"datasets.logging.FATAL"),Ng.forEach(t),pn.forEach(t),da=p(e),is=a(e,"P",{});var Rg=n(is);ul=g(Rg,"datasets.logging.FATAL = 50"),Rg.forEach(t),ba=p(e),ls=a(e,"P",{});var Pg=n(ls);dl=g(Pg,"int([x]) -> integer"),Pg.forEach(t),ha=p(e),os=a(e,"P",{});var Og=n(os);bl=g(Og,"int(x, base=10) -> integer"),Og.forEach(t),va=p(e),Fe=a(e,"P",{});var un=n(Fe);hl=g(un,`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),br=a(un,"STRONG",{});var Sg=n(br);vl=g(Sg,"int"),Sg.forEach(t),ml=g(un,`().  For floating point
numbers, this truncates towards zero.`),un.forEach(t),ma=p(e),gs=a(e,"P",{});var Cg=n(gs);cl=g(Cg,`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),Cg.forEach(t),ca=p(e),b(_t.$$.fragment,e),_a=p(e),ge=a(e,"H3",{class:!0});var dn=n(ge);De=a(dn,"A",{id:!0,class:!0,href:!0});var Fg=n(De);hr=a(Fg,"SPAN",{});var Dg=n(hr);b($t.$$.fragment,Dg),Dg.forEach(t),Fg.forEach(t),_l=p(dn),vr=a(dn,"SPAN",{});var kg=n(vr);$l=g(kg,"datasets.logging.INFO"),kg.forEach(t),dn.forEach(t),$a=p(e),fs=a(e,"P",{});var Lg=n(fs);El=g(Lg,"datasets.logging.INFO = 20"),Lg.forEach(t),Ea=p(e),ps=a(e,"P",{});var jg=n(ps);yl=g(jg,"int([x]) -> integer"),jg.forEach(t),ya=p(e),us=a(e,"P",{});var Gg=n(us);wl=g(Gg,"int(x, base=10) -> integer"),Gg.forEach(t),wa=p(e),ke=a(e,"P",{});var bn=n(ke);xl=g(bn,`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),mr=a(bn,"STRONG",{});var Bg=n(mr);Il=g(Bg,"int"),Bg.forEach(t),Tl=g(bn,`().  For floating point
numbers, this truncates towards zero.`),bn.forEach(t),xa=p(e),ds=a(e,"P",{});var Vg=n(ds);Al=g(Vg,`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),Vg.forEach(t),Ia=p(e),b(Et.$$.fragment,e),Ta=p(e),fe=a(e,"H3",{class:!0});var hn=n(fe);Le=a(hn,"A",{id:!0,class:!0,href:!0});var Hg=n(Le);cr=a(Hg,"SPAN",{});var Wg=n(cr);b(yt.$$.fragment,Wg),Wg.forEach(t),Hg.forEach(t),Nl=p(hn),_r=a(hn,"SPAN",{});var zg=n(_r);Rl=g(zg,"datasets.logging.NOTSET"),zg.forEach(t),hn.forEach(t),Aa=p(e),bs=a(e,"P",{});var Ug=n(bs);Pl=g(Ug,"datasets.logging.NOTSET = 0"),Ug.forEach(t),Na=p(e),hs=a(e,"P",{});var qg=n(hs);Ol=g(qg,"int([x]) -> integer"),qg.forEach(t),Ra=p(e),vs=a(e,"P",{});var Yg=n(vs);Sl=g(Yg,"int(x, base=10) -> integer"),Yg.forEach(t),Pa=p(e),je=a(e,"P",{});var vn=n(je);Cl=g(vn,`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),$r=a(vn,"STRONG",{});var Mg=n($r);Fl=g(Mg,"int"),Mg.forEach(t),Dl=g(vn,`().  For floating point
numbers, this truncates towards zero.`),vn.forEach(t),Oa=p(e),ms=a(e,"P",{});var Jg=n(ms);kl=g(Jg,`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),Jg.forEach(t),Sa=p(e),b(wt.$$.fragment,e),Ca=p(e),pe=a(e,"H3",{class:!0});var mn=n(pe);Ge=a(mn,"A",{id:!0,class:!0,href:!0});var Kg=n(Ge);Er=a(Kg,"SPAN",{});var Qg=n(Er);b(xt.$$.fragment,Qg),Qg.forEach(t),Kg.forEach(t),Ll=p(mn),yr=a(mn,"SPAN",{});var Xg=n(yr);jl=g(Xg,"datasets.logging.WARN"),Xg.forEach(t),mn.forEach(t),Fa=p(e),cs=a(e,"P",{});var Zg=n(cs);Gl=g(Zg,"datasets.logging.WARN = 30"),Zg.forEach(t),Da=p(e),_s=a(e,"P",{});var ef=n(_s);Bl=g(ef,"int([x]) -> integer"),ef.forEach(t),ka=p(e),$s=a(e,"P",{});var tf=n($s);Vl=g(tf,"int(x, base=10) -> integer"),tf.forEach(t),La=p(e),Be=a(e,"P",{});var cn=n(Be);Hl=g(cn,`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),wr=a(cn,"STRONG",{});var sf=n(wr);Wl=g(sf,"int"),sf.forEach(t),zl=g(cn,`().  For floating point
numbers, this truncates towards zero.`),cn.forEach(t),ja=p(e),Es=a(e,"P",{});var rf=n(Es);Ul=g(rf,`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),rf.forEach(t),Ga=p(e),b(It.$$.fragment,e),Ba=p(e),ue=a(e,"H3",{class:!0});var _n=n(ue);Ve=a(_n,"A",{id:!0,class:!0,href:!0});var af=n(Ve);xr=a(af,"SPAN",{});var nf=n(xr);b(Tt.$$.fragment,nf),nf.forEach(t),af.forEach(t),ql=p(_n),Ir=a(_n,"SPAN",{});var lf=n(Ir);Yl=g(lf,"datasets.logging.WARNING"),lf.forEach(t),_n.forEach(t),Va=p(e),ys=a(e,"P",{});var of=n(ys);Ml=g(of,"datasets.logging.WARNING = 30"),of.forEach(t),Ha=p(e),ws=a(e,"P",{});var gf=n(ws);Jl=g(gf,"int([x]) -> integer"),gf.forEach(t),Wa=p(e),xs=a(e,"P",{});var ff=n(xs);Kl=g(ff,"int(x, base=10) -> integer"),ff.forEach(t),za=p(e),He=a(e,"P",{});var $n=n(He);Ql=g($n,`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),Tr=a($n,"STRONG",{});var pf=n(Tr);Xl=g(pf,"int"),pf.forEach(t),Zl=g($n,`().  For floating point
numbers, this truncates towards zero.`),$n.forEach(t),Ua=p(e),Is=a(e,"P",{});var uf=n(Is);eo=g(uf,`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),uf.forEach(t),qa=p(e),b(At.$$.fragment,e),this.h()},h(){u(E,"name","hf:doc:metadata"),u(E,"content",JSON.stringify($f)),u(_,"id","logging-methods"),u(_,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(_,"href","#logging-methods"),u(y,"class","relative group"),u(jt,"href","/docs/datasets/pr_3958/en/package_reference/logging_methods#datasets.utils.logging.get_verbosity"),u(Bt,"href","/docs/datasets/pr_3958/en/package_reference/logging_methods#datasets.utils.logging.set_verbosity"),u(xe,"id","datasets.utils.logging.get_verbosity"),u(xe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(xe,"href","#datasets.utils.logging.get_verbosity"),u(Z,"class","relative group"),u(G,"class","docstring"),u(ee,"class","docstring"),u(O,"class","docstring"),u(S,"class","docstring"),u(C,"class","docstring"),u(F,"class","docstring"),u(te,"class","docstring"),u(se,"class","docstring"),u(re,"class","docstring"),u(Te,"id","levels"),u(Te,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(Te,"href","#levels"),u(ae,"class","relative group"),u(Ae,"id","datasetsloggingcritical"),u(Ae,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(Ae,"href","#datasetsloggingcritical"),u(ne,"class","relative group"),u(Re,"id","datasetsloggingdebug"),u(Re,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(Re,"href","#datasetsloggingdebug"),u(ie,"class","relative group"),u(Oe,"id","datasetsloggingerror"),u(Oe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(Oe,"href","#datasetsloggingerror"),u(le,"class","relative group"),u(Ce,"id","datasetsloggingfatal"),u(Ce,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(Ce,"href","#datasetsloggingfatal"),u(oe,"class","relative group"),u(De,"id","datasetslogginginfo"),u(De,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(De,"href","#datasetslogginginfo"),u(ge,"class","relative group"),u(Le,"id","datasetsloggingnotset"),u(Le,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(Le,"href","#datasetsloggingnotset"),u(fe,"class","relative group"),u(Ge,"id","datasetsloggingwarn"),u(Ge,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(Ge,"href","#datasetsloggingwarn"),u(pe,"class","relative group"),u(Ve,"id","datasetsloggingwarning"),u(Ve,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),u(Ve,"href","#datasetsloggingwarning"),u(ue,"class","relative group")},m(e,i){s(document.head,E),l(e,V,i),l(e,y,i),s(y,_),s(_,N),h(R,N,null),s(y,Ye),s(y,Y),s(Y,M),l(e,be,i),l(e,D,i),s(D,J),s(D,L),s(L,Me),s(D,Je),l(e,k,i),l(e,x,i),s(x,Ke),s(x,K),s(K,Q),s(x,Qe),l(e,he,i),h(P,e,i),l(e,H,i),l(e,$,i),s($,Xe),s($,j),s(j,X),s($,Ze),s($,w),s(w,W),s($,I),s($,z),s(z,Rt),s($,Pt),s($,ve),s(ve,Ot),s($,me),s($,ce),s(ce,St),s($,Ct),s($,_e),s(_e,Ft),s($,Dt),l(e,Rr,i),h(et,e,i),l(e,Pr,i),l(e,kt,i),s(kt,En),l(e,Or,i),l(e,$e,i),s($e,Lt),s(Lt,jt),s(jt,yn),s(Lt,wn),s($e,xn),s($e,Gt),s(Gt,Bt),s(Bt,In),s(Gt,Tn),l(e,Sr,i),l(e,Ee,i),s(Ee,An),s(Ee,Ns),s(Ns,Nn),s(Ee,Rn),l(e,Cr,i),l(e,T,i),s(T,ye),s(ye,Rs),s(Rs,Pn),s(ye,On),s(ye,Ps),s(Ps,Sn),s(ye,Cn),s(T,Fn),s(T,Vt),s(Vt,Os),s(Os,Dn),s(Vt,kn),s(T,Ln),s(T,we),s(we,Ss),s(Ss,jn),s(we,Gn),s(we,Cs),s(Cs,Bn),s(we,Vn),s(T,Hn),s(T,Ht),s(Ht,Fs),s(Fs,Wn),s(Ht,zn),s(T,Un),s(T,Wt),s(Wt,Ds),s(Ds,qn),s(Wt,Yn),l(e,Fr,i),l(e,Z,i),s(Z,xe),s(xe,ks),h(tt,ks,null),s(Z,Mn),s(Z,Ls),s(Ls,Jn),l(e,Dr,i),l(e,G,i),h(st,G,null),s(G,Kn),s(G,js),s(js,Qn),s(G,Xn),h(Ie,G,null),l(e,kr,i),l(e,ee,i),h(rt,ee,null),s(ee,Zn),s(ee,Gs),s(Gs,ei),l(e,Lr,i),l(e,O,i),h(at,O,null),s(O,ti),s(O,Bs),s(Bs,si),s(O,ri),s(O,Vs),s(Vs,ai),s(O,ni),s(O,zt),s(zt,ii),s(zt,Hs),s(Hs,li),l(e,jr,i),l(e,S,i),h(nt,S,null),s(S,oi),s(S,Ws),s(Ws,gi),s(S,fi),s(S,zs),s(zs,pi),s(S,ui),s(S,Ut),s(Ut,di),s(Ut,Us),s(Us,bi),l(e,Gr,i),l(e,C,i),h(it,C,null),s(C,hi),s(C,qs),s(qs,vi),s(C,mi),s(C,Ys),s(Ys,ci),s(C,_i),s(C,qt),s(qt,$i),s(qt,Ms),s(Ms,Ei),l(e,Br,i),l(e,F,i),h(lt,F,null),s(F,yi),s(F,Js),s(Js,wi),s(F,xi),s(F,Ks),s(Ks,Ii),s(F,Ti),s(F,Yt),s(Yt,Ai),s(Yt,Qs),s(Qs,Ni),l(e,Vr,i),l(e,te,i),h(ot,te,null),s(te,Ri),s(te,Xs),s(Xs,Pi),l(e,Hr,i),l(e,se,i),h(gt,se,null),s(se,Oi),s(se,Zs),s(Zs,Si),l(e,Wr,i),l(e,re,i),h(ft,re,null),s(re,Ci),s(re,er),s(er,Fi),l(e,zr,i),l(e,ae,i),s(ae,Te),s(Te,tr),h(pt,tr,null),s(ae,Di),s(ae,sr),s(sr,ki),l(e,Ur,i),l(e,ne,i),s(ne,Ae),s(Ae,rr),h(ut,rr,null),s(ne,Li),s(ne,ar),s(ar,ji),l(e,qr,i),l(e,Mt,i),s(Mt,Gi),l(e,Yr,i),l(e,Jt,i),s(Jt,Bi),l(e,Mr,i),l(e,Kt,i),s(Kt,Vi),l(e,Jr,i),l(e,Ne,i),s(Ne,Hi),s(Ne,nr),s(nr,Wi),s(Ne,zi),l(e,Kr,i),l(e,Qt,i),s(Qt,Ui),l(e,Qr,i),h(dt,e,i),l(e,Xr,i),l(e,ie,i),s(ie,Re),s(Re,ir),h(bt,ir,null),s(ie,qi),s(ie,lr),s(lr,Yi),l(e,Zr,i),l(e,Xt,i),s(Xt,Mi),l(e,ea,i),l(e,Zt,i),s(Zt,Ji),l(e,ta,i),l(e,es,i),s(es,Ki),l(e,sa,i),l(e,Pe,i),s(Pe,Qi),s(Pe,or),s(or,Xi),s(Pe,Zi),l(e,ra,i),l(e,ts,i),s(ts,el),l(e,aa,i),h(ht,e,i),l(e,na,i),l(e,le,i),s(le,Oe),s(Oe,gr),h(vt,gr,null),s(le,tl),s(le,fr),s(fr,sl),l(e,ia,i),l(e,ss,i),s(ss,rl),l(e,la,i),l(e,rs,i),s(rs,al),l(e,oa,i),l(e,as,i),s(as,nl),l(e,ga,i),l(e,Se,i),s(Se,il),s(Se,pr),s(pr,ll),s(Se,ol),l(e,fa,i),l(e,ns,i),s(ns,gl),l(e,pa,i),h(mt,e,i),l(e,ua,i),l(e,oe,i),s(oe,Ce),s(Ce,ur),h(ct,ur,null),s(oe,fl),s(oe,dr),s(dr,pl),l(e,da,i),l(e,is,i),s(is,ul),l(e,ba,i),l(e,ls,i),s(ls,dl),l(e,ha,i),l(e,os,i),s(os,bl),l(e,va,i),l(e,Fe,i),s(Fe,hl),s(Fe,br),s(br,vl),s(Fe,ml),l(e,ma,i),l(e,gs,i),s(gs,cl),l(e,ca,i),h(_t,e,i),l(e,_a,i),l(e,ge,i),s(ge,De),s(De,hr),h($t,hr,null),s(ge,_l),s(ge,vr),s(vr,$l),l(e,$a,i),l(e,fs,i),s(fs,El),l(e,Ea,i),l(e,ps,i),s(ps,yl),l(e,ya,i),l(e,us,i),s(us,wl),l(e,wa,i),l(e,ke,i),s(ke,xl),s(ke,mr),s(mr,Il),s(ke,Tl),l(e,xa,i),l(e,ds,i),s(ds,Al),l(e,Ia,i),h(Et,e,i),l(e,Ta,i),l(e,fe,i),s(fe,Le),s(Le,cr),h(yt,cr,null),s(fe,Nl),s(fe,_r),s(_r,Rl),l(e,Aa,i),l(e,bs,i),s(bs,Pl),l(e,Na,i),l(e,hs,i),s(hs,Ol),l(e,Ra,i),l(e,vs,i),s(vs,Sl),l(e,Pa,i),l(e,je,i),s(je,Cl),s(je,$r),s($r,Fl),s(je,Dl),l(e,Oa,i),l(e,ms,i),s(ms,kl),l(e,Sa,i),h(wt,e,i),l(e,Ca,i),l(e,pe,i),s(pe,Ge),s(Ge,Er),h(xt,Er,null),s(pe,Ll),s(pe,yr),s(yr,jl),l(e,Fa,i),l(e,cs,i),s(cs,Gl),l(e,Da,i),l(e,_s,i),s(_s,Bl),l(e,ka,i),l(e,$s,i),s($s,Vl),l(e,La,i),l(e,Be,i),s(Be,Hl),s(Be,wr),s(wr,Wl),s(Be,zl),l(e,ja,i),l(e,Es,i),s(Es,Ul),l(e,Ga,i),h(It,e,i),l(e,Ba,i),l(e,ue,i),s(ue,Ve),s(Ve,xr),h(Tt,xr,null),s(ue,ql),s(ue,Ir),s(Ir,Yl),l(e,Va,i),l(e,ys,i),s(ys,Ml),l(e,Ha,i),l(e,ws,i),s(ws,Jl),l(e,Wa,i),l(e,xs,i),s(xs,Kl),l(e,za,i),l(e,He,i),s(He,Ql),s(He,Tr),s(Tr,Xl),s(He,Zl),l(e,Ua,i),l(e,Is,i),s(Is,eo),l(e,qa,i),h(At,e,i),Ya=!0},p(e,[i]){const Nt={};i&2&&(Nt.$$scope={dirty:i,ctx:e}),Ie.$set(Nt)},i(e){Ya||(v(R.$$.fragment,e),v(P.$$.fragment,e),v(et.$$.fragment,e),v(tt.$$.fragment,e),v(st.$$.fragment,e),v(Ie.$$.fragment,e),v(rt.$$.fragment,e),v(at.$$.fragment,e),v(nt.$$.fragment,e),v(it.$$.fragment,e),v(lt.$$.fragment,e),v(ot.$$.fragment,e),v(gt.$$.fragment,e),v(ft.$$.fragment,e),v(pt.$$.fragment,e),v(ut.$$.fragment,e),v(dt.$$.fragment,e),v(bt.$$.fragment,e),v(ht.$$.fragment,e),v(vt.$$.fragment,e),v(mt.$$.fragment,e),v(ct.$$.fragment,e),v(_t.$$.fragment,e),v($t.$$.fragment,e),v(Et.$$.fragment,e),v(yt.$$.fragment,e),v(wt.$$.fragment,e),v(xt.$$.fragment,e),v(It.$$.fragment,e),v(Tt.$$.fragment,e),v(At.$$.fragment,e),Ya=!0)},o(e){m(R.$$.fragment,e),m(P.$$.fragment,e),m(et.$$.fragment,e),m(tt.$$.fragment,e),m(st.$$.fragment,e),m(Ie.$$.fragment,e),m(rt.$$.fragment,e),m(at.$$.fragment,e),m(nt.$$.fragment,e),m(it.$$.fragment,e),m(lt.$$.fragment,e),m(ot.$$.fragment,e),m(gt.$$.fragment,e),m(ft.$$.fragment,e),m(pt.$$.fragment,e),m(ut.$$.fragment,e),m(dt.$$.fragment,e),m(bt.$$.fragment,e),m(ht.$$.fragment,e),m(vt.$$.fragment,e),m(mt.$$.fragment,e),m(ct.$$.fragment,e),m(_t.$$.fragment,e),m($t.$$.fragment,e),m(Et.$$.fragment,e),m(yt.$$.fragment,e),m(wt.$$.fragment,e),m(xt.$$.fragment,e),m(It.$$.fragment,e),m(Tt.$$.fragment,e),m(At.$$.fragment,e),Ya=!1},d(e){t(E),e&&t(V),e&&t(y),c(R),e&&t(be),e&&t(D),e&&t(k),e&&t(x),e&&t(he),c(P,e),e&&t(H),e&&t($),e&&t(Rr),c(et,e),e&&t(Pr),e&&t(kt),e&&t(Or),e&&t($e),e&&t(Sr),e&&t(Ee),e&&t(Cr),e&&t(T),e&&t(Fr),e&&t(Z),c(tt),e&&t(Dr),e&&t(G),c(st),c(Ie),e&&t(kr),e&&t(ee),c(rt),e&&t(Lr),e&&t(O),c(at),e&&t(jr),e&&t(S),c(nt),e&&t(Gr),e&&t(C),c(it),e&&t(Br),e&&t(F),c(lt),e&&t(Vr),e&&t(te),c(ot),e&&t(Hr),e&&t(se),c(gt),e&&t(Wr),e&&t(re),c(ft),e&&t(zr),e&&t(ae),c(pt),e&&t(Ur),e&&t(ne),c(ut),e&&t(qr),e&&t(Mt),e&&t(Yr),e&&t(Jt),e&&t(Mr),e&&t(Kt),e&&t(Jr),e&&t(Ne),e&&t(Kr),e&&t(Qt),e&&t(Qr),c(dt,e),e&&t(Xr),e&&t(ie),c(bt),e&&t(Zr),e&&t(Xt),e&&t(ea),e&&t(Zt),e&&t(ta),e&&t(es),e&&t(sa),e&&t(Pe),e&&t(ra),e&&t(ts),e&&t(aa),c(ht,e),e&&t(na),e&&t(le),c(vt),e&&t(ia),e&&t(ss),e&&t(la),e&&t(rs),e&&t(oa),e&&t(as),e&&t(ga),e&&t(Se),e&&t(fa),e&&t(ns),e&&t(pa),c(mt,e),e&&t(ua),e&&t(oe),c(ct),e&&t(da),e&&t(is),e&&t(ba),e&&t(ls),e&&t(ha),e&&t(os),e&&t(va),e&&t(Fe),e&&t(ma),e&&t(gs),e&&t(ca),c(_t,e),e&&t(_a),e&&t(ge),c($t),e&&t($a),e&&t(fs),e&&t(Ea),e&&t(ps),e&&t(ya),e&&t(us),e&&t(wa),e&&t(ke),e&&t(xa),e&&t(ds),e&&t(Ia),c(Et,e),e&&t(Ta),e&&t(fe),c(yt),e&&t(Aa),e&&t(bs),e&&t(Na),e&&t(hs),e&&t(Ra),e&&t(vs),e&&t(Pa),e&&t(je),e&&t(Oa),e&&t(ms),e&&t(Sa),c(wt,e),e&&t(Ca),e&&t(pe),c(xt),e&&t(Fa),e&&t(cs),e&&t(Da),e&&t(_s),e&&t(ka),e&&t($s),e&&t(La),e&&t(Be),e&&t(ja),e&&t(Es),e&&t(Ga),c(It,e),e&&t(Ba),e&&t(ue),c(Tt),e&&t(Va),e&&t(ys),e&&t(Ha),e&&t(ws),e&&t(Wa),e&&t(xs),e&&t(za),e&&t(He),e&&t(Ua),e&&t(Is),e&&t(qa),c(At,e)}}}const $f={local:"logging-methods",sections:[{local:"datasets.utils.logging.get_verbosity",title:"Functions"},{local:"levels",sections:[{local:"datasetsloggingcritical",title:"datasets.logging.CRITICAL"},{local:"datasetsloggingdebug",title:"datasets.logging.DEBUG"},{local:"datasetsloggingerror",title:"datasets.logging.ERROR"},{local:"datasetsloggingfatal",title:"datasets.logging.FATAL"},{local:"datasetslogginginfo",title:"datasets.logging.INFO"},{local:"datasetsloggingnotset",title:"datasets.logging.NOTSET"},{local:"datasetsloggingwarn",title:"datasets.logging.WARN"},{local:"datasetsloggingwarning",title:"datasets.logging.WARNING"}],title:"Levels"}],title:"Logging methods"};function Ef(As,E,V){let{fw:y}=E;return As.$$set=_=>{"fw"in _&&V(0,y=_.fw)},[y]}class Af extends df{constructor(E){super();bf(this,E,Ef,_f,hf,{fw:0})}}export{Af as default,$f as metadata};
