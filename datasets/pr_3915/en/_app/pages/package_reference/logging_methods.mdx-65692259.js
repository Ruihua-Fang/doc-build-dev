import{S as Zf,i as ep,s as tp,e as r,k as f,w as b,t as o,M as sp,c as a,d as t,m as p,a as n,x as u,h as g,b as d,F as s,g as l,y as h,q as v,o as m,B as c}from"../../chunks/vendor-aa873a46.js";import{T as rp}from"../../chunks/Tip-f7f252ab.js";import{D as j}from"../../chunks/Docstring-337b9264.js";import{C as Y}from"../../chunks/CodeBlock-1f14baf3.js";import{I as H}from"../../chunks/IconCopyLink-d0ca3106.js";function ap(ks){let E,W,y,_,N,P,Xe,J,K,ce,D,Q,B,Ze,et,L,x,tt,X,Z,st,_e,R,q,$,rt,G,ee,at;return{c(){E=r("p"),W=o("HuggingFace datasets library has following logging levels:"),y=f(),_=r("ul"),N=r("li"),P=r("em"),Xe=o("datasets.logging.CRITICAL"),J=o(", "),K=r("em"),ce=o("datasets.logging.FATAL"),D=f(),Q=r("li"),B=r("em"),Ze=o("datasets.logging.ERROR"),et=f(),L=r("li"),x=r("em"),tt=o("datasets.logging.WARNING"),X=o(", "),Z=r("em"),st=o("datasets.logging.WARN"),_e=f(),R=r("li"),q=r("em"),$=o("datasets.logging.INFO"),rt=f(),G=r("li"),ee=r("em"),at=o("datasets.logging.DEBUG")},l(w){E=a(w,"P",{});var z=n(E);W=g(z,"HuggingFace datasets library has following logging levels:"),z.forEach(t),y=p(w),_=a(w,"UL",{});var I=n(_);N=a(I,"LI",{});var U=n(N);P=a(U,"EM",{});var kt=n(P);Xe=g(kt,"datasets.logging.CRITICAL"),kt.forEach(t),J=g(U,", "),K=a(U,"EM",{});var jt=n(K);ce=g(jt,"datasets.logging.FATAL"),jt.forEach(t),U.forEach(t),D=p(I),Q=a(I,"LI",{});var $e=n(Q);B=a($e,"EM",{});var Bt=n(B);Ze=g(Bt,"datasets.logging.ERROR"),Bt.forEach(t),$e.forEach(t),et=p(I),L=a(I,"LI",{});var Ee=n(L);x=a(Ee,"EM",{});var ye=n(x);tt=g(ye,"datasets.logging.WARNING"),ye.forEach(t),X=g(Ee,", "),Z=a(Ee,"EM",{});var Gt=n(Z);st=g(Gt,"datasets.logging.WARN"),Gt.forEach(t),Ee.forEach(t),_e=p(I),R=a(I,"LI",{});var Vt=n(R);q=a(Vt,"EM",{});var we=n(q);$=g(we,"datasets.logging.INFO"),we.forEach(t),Vt.forEach(t),rt=p(I),G=a(I,"LI",{});var Ht=n(G);ee=a(Ht,"EM",{});var Wt=n(ee);at=g(Wt,"datasets.logging.DEBUG"),Wt.forEach(t),Ht.forEach(t),I.forEach(t)},m(w,z){l(w,E,z),s(E,W),l(w,y,z),l(w,_,z),s(_,N),s(N,P),s(P,Xe),s(N,J),s(N,K),s(K,ce),s(_,D),s(_,Q),s(Q,B),s(B,Ze),s(_,et),s(_,L),s(L,x),s(x,tt),s(L,X),s(L,Z),s(Z,st),s(_,_e),s(_,R),s(R,q),s(q,$),s(_,rt),s(_,G),s(G,ee),s(ee,at)},d(w){w&&t(E),w&&t(y),w&&t(_)}}}function np(ks){let E,W,y,_,N,P,Xe,J,K,ce,D,Q,B,Ze,et,L,x,tt,X,Z,st,_e,R,q,$,rt,G,ee,at,w,z,I,U,kt,jt,$e,Bt,Ee,ye,Gt,Vt,we,Ht,Wt,Wr,nt,qr,qt,Hn,zr,xe,zt,Ut,Wn,qn,zn,Mt,Yt,Un,Mn,Ur,Ie,Yn,js,Jn,Kn,Mr,A,Ae,Bs,Qn,Xn,Gs,Zn,ei,ti,Jt,Vs,si,ri,ai,Te,Hs,ni,ii,Ws,li,oi,gi,Kt,qs,fi,pi,di,Qt,zs,bi,ui,Yr,k,hi,Us,vi,mi,Xt,ci,_i,Zt,$i,Ei,Jr,te,Ne,Ms,it,yi,Ys,wi,Kr,V,lt,xi,Js,Ii,Ai,Pe,Qr,se,ot,Ti,Ks,Ni,Xr,O,gt,Pi,Qs,Ri,Oi,Xs,Si,Fi,es,Ci,Zs,Di,Zr,S,ft,Li,er,ki,ji,tr,Bi,Gi,ts,Vi,sr,Hi,ea,F,pt,Wi,rr,qi,zi,ar,Ui,Mi,ss,Yi,nr,Ji,ta,C,dt,Ki,ir,Qi,Xi,lr,Zi,el,rs,tl,or,sl,sa,re,bt,rl,gr,al,ra,ae,ut,nl,fr,il,aa,ne,ht,ll,pr,ol,na,ie,vt,gl,dr,fl,ia,le,mt,pl,br,dl,la,oe,ct,bl,ur,ul,oa,ge,Re,hr,_t,hl,vr,vl,ga,fe,Oe,mr,$t,ml,cr,cl,fa,as,_l,pa,ns,$l,da,is,El,ba,Se,yl,_r,wl,xl,ua,ls,Il,ha,Et,va,pe,Fe,$r,yt,Al,Er,Tl,ma,os,Nl,ca,gs,Pl,_a,fs,Rl,$a,Ce,Ol,yr,Sl,Fl,Ea,ps,Cl,ya,wt,wa,de,De,wr,xt,Dl,xr,Ll,xa,ds,kl,Ia,bs,jl,Aa,us,Bl,Ta,Le,Gl,Ir,Vl,Hl,Na,hs,Wl,Pa,It,Ra,be,ke,Ar,At,ql,Tr,zl,Oa,vs,Ul,Sa,ms,Ml,Fa,cs,Yl,Ca,je,Jl,Nr,Kl,Ql,Da,_s,Xl,La,Tt,ka,ue,Be,Pr,Nt,Zl,Rr,eo,ja,$s,to,Ba,Es,so,Ga,ys,ro,Va,Ge,ao,Or,no,io,Ha,ws,lo,Wa,Pt,qa,he,Ve,Sr,Rt,oo,Fr,go,za,xs,fo,Ua,Is,po,Ma,As,bo,Ya,He,uo,Cr,ho,vo,Ja,Ts,mo,Ka,Ot,Qa,ve,We,Dr,St,co,Lr,_o,Xa,Ns,$o,Za,Ps,Eo,en,Rs,yo,tn,qe,wo,kr,xo,Io,sn,Os,Ao,rn,Ft,an,me,ze,jr,Ct,To,Br,No,nn,Ss,Po,ln,Fs,Ro,on,Cs,Oo,gn,Ue,So,Gr,Fo,Co,fn,Ds,Do,pn,Dt,dn;return P=new H({}),R=new Y({props:{code:`import datasets
datasets.logging.set_verbosity_info()`,highlighted:`<span class="hljs-keyword">import</span> datasets
datasets.logging.set_verbosity_info()`}}),nt=new Y({props:{code:"DATASETS_VERBOSITY=error ./myprogram.py",highlighted:"DATASETS_VERBOSITY=error ./myprogram.py"}}),it=new H({}),lt=new j({props:{name:"datasets.utils.logging.get_verbosity",anchor:"datasets.utils.logging.get_verbosity",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3915/src/datasets/utils/logging.py#L87",returnDescription:`
<p>Logging level, e.g., <code>datasets.logging.DEBUG</code> and <code>datasets.logging.INFO</code>.</p>
`}}),Pe=new rp({props:{$$slots:{default:[ap]},$$scope:{ctx:ks}}}),ot=new j({props:{name:"datasets.utils.logging.set_verbosity",anchor:"datasets.utils.logging.set_verbosity",parameters:[{name:"verbosity",val:": int"}],source:"https://github.com/huggingface/datasets/blob/pr_3915/src/datasets/utils/logging.py#L106"}}),gt=new j({props:{name:"datasets.utils.logging.set_verbosity_info",anchor:"datasets.utils.logging.set_verbosity_info",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3915/src/datasets/utils/logging.py#L115"}}),ft=new j({props:{name:"datasets.utils.logging.set_verbosity_warning",anchor:"datasets.utils.logging.set_verbosity_warning",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3915/src/datasets/utils/logging.py#L125"}}),pt=new j({props:{name:"datasets.utils.logging.set_verbosity_debug",anchor:"datasets.utils.logging.set_verbosity_debug",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3915/src/datasets/utils/logging.py#L135"}}),dt=new j({props:{name:"datasets.utils.logging.set_verbosity_error",anchor:"datasets.utils.logging.set_verbosity_error",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3915/src/datasets/utils/logging.py#L145"}}),bt=new j({props:{name:"datasets.utils.logging.disable_propagation",anchor:"datasets.utils.logging.disable_propagation",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3915/src/datasets/utils/logging.py#L155"}}),ut=new j({props:{name:"datasets.utils.logging.enable_propagation",anchor:"datasets.utils.logging.enable_propagation",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3915/src/datasets/utils/logging.py#L162"}}),ht=new j({props:{name:"datasets.utils.logging.get_logger",anchor:"datasets.utils.logging.get_logger",parameters:[{name:"name",val:": typing.Optional[str] = None"}],source:"https://github.com/huggingface/datasets/blob/pr_3915/src/datasets/utils/logging.py#L78"}}),vt=new j({props:{name:"datasets.enable_progress_bar",anchor:"datasets.enable_progress_bar",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3915/src/datasets/utils/logging.py#L227"}}),mt=new j({props:{name:"datasets.disable_progress_bar",anchor:"datasets.disable_progress_bar",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3915/src/datasets/utils/logging.py#L233"}}),ct=new j({props:{name:"datasets.is_progress_bar_enabled",anchor:"datasets.is_progress_bar_enabled",parameters:[],source:"https://github.com/huggingface/datasets/blob/pr_3915/src/datasets/utils/logging.py#L221"}}),_t=new H({}),$t=new H({}),Et=new Y({props:{code:"int('0b100', base=0)",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0b100&#x27;</span>, base=<span class="hljs-number">0</span>)
<span class="hljs-number">4</span>`}}),yt=new H({}),wt=new Y({props:{code:"int('0b100', base=0)",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0b100&#x27;</span>, base=<span class="hljs-number">0</span>)
<span class="hljs-number">4</span>`}}),xt=new H({}),It=new Y({props:{code:"int('0b100', base=0)",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0b100&#x27;</span>, base=<span class="hljs-number">0</span>)
<span class="hljs-number">4</span>`}}),At=new H({}),Tt=new Y({props:{code:"int('0b100', base=0)",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0b100&#x27;</span>, base=<span class="hljs-number">0</span>)
<span class="hljs-number">4</span>`}}),Nt=new H({}),Pt=new Y({props:{code:"int('0b100', base=0)",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0b100&#x27;</span>, base=<span class="hljs-number">0</span>)
<span class="hljs-number">4</span>`}}),Rt=new H({}),Ot=new Y({props:{code:"int('0b100', base=0)",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0b100&#x27;</span>, base=<span class="hljs-number">0</span>)
<span class="hljs-number">4</span>`}}),St=new H({}),Ft=new Y({props:{code:"int('0b100', base=0)",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0b100&#x27;</span>, base=<span class="hljs-number">0</span>)
<span class="hljs-number">4</span>`}}),Ct=new H({}),Dt=new Y({props:{code:"int('0b100', base=0)",highlighted:`<span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0b100&#x27;</span>, base=<span class="hljs-number">0</span>)
<span class="hljs-number">4</span>`}}),{c(){E=r("meta"),W=f(),y=r("h1"),_=r("a"),N=r("span"),b(P.$$.fragment),Xe=f(),J=r("span"),K=o("Logging methods"),ce=f(),D=r("p"),Q=o("\u{1F917} Datasets strives to be transparent and explicit about how it works, but this can be quite verbose at times. We have included a series of logging methods which allow you to easily adjust the level of verbosity of the entire library. Currently the default verbosity of the library is set to "),B=r("code"),Ze=o("WARNING"),et=o("."),L=f(),x=r("p"),tt=o("To change the level of verbosity, use one of the direct setters. For instance, here is how to change the verbosity to the "),X=r("code"),Z=o("INFO"),st=o(" level:"),_e=f(),b(R.$$.fragment),q=f(),$=r("p"),rt=o("You can also use the environment variable "),G=r("code"),ee=o("DATASETS_VERBOSITY"),at=o(" to override the default verbosity, and set it to one of the following: "),w=r("code"),z=o("debug"),I=o(", "),U=r("code"),kt=o("info"),jt=o(", "),$e=r("code"),Bt=o("warning"),Ee=o(", "),ye=r("code"),Gt=o("error"),Vt=o(", "),we=r("code"),Ht=o("critical"),Wt=o(":"),Wr=f(),b(nt.$$.fragment),qr=f(),qt=r("p"),Hn=o("All the methods of this logging module are documented below. The main ones are:"),zr=f(),xe=r("ul"),zt=r("li"),Ut=r("a"),Wn=o("datasets.logging.get_verbosity()"),qn=o(" to get the current level of verbosity in the logger"),zn=f(),Mt=r("li"),Yt=r("a"),Un=o("datasets.logging.set_verbosity()"),Mn=o(" to set the verbosity to the level of your choice"),Ur=f(),Ie=r("p"),Yn=o("In order from the least to the most verbose (with their corresponding "),js=r("code"),Jn=o("int"),Kn=o(" values):"),Mr=f(),A=r("ol"),Ae=r("li"),Bs=r("code"),Qn=o("datasets.logging.CRITICAL"),Xn=o(" or "),Gs=r("code"),Zn=o("datasets.logging.FATAL"),ei=o(" (int value, 50): only report the most critical errors."),ti=f(),Jt=r("li"),Vs=r("code"),si=o("datasets.logging.ERROR"),ri=o(" (int value, 40): only report errors."),ai=f(),Te=r("li"),Hs=r("code"),ni=o("datasets.logging.WARNING"),ii=o(" or "),Ws=r("code"),li=o("datasets.logging.WARN"),oi=o(" (int value, 30): only reports error and warnings. This the default level used by the library."),gi=f(),Kt=r("li"),qs=r("code"),fi=o("datasets.logging.INFO"),pi=o(" (int value, 20): reports error, warnings and basic information."),di=f(),Qt=r("li"),zs=r("code"),bi=o("datasets.logging.DEBUG"),ui=o(" (int value, 10): report all information."),Yr=f(),k=r("p"),hi=o("By default, "),Us=r("code"),vi=o("tqdm"),mi=o(" progress bars will be displayed during dataset download and preprocessing. "),Xt=r("a"),ci=o("datasets.logging.disable_progress_bar()"),_i=o(" and "),Zt=r("a"),$i=o("datasets.logging.enable_progress_bar()"),Ei=o(" can be used to suppress or unsuppress this behavior."),Jr=f(),te=r("h2"),Ne=r("a"),Ms=r("span"),b(it.$$.fragment),yi=f(),Ys=r("span"),wi=o("Functions"),Kr=f(),V=r("div"),b(lt.$$.fragment),xi=f(),Js=r("p"),Ii=o("Return the current level for the HuggingFace datasets library\u2019s root logger."),Ai=f(),b(Pe.$$.fragment),Qr=f(),se=r("div"),b(ot.$$.fragment),Ti=f(),Ks=r("p"),Ni=o("Set the level for the HuggingFace datasets library\u2019s root logger."),Xr=f(),O=r("div"),b(gt.$$.fragment),Pi=f(),Qs=r("p"),Ri=o("Set the level for the HuggingFace datasets library\u2019s root logger to INFO."),Oi=f(),Xs=r("p"),Si=o("This will display most of the logging information and tqdm bars."),Fi=f(),es=r("p"),Ci=o("Shortcut to "),Zs=r("code"),Di=o("datasets.logging.set_verbosity(datasets.logging.INFO)"),Zr=f(),S=r("div"),b(ft.$$.fragment),Li=f(),er=r("p"),ki=o("Set the level for the HuggingFace datasets library\u2019s root logger to WARNING."),ji=f(),tr=r("p"),Bi=o("This will display only the warning and errors logging information and tqdm bars."),Gi=f(),ts=r("p"),Vi=o("Shortcut to "),sr=r("code"),Hi=o("datasets.logging.set_verbosity(datasets.logging.WARNING)"),ea=f(),F=r("div"),b(pt.$$.fragment),Wi=f(),rr=r("p"),qi=o("Set the level for the HuggingFace datasets library\u2019s root logger to DEBUG."),zi=f(),ar=r("p"),Ui=o("This will display all the logging information and tqdm bars."),Mi=f(),ss=r("p"),Yi=o("Shortcut to "),nr=r("code"),Ji=o("datasets.logging.set_verbosity(datasets.logging.DEBUG)"),ta=f(),C=r("div"),b(dt.$$.fragment),Ki=f(),ir=r("p"),Qi=o("Set the level for the HuggingFace datasets library\u2019s root logger to ERROR."),Xi=f(),lr=r("p"),Zi=o("This will display only the errors logging information and tqdm bars."),el=f(),rs=r("p"),tl=o("Shortcut to "),or=r("code"),sl=o("datasets.logging.set_verbosity(datasets.logging.ERROR)"),sa=f(),re=r("div"),b(bt.$$.fragment),rl=f(),gr=r("p"),al=o(`Disable propagation of the library log outputs.
Note that log propagation is disabled by default.`),ra=f(),ae=r("div"),b(ut.$$.fragment),nl=f(),fr=r("p"),il=o(`Enable propagation of the library log outputs.
Please disable the HuggingFace datasets library\u2019s default handler to prevent double logging if the root logger has
been configured.`),aa=f(),ne=r("div"),b(ht.$$.fragment),ll=f(),pr=r("p"),ol=o(`Return a logger with the specified name.
This function can be used in dataset and metrics scripts.`),na=f(),ie=r("div"),b(vt.$$.fragment),gl=f(),dr=r("p"),fl=o("Enable tqdm progress bar."),ia=f(),le=r("div"),b(mt.$$.fragment),pl=f(),br=r("p"),dl=o("Enable tqdm progress bar."),la=f(),oe=r("div"),b(ct.$$.fragment),bl=f(),ur=r("p"),ul=o("Return a boolean indicating whether tqdm progress bars are enabled."),oa=f(),ge=r("h2"),Re=r("a"),hr=r("span"),b(_t.$$.fragment),hl=f(),vr=r("span"),vl=o("Levels"),ga=f(),fe=r("h3"),Oe=r("a"),mr=r("span"),b($t.$$.fragment),ml=f(),cr=r("span"),cl=o("datasets.logging.CRITICAL"),fa=f(),as=r("p"),_l=o("datasets.logging.CRITICAL = 50"),pa=f(),ns=r("p"),$l=o("int([x]) -> integer"),da=f(),is=r("p"),El=o("int(x, base=10) -> integer"),ba=f(),Se=r("p"),yl=o(`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),_r=r("strong"),wl=o("int"),xl=o(`().  For floating point
numbers, this truncates towards zero.`),ua=f(),ls=r("p"),Il=o(`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),ha=f(),b(Et.$$.fragment),va=f(),pe=r("h3"),Fe=r("a"),$r=r("span"),b(yt.$$.fragment),Al=f(),Er=r("span"),Tl=o("datasets.logging.DEBUG"),ma=f(),os=r("p"),Nl=o("datasets.logging.DEBUG = 10"),ca=f(),gs=r("p"),Pl=o("int([x]) -> integer"),_a=f(),fs=r("p"),Rl=o("int(x, base=10) -> integer"),$a=f(),Ce=r("p"),Ol=o(`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),yr=r("strong"),Sl=o("int"),Fl=o(`().  For floating point
numbers, this truncates towards zero.`),Ea=f(),ps=r("p"),Cl=o(`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),ya=f(),b(wt.$$.fragment),wa=f(),de=r("h3"),De=r("a"),wr=r("span"),b(xt.$$.fragment),Dl=f(),xr=r("span"),Ll=o("datasets.logging.ERROR"),xa=f(),ds=r("p"),kl=o("datasets.logging.ERROR = 40"),Ia=f(),bs=r("p"),jl=o("int([x]) -> integer"),Aa=f(),us=r("p"),Bl=o("int(x, base=10) -> integer"),Ta=f(),Le=r("p"),Gl=o(`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),Ir=r("strong"),Vl=o("int"),Hl=o(`().  For floating point
numbers, this truncates towards zero.`),Na=f(),hs=r("p"),Wl=o(`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),Pa=f(),b(It.$$.fragment),Ra=f(),be=r("h3"),ke=r("a"),Ar=r("span"),b(At.$$.fragment),ql=f(),Tr=r("span"),zl=o("datasets.logging.FATAL"),Oa=f(),vs=r("p"),Ul=o("datasets.logging.FATAL = 50"),Sa=f(),ms=r("p"),Ml=o("int([x]) -> integer"),Fa=f(),cs=r("p"),Yl=o("int(x, base=10) -> integer"),Ca=f(),je=r("p"),Jl=o(`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),Nr=r("strong"),Kl=o("int"),Ql=o(`().  For floating point
numbers, this truncates towards zero.`),Da=f(),_s=r("p"),Xl=o(`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),La=f(),b(Tt.$$.fragment),ka=f(),ue=r("h3"),Be=r("a"),Pr=r("span"),b(Nt.$$.fragment),Zl=f(),Rr=r("span"),eo=o("datasets.logging.INFO"),ja=f(),$s=r("p"),to=o("datasets.logging.INFO = 20"),Ba=f(),Es=r("p"),so=o("int([x]) -> integer"),Ga=f(),ys=r("p"),ro=o("int(x, base=10) -> integer"),Va=f(),Ge=r("p"),ao=o(`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),Or=r("strong"),no=o("int"),io=o(`().  For floating point
numbers, this truncates towards zero.`),Ha=f(),ws=r("p"),lo=o(`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),Wa=f(),b(Pt.$$.fragment),qa=f(),he=r("h3"),Ve=r("a"),Sr=r("span"),b(Rt.$$.fragment),oo=f(),Fr=r("span"),go=o("datasets.logging.NOTSET"),za=f(),xs=r("p"),fo=o("datasets.logging.NOTSET = 0"),Ua=f(),Is=r("p"),po=o("int([x]) -> integer"),Ma=f(),As=r("p"),bo=o("int(x, base=10) -> integer"),Ya=f(),He=r("p"),uo=o(`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),Cr=r("strong"),ho=o("int"),vo=o(`().  For floating point
numbers, this truncates towards zero.`),Ja=f(),Ts=r("p"),mo=o(`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),Ka=f(),b(Ot.$$.fragment),Qa=f(),ve=r("h3"),We=r("a"),Dr=r("span"),b(St.$$.fragment),co=f(),Lr=r("span"),_o=o("datasets.logging.WARN"),Xa=f(),Ns=r("p"),$o=o("datasets.logging.WARN = 30"),Za=f(),Ps=r("p"),Eo=o("int([x]) -> integer"),en=f(),Rs=r("p"),yo=o("int(x, base=10) -> integer"),tn=f(),qe=r("p"),wo=o(`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),kr=r("strong"),xo=o("int"),Io=o(`().  For floating point
numbers, this truncates towards zero.`),sn=f(),Os=r("p"),Ao=o(`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),rn=f(),b(Ft.$$.fragment),an=f(),me=r("h3"),ze=r("a"),jr=r("span"),b(Ct.$$.fragment),To=f(),Br=r("span"),No=o("datasets.logging.WARNING"),nn=f(),Ss=r("p"),Po=o("datasets.logging.WARNING = 30"),ln=f(),Fs=r("p"),Ro=o("int([x]) -> integer"),on=f(),Cs=r("p"),Oo=o("int(x, base=10) -> integer"),gn=f(),Ue=r("p"),So=o(`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),Gr=r("strong"),Fo=o("int"),Co=o(`().  For floating point
numbers, this truncates towards zero.`),fn=f(),Ds=r("p"),Do=o(`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),pn=f(),b(Dt.$$.fragment),this.h()},l(e){const i=sp('[data-svelte="svelte-1phssyn"]',document.head);E=a(i,"META",{name:!0,content:!0}),i.forEach(t),W=p(e),y=a(e,"H1",{class:!0});var Lt=n(y);_=a(Lt,"A",{id:!0,class:!0,href:!0});var zo=n(_);N=a(zo,"SPAN",{});var Uo=n(N);u(P.$$.fragment,Uo),Uo.forEach(t),zo.forEach(t),Xe=p(Lt),J=a(Lt,"SPAN",{});var Mo=n(J);K=g(Mo,"Logging methods"),Mo.forEach(t),Lt.forEach(t),ce=p(e),D=a(e,"P",{});var bn=n(D);Q=g(bn,"\u{1F917} Datasets strives to be transparent and explicit about how it works, but this can be quite verbose at times. We have included a series of logging methods which allow you to easily adjust the level of verbosity of the entire library. Currently the default verbosity of the library is set to "),B=a(bn,"CODE",{});var Yo=n(B);Ze=g(Yo,"WARNING"),Yo.forEach(t),et=g(bn,"."),bn.forEach(t),L=p(e),x=a(e,"P",{});var un=n(x);tt=g(un,"To change the level of verbosity, use one of the direct setters. For instance, here is how to change the verbosity to the "),X=a(un,"CODE",{});var Jo=n(X);Z=g(Jo,"INFO"),Jo.forEach(t),st=g(un," level:"),un.forEach(t),_e=p(e),u(R.$$.fragment,e),q=p(e),$=a(e,"P",{});var T=n($);rt=g(T,"You can also use the environment variable "),G=a(T,"CODE",{});var Ko=n(G);ee=g(Ko,"DATASETS_VERBOSITY"),Ko.forEach(t),at=g(T," to override the default verbosity, and set it to one of the following: "),w=a(T,"CODE",{});var Qo=n(w);z=g(Qo,"debug"),Qo.forEach(t),I=g(T,", "),U=a(T,"CODE",{});var Xo=n(U);kt=g(Xo,"info"),Xo.forEach(t),jt=g(T,", "),$e=a(T,"CODE",{});var Zo=n($e);Bt=g(Zo,"warning"),Zo.forEach(t),Ee=g(T,", "),ye=a(T,"CODE",{});var eg=n(ye);Gt=g(eg,"error"),eg.forEach(t),Vt=g(T,", "),we=a(T,"CODE",{});var tg=n(we);Ht=g(tg,"critical"),tg.forEach(t),Wt=g(T,":"),T.forEach(t),Wr=p(e),u(nt.$$.fragment,e),qr=p(e),qt=a(e,"P",{});var sg=n(qt);Hn=g(sg,"All the methods of this logging module are documented below. The main ones are:"),sg.forEach(t),zr=p(e),xe=a(e,"UL",{});var hn=n(xe);zt=a(hn,"LI",{});var Lo=n(zt);Ut=a(Lo,"A",{href:!0});var rg=n(Ut);Wn=g(rg,"datasets.logging.get_verbosity()"),rg.forEach(t),qn=g(Lo," to get the current level of verbosity in the logger"),Lo.forEach(t),zn=p(hn),Mt=a(hn,"LI",{});var ko=n(Mt);Yt=a(ko,"A",{href:!0});var ag=n(Yt);Un=g(ag,"datasets.logging.set_verbosity()"),ag.forEach(t),Mn=g(ko," to set the verbosity to the level of your choice"),ko.forEach(t),hn.forEach(t),Ur=p(e),Ie=a(e,"P",{});var vn=n(Ie);Yn=g(vn,"In order from the least to the most verbose (with their corresponding "),js=a(vn,"CODE",{});var ng=n(js);Jn=g(ng,"int"),ng.forEach(t),Kn=g(vn," values):"),vn.forEach(t),Mr=p(e),A=a(e,"OL",{});var M=n(A);Ae=a(M,"LI",{});var Vr=n(Ae);Bs=a(Vr,"CODE",{});var ig=n(Bs);Qn=g(ig,"datasets.logging.CRITICAL"),ig.forEach(t),Xn=g(Vr," or "),Gs=a(Vr,"CODE",{});var lg=n(Gs);Zn=g(lg,"datasets.logging.FATAL"),lg.forEach(t),ei=g(Vr," (int value, 50): only report the most critical errors."),Vr.forEach(t),ti=p(M),Jt=a(M,"LI",{});var jo=n(Jt);Vs=a(jo,"CODE",{});var og=n(Vs);si=g(og,"datasets.logging.ERROR"),og.forEach(t),ri=g(jo," (int value, 40): only report errors."),jo.forEach(t),ai=p(M),Te=a(M,"LI",{});var Hr=n(Te);Hs=a(Hr,"CODE",{});var gg=n(Hs);ni=g(gg,"datasets.logging.WARNING"),gg.forEach(t),ii=g(Hr," or "),Ws=a(Hr,"CODE",{});var fg=n(Ws);li=g(fg,"datasets.logging.WARN"),fg.forEach(t),oi=g(Hr," (int value, 30): only reports error and warnings. This the default level used by the library."),Hr.forEach(t),gi=p(M),Kt=a(M,"LI",{});var Bo=n(Kt);qs=a(Bo,"CODE",{});var pg=n(qs);fi=g(pg,"datasets.logging.INFO"),pg.forEach(t),pi=g(Bo," (int value, 20): reports error, warnings and basic information."),Bo.forEach(t),di=p(M),Qt=a(M,"LI",{});var Go=n(Qt);zs=a(Go,"CODE",{});var dg=n(zs);bi=g(dg,"datasets.logging.DEBUG"),dg.forEach(t),ui=g(Go," (int value, 10): report all information."),Go.forEach(t),M.forEach(t),Yr=p(e),k=a(e,"P",{});var Me=n(k);hi=g(Me,"By default, "),Us=a(Me,"CODE",{});var bg=n(Us);vi=g(bg,"tqdm"),bg.forEach(t),mi=g(Me," progress bars will be displayed during dataset download and preprocessing. "),Xt=a(Me,"A",{href:!0});var ug=n(Xt);ci=g(ug,"datasets.logging.disable_progress_bar()"),ug.forEach(t),_i=g(Me," and "),Zt=a(Me,"A",{href:!0});var hg=n(Zt);$i=g(hg,"datasets.logging.enable_progress_bar()"),hg.forEach(t),Ei=g(Me," can be used to suppress or unsuppress this behavior."),Me.forEach(t),Jr=p(e),te=a(e,"H2",{class:!0});var mn=n(te);Ne=a(mn,"A",{id:!0,class:!0,href:!0});var vg=n(Ne);Ms=a(vg,"SPAN",{});var mg=n(Ms);u(it.$$.fragment,mg),mg.forEach(t),vg.forEach(t),yi=p(mn),Ys=a(mn,"SPAN",{});var cg=n(Ys);wi=g(cg,"Functions"),cg.forEach(t),mn.forEach(t),Kr=p(e),V=a(e,"DIV",{class:!0});var Ls=n(V);u(lt.$$.fragment,Ls),xi=p(Ls),Js=a(Ls,"P",{});var _g=n(Js);Ii=g(_g,"Return the current level for the HuggingFace datasets library\u2019s root logger."),_g.forEach(t),Ai=p(Ls),u(Pe.$$.fragment,Ls),Ls.forEach(t),Qr=p(e),se=a(e,"DIV",{class:!0});var cn=n(se);u(ot.$$.fragment,cn),Ti=p(cn),Ks=a(cn,"P",{});var $g=n(Ks);Ni=g($g,"Set the level for the HuggingFace datasets library\u2019s root logger."),$g.forEach(t),cn.forEach(t),Xr=p(e),O=a(e,"DIV",{class:!0});var Ye=n(O);u(gt.$$.fragment,Ye),Pi=p(Ye),Qs=a(Ye,"P",{});var Eg=n(Qs);Ri=g(Eg,"Set the level for the HuggingFace datasets library\u2019s root logger to INFO."),Eg.forEach(t),Oi=p(Ye),Xs=a(Ye,"P",{});var yg=n(Xs);Si=g(yg,"This will display most of the logging information and tqdm bars."),yg.forEach(t),Fi=p(Ye),es=a(Ye,"P",{});var Vo=n(es);Ci=g(Vo,"Shortcut to "),Zs=a(Vo,"CODE",{});var wg=n(Zs);Di=g(wg,"datasets.logging.set_verbosity(datasets.logging.INFO)"),wg.forEach(t),Vo.forEach(t),Ye.forEach(t),Zr=p(e),S=a(e,"DIV",{class:!0});var Je=n(S);u(ft.$$.fragment,Je),Li=p(Je),er=a(Je,"P",{});var xg=n(er);ki=g(xg,"Set the level for the HuggingFace datasets library\u2019s root logger to WARNING."),xg.forEach(t),ji=p(Je),tr=a(Je,"P",{});var Ig=n(tr);Bi=g(Ig,"This will display only the warning and errors logging information and tqdm bars."),Ig.forEach(t),Gi=p(Je),ts=a(Je,"P",{});var Ho=n(ts);Vi=g(Ho,"Shortcut to "),sr=a(Ho,"CODE",{});var Ag=n(sr);Hi=g(Ag,"datasets.logging.set_verbosity(datasets.logging.WARNING)"),Ag.forEach(t),Ho.forEach(t),Je.forEach(t),ea=p(e),F=a(e,"DIV",{class:!0});var Ke=n(F);u(pt.$$.fragment,Ke),Wi=p(Ke),rr=a(Ke,"P",{});var Tg=n(rr);qi=g(Tg,"Set the level for the HuggingFace datasets library\u2019s root logger to DEBUG."),Tg.forEach(t),zi=p(Ke),ar=a(Ke,"P",{});var Ng=n(ar);Ui=g(Ng,"This will display all the logging information and tqdm bars."),Ng.forEach(t),Mi=p(Ke),ss=a(Ke,"P",{});var Wo=n(ss);Yi=g(Wo,"Shortcut to "),nr=a(Wo,"CODE",{});var Pg=n(nr);Ji=g(Pg,"datasets.logging.set_verbosity(datasets.logging.DEBUG)"),Pg.forEach(t),Wo.forEach(t),Ke.forEach(t),ta=p(e),C=a(e,"DIV",{class:!0});var Qe=n(C);u(dt.$$.fragment,Qe),Ki=p(Qe),ir=a(Qe,"P",{});var Rg=n(ir);Qi=g(Rg,"Set the level for the HuggingFace datasets library\u2019s root logger to ERROR."),Rg.forEach(t),Xi=p(Qe),lr=a(Qe,"P",{});var Og=n(lr);Zi=g(Og,"This will display only the errors logging information and tqdm bars."),Og.forEach(t),el=p(Qe),rs=a(Qe,"P",{});var qo=n(rs);tl=g(qo,"Shortcut to "),or=a(qo,"CODE",{});var Sg=n(or);sl=g(Sg,"datasets.logging.set_verbosity(datasets.logging.ERROR)"),Sg.forEach(t),qo.forEach(t),Qe.forEach(t),sa=p(e),re=a(e,"DIV",{class:!0});var _n=n(re);u(bt.$$.fragment,_n),rl=p(_n),gr=a(_n,"P",{});var Fg=n(gr);al=g(Fg,`Disable propagation of the library log outputs.
Note that log propagation is disabled by default.`),Fg.forEach(t),_n.forEach(t),ra=p(e),ae=a(e,"DIV",{class:!0});var $n=n(ae);u(ut.$$.fragment,$n),nl=p($n),fr=a($n,"P",{});var Cg=n(fr);il=g(Cg,`Enable propagation of the library log outputs.
Please disable the HuggingFace datasets library\u2019s default handler to prevent double logging if the root logger has
been configured.`),Cg.forEach(t),$n.forEach(t),aa=p(e),ne=a(e,"DIV",{class:!0});var En=n(ne);u(ht.$$.fragment,En),ll=p(En),pr=a(En,"P",{});var Dg=n(pr);ol=g(Dg,`Return a logger with the specified name.
This function can be used in dataset and metrics scripts.`),Dg.forEach(t),En.forEach(t),na=p(e),ie=a(e,"DIV",{class:!0});var yn=n(ie);u(vt.$$.fragment,yn),gl=p(yn),dr=a(yn,"P",{});var Lg=n(dr);fl=g(Lg,"Enable tqdm progress bar."),Lg.forEach(t),yn.forEach(t),ia=p(e),le=a(e,"DIV",{class:!0});var wn=n(le);u(mt.$$.fragment,wn),pl=p(wn),br=a(wn,"P",{});var kg=n(br);dl=g(kg,"Enable tqdm progress bar."),kg.forEach(t),wn.forEach(t),la=p(e),oe=a(e,"DIV",{class:!0});var xn=n(oe);u(ct.$$.fragment,xn),bl=p(xn),ur=a(xn,"P",{});var jg=n(ur);ul=g(jg,"Return a boolean indicating whether tqdm progress bars are enabled."),jg.forEach(t),xn.forEach(t),oa=p(e),ge=a(e,"H2",{class:!0});var In=n(ge);Re=a(In,"A",{id:!0,class:!0,href:!0});var Bg=n(Re);hr=a(Bg,"SPAN",{});var Gg=n(hr);u(_t.$$.fragment,Gg),Gg.forEach(t),Bg.forEach(t),hl=p(In),vr=a(In,"SPAN",{});var Vg=n(vr);vl=g(Vg,"Levels"),Vg.forEach(t),In.forEach(t),ga=p(e),fe=a(e,"H3",{class:!0});var An=n(fe);Oe=a(An,"A",{id:!0,class:!0,href:!0});var Hg=n(Oe);mr=a(Hg,"SPAN",{});var Wg=n(mr);u($t.$$.fragment,Wg),Wg.forEach(t),Hg.forEach(t),ml=p(An),cr=a(An,"SPAN",{});var qg=n(cr);cl=g(qg,"datasets.logging.CRITICAL"),qg.forEach(t),An.forEach(t),fa=p(e),as=a(e,"P",{});var zg=n(as);_l=g(zg,"datasets.logging.CRITICAL = 50"),zg.forEach(t),pa=p(e),ns=a(e,"P",{});var Ug=n(ns);$l=g(Ug,"int([x]) -> integer"),Ug.forEach(t),da=p(e),is=a(e,"P",{});var Mg=n(is);El=g(Mg,"int(x, base=10) -> integer"),Mg.forEach(t),ba=p(e),Se=a(e,"P",{});var Tn=n(Se);yl=g(Tn,`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),_r=a(Tn,"STRONG",{});var Yg=n(_r);wl=g(Yg,"int"),Yg.forEach(t),xl=g(Tn,`().  For floating point
numbers, this truncates towards zero.`),Tn.forEach(t),ua=p(e),ls=a(e,"P",{});var Jg=n(ls);Il=g(Jg,`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),Jg.forEach(t),ha=p(e),u(Et.$$.fragment,e),va=p(e),pe=a(e,"H3",{class:!0});var Nn=n(pe);Fe=a(Nn,"A",{id:!0,class:!0,href:!0});var Kg=n(Fe);$r=a(Kg,"SPAN",{});var Qg=n($r);u(yt.$$.fragment,Qg),Qg.forEach(t),Kg.forEach(t),Al=p(Nn),Er=a(Nn,"SPAN",{});var Xg=n(Er);Tl=g(Xg,"datasets.logging.DEBUG"),Xg.forEach(t),Nn.forEach(t),ma=p(e),os=a(e,"P",{});var Zg=n(os);Nl=g(Zg,"datasets.logging.DEBUG = 10"),Zg.forEach(t),ca=p(e),gs=a(e,"P",{});var ef=n(gs);Pl=g(ef,"int([x]) -> integer"),ef.forEach(t),_a=p(e),fs=a(e,"P",{});var tf=n(fs);Rl=g(tf,"int(x, base=10) -> integer"),tf.forEach(t),$a=p(e),Ce=a(e,"P",{});var Pn=n(Ce);Ol=g(Pn,`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),yr=a(Pn,"STRONG",{});var sf=n(yr);Sl=g(sf,"int"),sf.forEach(t),Fl=g(Pn,`().  For floating point
numbers, this truncates towards zero.`),Pn.forEach(t),Ea=p(e),ps=a(e,"P",{});var rf=n(ps);Cl=g(rf,`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),rf.forEach(t),ya=p(e),u(wt.$$.fragment,e),wa=p(e),de=a(e,"H3",{class:!0});var Rn=n(de);De=a(Rn,"A",{id:!0,class:!0,href:!0});var af=n(De);wr=a(af,"SPAN",{});var nf=n(wr);u(xt.$$.fragment,nf),nf.forEach(t),af.forEach(t),Dl=p(Rn),xr=a(Rn,"SPAN",{});var lf=n(xr);Ll=g(lf,"datasets.logging.ERROR"),lf.forEach(t),Rn.forEach(t),xa=p(e),ds=a(e,"P",{});var of=n(ds);kl=g(of,"datasets.logging.ERROR = 40"),of.forEach(t),Ia=p(e),bs=a(e,"P",{});var gf=n(bs);jl=g(gf,"int([x]) -> integer"),gf.forEach(t),Aa=p(e),us=a(e,"P",{});var ff=n(us);Bl=g(ff,"int(x, base=10) -> integer"),ff.forEach(t),Ta=p(e),Le=a(e,"P",{});var On=n(Le);Gl=g(On,`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),Ir=a(On,"STRONG",{});var pf=n(Ir);Vl=g(pf,"int"),pf.forEach(t),Hl=g(On,`().  For floating point
numbers, this truncates towards zero.`),On.forEach(t),Na=p(e),hs=a(e,"P",{});var df=n(hs);Wl=g(df,`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),df.forEach(t),Pa=p(e),u(It.$$.fragment,e),Ra=p(e),be=a(e,"H3",{class:!0});var Sn=n(be);ke=a(Sn,"A",{id:!0,class:!0,href:!0});var bf=n(ke);Ar=a(bf,"SPAN",{});var uf=n(Ar);u(At.$$.fragment,uf),uf.forEach(t),bf.forEach(t),ql=p(Sn),Tr=a(Sn,"SPAN",{});var hf=n(Tr);zl=g(hf,"datasets.logging.FATAL"),hf.forEach(t),Sn.forEach(t),Oa=p(e),vs=a(e,"P",{});var vf=n(vs);Ul=g(vf,"datasets.logging.FATAL = 50"),vf.forEach(t),Sa=p(e),ms=a(e,"P",{});var mf=n(ms);Ml=g(mf,"int([x]) -> integer"),mf.forEach(t),Fa=p(e),cs=a(e,"P",{});var cf=n(cs);Yl=g(cf,"int(x, base=10) -> integer"),cf.forEach(t),Ca=p(e),je=a(e,"P",{});var Fn=n(je);Jl=g(Fn,`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),Nr=a(Fn,"STRONG",{});var _f=n(Nr);Kl=g(_f,"int"),_f.forEach(t),Ql=g(Fn,`().  For floating point
numbers, this truncates towards zero.`),Fn.forEach(t),Da=p(e),_s=a(e,"P",{});var $f=n(_s);Xl=g($f,`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),$f.forEach(t),La=p(e),u(Tt.$$.fragment,e),ka=p(e),ue=a(e,"H3",{class:!0});var Cn=n(ue);Be=a(Cn,"A",{id:!0,class:!0,href:!0});var Ef=n(Be);Pr=a(Ef,"SPAN",{});var yf=n(Pr);u(Nt.$$.fragment,yf),yf.forEach(t),Ef.forEach(t),Zl=p(Cn),Rr=a(Cn,"SPAN",{});var wf=n(Rr);eo=g(wf,"datasets.logging.INFO"),wf.forEach(t),Cn.forEach(t),ja=p(e),$s=a(e,"P",{});var xf=n($s);to=g(xf,"datasets.logging.INFO = 20"),xf.forEach(t),Ba=p(e),Es=a(e,"P",{});var If=n(Es);so=g(If,"int([x]) -> integer"),If.forEach(t),Ga=p(e),ys=a(e,"P",{});var Af=n(ys);ro=g(Af,"int(x, base=10) -> integer"),Af.forEach(t),Va=p(e),Ge=a(e,"P",{});var Dn=n(Ge);ao=g(Dn,`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),Or=a(Dn,"STRONG",{});var Tf=n(Or);no=g(Tf,"int"),Tf.forEach(t),io=g(Dn,`().  For floating point
numbers, this truncates towards zero.`),Dn.forEach(t),Ha=p(e),ws=a(e,"P",{});var Nf=n(ws);lo=g(Nf,`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),Nf.forEach(t),Wa=p(e),u(Pt.$$.fragment,e),qa=p(e),he=a(e,"H3",{class:!0});var Ln=n(he);Ve=a(Ln,"A",{id:!0,class:!0,href:!0});var Pf=n(Ve);Sr=a(Pf,"SPAN",{});var Rf=n(Sr);u(Rt.$$.fragment,Rf),Rf.forEach(t),Pf.forEach(t),oo=p(Ln),Fr=a(Ln,"SPAN",{});var Of=n(Fr);go=g(Of,"datasets.logging.NOTSET"),Of.forEach(t),Ln.forEach(t),za=p(e),xs=a(e,"P",{});var Sf=n(xs);fo=g(Sf,"datasets.logging.NOTSET = 0"),Sf.forEach(t),Ua=p(e),Is=a(e,"P",{});var Ff=n(Is);po=g(Ff,"int([x]) -> integer"),Ff.forEach(t),Ma=p(e),As=a(e,"P",{});var Cf=n(As);bo=g(Cf,"int(x, base=10) -> integer"),Cf.forEach(t),Ya=p(e),He=a(e,"P",{});var kn=n(He);uo=g(kn,`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),Cr=a(kn,"STRONG",{});var Df=n(Cr);ho=g(Df,"int"),Df.forEach(t),vo=g(kn,`().  For floating point
numbers, this truncates towards zero.`),kn.forEach(t),Ja=p(e),Ts=a(e,"P",{});var Lf=n(Ts);mo=g(Lf,`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),Lf.forEach(t),Ka=p(e),u(Ot.$$.fragment,e),Qa=p(e),ve=a(e,"H3",{class:!0});var jn=n(ve);We=a(jn,"A",{id:!0,class:!0,href:!0});var kf=n(We);Dr=a(kf,"SPAN",{});var jf=n(Dr);u(St.$$.fragment,jf),jf.forEach(t),kf.forEach(t),co=p(jn),Lr=a(jn,"SPAN",{});var Bf=n(Lr);_o=g(Bf,"datasets.logging.WARN"),Bf.forEach(t),jn.forEach(t),Xa=p(e),Ns=a(e,"P",{});var Gf=n(Ns);$o=g(Gf,"datasets.logging.WARN = 30"),Gf.forEach(t),Za=p(e),Ps=a(e,"P",{});var Vf=n(Ps);Eo=g(Vf,"int([x]) -> integer"),Vf.forEach(t),en=p(e),Rs=a(e,"P",{});var Hf=n(Rs);yo=g(Hf,"int(x, base=10) -> integer"),Hf.forEach(t),tn=p(e),qe=a(e,"P",{});var Bn=n(qe);wo=g(Bn,`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),kr=a(Bn,"STRONG",{});var Wf=n(kr);xo=g(Wf,"int"),Wf.forEach(t),Io=g(Bn,`().  For floating point
numbers, this truncates towards zero.`),Bn.forEach(t),sn=p(e),Os=a(e,"P",{});var qf=n(Os);Ao=g(qf,`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),qf.forEach(t),rn=p(e),u(Ft.$$.fragment,e),an=p(e),me=a(e,"H3",{class:!0});var Gn=n(me);ze=a(Gn,"A",{id:!0,class:!0,href:!0});var zf=n(ze);jr=a(zf,"SPAN",{});var Uf=n(jr);u(Ct.$$.fragment,Uf),Uf.forEach(t),zf.forEach(t),To=p(Gn),Br=a(Gn,"SPAN",{});var Mf=n(Br);No=g(Mf,"datasets.logging.WARNING"),Mf.forEach(t),Gn.forEach(t),nn=p(e),Ss=a(e,"P",{});var Yf=n(Ss);Po=g(Yf,"datasets.logging.WARNING = 30"),Yf.forEach(t),ln=p(e),Fs=a(e,"P",{});var Jf=n(Fs);Ro=g(Jf,"int([x]) -> integer"),Jf.forEach(t),on=p(e),Cs=a(e,"P",{});var Kf=n(Cs);Oo=g(Kf,"int(x, base=10) -> integer"),Kf.forEach(t),gn=p(e),Ue=a(e,"P",{});var Vn=n(Ue);So=g(Vn,`Convert a number or string to an integer, or return 0 if no arguments
are given.  If x is a number, return x.`),Gr=a(Vn,"STRONG",{});var Qf=n(Gr);Fo=g(Qf,"int"),Qf.forEach(t),Co=g(Vn,`().  For floating point
numbers, this truncates towards zero.`),Vn.forEach(t),fn=p(e),Ds=a(e,"P",{});var Xf=n(Ds);Do=g(Xf,`If x is not a number or if base is given, then x must be a string,
bytes, or bytearray instance representing an integer literal in the
given base.  The literal can be preceded by \u2019+\u2019 or \u2019-\u2019 and be surrounded
by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.
Base 0 means to interpret the base from the string as an integer literal.`),Xf.forEach(t),pn=p(e),u(Dt.$$.fragment,e),this.h()},h(){d(E,"name","hf:doc:metadata"),d(E,"content",JSON.stringify(ip)),d(_,"id","logging-methods"),d(_,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(_,"href","#logging-methods"),d(y,"class","relative group"),d(Ut,"href","/docs/datasets/pr_3915/en/package_reference/logging_methods#datasets.utils.logging.get_verbosity"),d(Yt,"href","/docs/datasets/pr_3915/en/package_reference/logging_methods#datasets.utils.logging.set_verbosity"),d(Xt,"href","/docs/datasets/pr_3915/en/package_reference/logging_methods#datasets.disable_progress_bar"),d(Zt,"href","/docs/datasets/pr_3915/en/package_reference/logging_methods#datasets.enable_progress_bar"),d(Ne,"id","datasets.utils.logging.get_verbosity"),d(Ne,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(Ne,"href","#datasets.utils.logging.get_verbosity"),d(te,"class","relative group"),d(V,"class","docstring"),d(se,"class","docstring"),d(O,"class","docstring"),d(S,"class","docstring"),d(F,"class","docstring"),d(C,"class","docstring"),d(re,"class","docstring"),d(ae,"class","docstring"),d(ne,"class","docstring"),d(ie,"class","docstring"),d(le,"class","docstring"),d(oe,"class","docstring"),d(Re,"id","levels"),d(Re,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(Re,"href","#levels"),d(ge,"class","relative group"),d(Oe,"id","datasetsloggingcritical"),d(Oe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(Oe,"href","#datasetsloggingcritical"),d(fe,"class","relative group"),d(Fe,"id","datasetsloggingdebug"),d(Fe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(Fe,"href","#datasetsloggingdebug"),d(pe,"class","relative group"),d(De,"id","datasetsloggingerror"),d(De,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(De,"href","#datasetsloggingerror"),d(de,"class","relative group"),d(ke,"id","datasetsloggingfatal"),d(ke,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(ke,"href","#datasetsloggingfatal"),d(be,"class","relative group"),d(Be,"id","datasetslogginginfo"),d(Be,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(Be,"href","#datasetslogginginfo"),d(ue,"class","relative group"),d(Ve,"id","datasetsloggingnotset"),d(Ve,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(Ve,"href","#datasetsloggingnotset"),d(he,"class","relative group"),d(We,"id","datasetsloggingwarn"),d(We,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(We,"href","#datasetsloggingwarn"),d(ve,"class","relative group"),d(ze,"id","datasetsloggingwarning"),d(ze,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),d(ze,"href","#datasetsloggingwarning"),d(me,"class","relative group")},m(e,i){s(document.head,E),l(e,W,i),l(e,y,i),s(y,_),s(_,N),h(P,N,null),s(y,Xe),s(y,J),s(J,K),l(e,ce,i),l(e,D,i),s(D,Q),s(D,B),s(B,Ze),s(D,et),l(e,L,i),l(e,x,i),s(x,tt),s(x,X),s(X,Z),s(x,st),l(e,_e,i),h(R,e,i),l(e,q,i),l(e,$,i),s($,rt),s($,G),s(G,ee),s($,at),s($,w),s(w,z),s($,I),s($,U),s(U,kt),s($,jt),s($,$e),s($e,Bt),s($,Ee),s($,ye),s(ye,Gt),s($,Vt),s($,we),s(we,Ht),s($,Wt),l(e,Wr,i),h(nt,e,i),l(e,qr,i),l(e,qt,i),s(qt,Hn),l(e,zr,i),l(e,xe,i),s(xe,zt),s(zt,Ut),s(Ut,Wn),s(zt,qn),s(xe,zn),s(xe,Mt),s(Mt,Yt),s(Yt,Un),s(Mt,Mn),l(e,Ur,i),l(e,Ie,i),s(Ie,Yn),s(Ie,js),s(js,Jn),s(Ie,Kn),l(e,Mr,i),l(e,A,i),s(A,Ae),s(Ae,Bs),s(Bs,Qn),s(Ae,Xn),s(Ae,Gs),s(Gs,Zn),s(Ae,ei),s(A,ti),s(A,Jt),s(Jt,Vs),s(Vs,si),s(Jt,ri),s(A,ai),s(A,Te),s(Te,Hs),s(Hs,ni),s(Te,ii),s(Te,Ws),s(Ws,li),s(Te,oi),s(A,gi),s(A,Kt),s(Kt,qs),s(qs,fi),s(Kt,pi),s(A,di),s(A,Qt),s(Qt,zs),s(zs,bi),s(Qt,ui),l(e,Yr,i),l(e,k,i),s(k,hi),s(k,Us),s(Us,vi),s(k,mi),s(k,Xt),s(Xt,ci),s(k,_i),s(k,Zt),s(Zt,$i),s(k,Ei),l(e,Jr,i),l(e,te,i),s(te,Ne),s(Ne,Ms),h(it,Ms,null),s(te,yi),s(te,Ys),s(Ys,wi),l(e,Kr,i),l(e,V,i),h(lt,V,null),s(V,xi),s(V,Js),s(Js,Ii),s(V,Ai),h(Pe,V,null),l(e,Qr,i),l(e,se,i),h(ot,se,null),s(se,Ti),s(se,Ks),s(Ks,Ni),l(e,Xr,i),l(e,O,i),h(gt,O,null),s(O,Pi),s(O,Qs),s(Qs,Ri),s(O,Oi),s(O,Xs),s(Xs,Si),s(O,Fi),s(O,es),s(es,Ci),s(es,Zs),s(Zs,Di),l(e,Zr,i),l(e,S,i),h(ft,S,null),s(S,Li),s(S,er),s(er,ki),s(S,ji),s(S,tr),s(tr,Bi),s(S,Gi),s(S,ts),s(ts,Vi),s(ts,sr),s(sr,Hi),l(e,ea,i),l(e,F,i),h(pt,F,null),s(F,Wi),s(F,rr),s(rr,qi),s(F,zi),s(F,ar),s(ar,Ui),s(F,Mi),s(F,ss),s(ss,Yi),s(ss,nr),s(nr,Ji),l(e,ta,i),l(e,C,i),h(dt,C,null),s(C,Ki),s(C,ir),s(ir,Qi),s(C,Xi),s(C,lr),s(lr,Zi),s(C,el),s(C,rs),s(rs,tl),s(rs,or),s(or,sl),l(e,sa,i),l(e,re,i),h(bt,re,null),s(re,rl),s(re,gr),s(gr,al),l(e,ra,i),l(e,ae,i),h(ut,ae,null),s(ae,nl),s(ae,fr),s(fr,il),l(e,aa,i),l(e,ne,i),h(ht,ne,null),s(ne,ll),s(ne,pr),s(pr,ol),l(e,na,i),l(e,ie,i),h(vt,ie,null),s(ie,gl),s(ie,dr),s(dr,fl),l(e,ia,i),l(e,le,i),h(mt,le,null),s(le,pl),s(le,br),s(br,dl),l(e,la,i),l(e,oe,i),h(ct,oe,null),s(oe,bl),s(oe,ur),s(ur,ul),l(e,oa,i),l(e,ge,i),s(ge,Re),s(Re,hr),h(_t,hr,null),s(ge,hl),s(ge,vr),s(vr,vl),l(e,ga,i),l(e,fe,i),s(fe,Oe),s(Oe,mr),h($t,mr,null),s(fe,ml),s(fe,cr),s(cr,cl),l(e,fa,i),l(e,as,i),s(as,_l),l(e,pa,i),l(e,ns,i),s(ns,$l),l(e,da,i),l(e,is,i),s(is,El),l(e,ba,i),l(e,Se,i),s(Se,yl),s(Se,_r),s(_r,wl),s(Se,xl),l(e,ua,i),l(e,ls,i),s(ls,Il),l(e,ha,i),h(Et,e,i),l(e,va,i),l(e,pe,i),s(pe,Fe),s(Fe,$r),h(yt,$r,null),s(pe,Al),s(pe,Er),s(Er,Tl),l(e,ma,i),l(e,os,i),s(os,Nl),l(e,ca,i),l(e,gs,i),s(gs,Pl),l(e,_a,i),l(e,fs,i),s(fs,Rl),l(e,$a,i),l(e,Ce,i),s(Ce,Ol),s(Ce,yr),s(yr,Sl),s(Ce,Fl),l(e,Ea,i),l(e,ps,i),s(ps,Cl),l(e,ya,i),h(wt,e,i),l(e,wa,i),l(e,de,i),s(de,De),s(De,wr),h(xt,wr,null),s(de,Dl),s(de,xr),s(xr,Ll),l(e,xa,i),l(e,ds,i),s(ds,kl),l(e,Ia,i),l(e,bs,i),s(bs,jl),l(e,Aa,i),l(e,us,i),s(us,Bl),l(e,Ta,i),l(e,Le,i),s(Le,Gl),s(Le,Ir),s(Ir,Vl),s(Le,Hl),l(e,Na,i),l(e,hs,i),s(hs,Wl),l(e,Pa,i),h(It,e,i),l(e,Ra,i),l(e,be,i),s(be,ke),s(ke,Ar),h(At,Ar,null),s(be,ql),s(be,Tr),s(Tr,zl),l(e,Oa,i),l(e,vs,i),s(vs,Ul),l(e,Sa,i),l(e,ms,i),s(ms,Ml),l(e,Fa,i),l(e,cs,i),s(cs,Yl),l(e,Ca,i),l(e,je,i),s(je,Jl),s(je,Nr),s(Nr,Kl),s(je,Ql),l(e,Da,i),l(e,_s,i),s(_s,Xl),l(e,La,i),h(Tt,e,i),l(e,ka,i),l(e,ue,i),s(ue,Be),s(Be,Pr),h(Nt,Pr,null),s(ue,Zl),s(ue,Rr),s(Rr,eo),l(e,ja,i),l(e,$s,i),s($s,to),l(e,Ba,i),l(e,Es,i),s(Es,so),l(e,Ga,i),l(e,ys,i),s(ys,ro),l(e,Va,i),l(e,Ge,i),s(Ge,ao),s(Ge,Or),s(Or,no),s(Ge,io),l(e,Ha,i),l(e,ws,i),s(ws,lo),l(e,Wa,i),h(Pt,e,i),l(e,qa,i),l(e,he,i),s(he,Ve),s(Ve,Sr),h(Rt,Sr,null),s(he,oo),s(he,Fr),s(Fr,go),l(e,za,i),l(e,xs,i),s(xs,fo),l(e,Ua,i),l(e,Is,i),s(Is,po),l(e,Ma,i),l(e,As,i),s(As,bo),l(e,Ya,i),l(e,He,i),s(He,uo),s(He,Cr),s(Cr,ho),s(He,vo),l(e,Ja,i),l(e,Ts,i),s(Ts,mo),l(e,Ka,i),h(Ot,e,i),l(e,Qa,i),l(e,ve,i),s(ve,We),s(We,Dr),h(St,Dr,null),s(ve,co),s(ve,Lr),s(Lr,_o),l(e,Xa,i),l(e,Ns,i),s(Ns,$o),l(e,Za,i),l(e,Ps,i),s(Ps,Eo),l(e,en,i),l(e,Rs,i),s(Rs,yo),l(e,tn,i),l(e,qe,i),s(qe,wo),s(qe,kr),s(kr,xo),s(qe,Io),l(e,sn,i),l(e,Os,i),s(Os,Ao),l(e,rn,i),h(Ft,e,i),l(e,an,i),l(e,me,i),s(me,ze),s(ze,jr),h(Ct,jr,null),s(me,To),s(me,Br),s(Br,No),l(e,nn,i),l(e,Ss,i),s(Ss,Po),l(e,ln,i),l(e,Fs,i),s(Fs,Ro),l(e,on,i),l(e,Cs,i),s(Cs,Oo),l(e,gn,i),l(e,Ue,i),s(Ue,So),s(Ue,Gr),s(Gr,Fo),s(Ue,Co),l(e,fn,i),l(e,Ds,i),s(Ds,Do),l(e,pn,i),h(Dt,e,i),dn=!0},p(e,[i]){const Lt={};i&2&&(Lt.$$scope={dirty:i,ctx:e}),Pe.$set(Lt)},i(e){dn||(v(P.$$.fragment,e),v(R.$$.fragment,e),v(nt.$$.fragment,e),v(it.$$.fragment,e),v(lt.$$.fragment,e),v(Pe.$$.fragment,e),v(ot.$$.fragment,e),v(gt.$$.fragment,e),v(ft.$$.fragment,e),v(pt.$$.fragment,e),v(dt.$$.fragment,e),v(bt.$$.fragment,e),v(ut.$$.fragment,e),v(ht.$$.fragment,e),v(vt.$$.fragment,e),v(mt.$$.fragment,e),v(ct.$$.fragment,e),v(_t.$$.fragment,e),v($t.$$.fragment,e),v(Et.$$.fragment,e),v(yt.$$.fragment,e),v(wt.$$.fragment,e),v(xt.$$.fragment,e),v(It.$$.fragment,e),v(At.$$.fragment,e),v(Tt.$$.fragment,e),v(Nt.$$.fragment,e),v(Pt.$$.fragment,e),v(Rt.$$.fragment,e),v(Ot.$$.fragment,e),v(St.$$.fragment,e),v(Ft.$$.fragment,e),v(Ct.$$.fragment,e),v(Dt.$$.fragment,e),dn=!0)},o(e){m(P.$$.fragment,e),m(R.$$.fragment,e),m(nt.$$.fragment,e),m(it.$$.fragment,e),m(lt.$$.fragment,e),m(Pe.$$.fragment,e),m(ot.$$.fragment,e),m(gt.$$.fragment,e),m(ft.$$.fragment,e),m(pt.$$.fragment,e),m(dt.$$.fragment,e),m(bt.$$.fragment,e),m(ut.$$.fragment,e),m(ht.$$.fragment,e),m(vt.$$.fragment,e),m(mt.$$.fragment,e),m(ct.$$.fragment,e),m(_t.$$.fragment,e),m($t.$$.fragment,e),m(Et.$$.fragment,e),m(yt.$$.fragment,e),m(wt.$$.fragment,e),m(xt.$$.fragment,e),m(It.$$.fragment,e),m(At.$$.fragment,e),m(Tt.$$.fragment,e),m(Nt.$$.fragment,e),m(Pt.$$.fragment,e),m(Rt.$$.fragment,e),m(Ot.$$.fragment,e),m(St.$$.fragment,e),m(Ft.$$.fragment,e),m(Ct.$$.fragment,e),m(Dt.$$.fragment,e),dn=!1},d(e){t(E),e&&t(W),e&&t(y),c(P),e&&t(ce),e&&t(D),e&&t(L),e&&t(x),e&&t(_e),c(R,e),e&&t(q),e&&t($),e&&t(Wr),c(nt,e),e&&t(qr),e&&t(qt),e&&t(zr),e&&t(xe),e&&t(Ur),e&&t(Ie),e&&t(Mr),e&&t(A),e&&t(Yr),e&&t(k),e&&t(Jr),e&&t(te),c(it),e&&t(Kr),e&&t(V),c(lt),c(Pe),e&&t(Qr),e&&t(se),c(ot),e&&t(Xr),e&&t(O),c(gt),e&&t(Zr),e&&t(S),c(ft),e&&t(ea),e&&t(F),c(pt),e&&t(ta),e&&t(C),c(dt),e&&t(sa),e&&t(re),c(bt),e&&t(ra),e&&t(ae),c(ut),e&&t(aa),e&&t(ne),c(ht),e&&t(na),e&&t(ie),c(vt),e&&t(ia),e&&t(le),c(mt),e&&t(la),e&&t(oe),c(ct),e&&t(oa),e&&t(ge),c(_t),e&&t(ga),e&&t(fe),c($t),e&&t(fa),e&&t(as),e&&t(pa),e&&t(ns),e&&t(da),e&&t(is),e&&t(ba),e&&t(Se),e&&t(ua),e&&t(ls),e&&t(ha),c(Et,e),e&&t(va),e&&t(pe),c(yt),e&&t(ma),e&&t(os),e&&t(ca),e&&t(gs),e&&t(_a),e&&t(fs),e&&t($a),e&&t(Ce),e&&t(Ea),e&&t(ps),e&&t(ya),c(wt,e),e&&t(wa),e&&t(de),c(xt),e&&t(xa),e&&t(ds),e&&t(Ia),e&&t(bs),e&&t(Aa),e&&t(us),e&&t(Ta),e&&t(Le),e&&t(Na),e&&t(hs),e&&t(Pa),c(It,e),e&&t(Ra),e&&t(be),c(At),e&&t(Oa),e&&t(vs),e&&t(Sa),e&&t(ms),e&&t(Fa),e&&t(cs),e&&t(Ca),e&&t(je),e&&t(Da),e&&t(_s),e&&t(La),c(Tt,e),e&&t(ka),e&&t(ue),c(Nt),e&&t(ja),e&&t($s),e&&t(Ba),e&&t(Es),e&&t(Ga),e&&t(ys),e&&t(Va),e&&t(Ge),e&&t(Ha),e&&t(ws),e&&t(Wa),c(Pt,e),e&&t(qa),e&&t(he),c(Rt),e&&t(za),e&&t(xs),e&&t(Ua),e&&t(Is),e&&t(Ma),e&&t(As),e&&t(Ya),e&&t(He),e&&t(Ja),e&&t(Ts),e&&t(Ka),c(Ot,e),e&&t(Qa),e&&t(ve),c(St),e&&t(Xa),e&&t(Ns),e&&t(Za),e&&t(Ps),e&&t(en),e&&t(Rs),e&&t(tn),e&&t(qe),e&&t(sn),e&&t(Os),e&&t(rn),c(Ft,e),e&&t(an),e&&t(me),c(Ct),e&&t(nn),e&&t(Ss),e&&t(ln),e&&t(Fs),e&&t(on),e&&t(Cs),e&&t(gn),e&&t(Ue),e&&t(fn),e&&t(Ds),e&&t(pn),c(Dt,e)}}}const ip={local:"logging-methods",sections:[{local:"datasets.utils.logging.get_verbosity",title:"Functions"},{local:"levels",sections:[{local:"datasetsloggingcritical",title:"datasets.logging.CRITICAL"},{local:"datasetsloggingdebug",title:"datasets.logging.DEBUG"},{local:"datasetsloggingerror",title:"datasets.logging.ERROR"},{local:"datasetsloggingfatal",title:"datasets.logging.FATAL"},{local:"datasetslogginginfo",title:"datasets.logging.INFO"},{local:"datasetsloggingnotset",title:"datasets.logging.NOTSET"},{local:"datasetsloggingwarn",title:"datasets.logging.WARN"},{local:"datasetsloggingwarning",title:"datasets.logging.WARNING"}],title:"Levels"}],title:"Logging methods"};function lp(ks,E,W){let{fw:y}=E;return ks.$$set=_=>{"fw"in _&&W(0,y=_.fw)},[y]}class bp extends Zf{constructor(E){super();ep(this,E,lp,np,tp,{fw:0})}}export{bp as default,ip as metadata};
