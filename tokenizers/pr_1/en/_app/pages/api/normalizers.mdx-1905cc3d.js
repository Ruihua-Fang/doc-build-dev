import{S as cn,i as pn,s as fn,e as o,k as m,w as $,t as h,M as hn,c as a,d as r,m as c,a as n,x as v,h as d,b as s,F as t,g as f,y as g,q as k,o as N,B as w,v as dn,L as zn}from"../../chunks/vendor-0d3f0756.js";import{D as P}from"../../chunks/Docstring-cebdcc97.js";import{I as x}from"../../chunks/IconCopyLink-9193371d.js";import{T as un,M as ta}from"../../chunks/TokenizersLanguageContent-ca787841.js";function $n(I){let l,u,i,z,b,E,A,F,y,T,K,B,_,D,C,Ye,be,q,ce,or,Ee,Vt,ar,Ht,jr,H,ye,Ut,nr,Mt,Jr,U,pe,sr,Se,Ot,ir,Wt,Gr,M,Pe,jt,lr,Jt,Qr,O,fe,mr,Ae,Gt,cr,Qt,Xr,W,De,Xt,pr,Yt,Yr,j,he,fr,xe,Zt,hr,eo,Zr,J,Fe,ro,dr,to,et,G,de,zr,Ce,oo,ur,ao,rt,Q,Ie,no,$r,so,tt,X,ze,vr,Te,io,gr,lo,ot,Y,Ke,mo,kr,co,at,Z,ue,Nr,qe,po,wr,fo,nt,S,Be,ho,_r,zo,uo,br,$o,vo,L,Le,go,Re,ko,Er,No,wo,_o,$e,bo,yr,Eo,yo,Sr,So,Po,R,Ve,Ao,Pr,Do,xo,ve,Fo,Ze,Co,Io,Ar,To,st,ee,ge,Dr,He,Ko,xr,qo,it,re,Ue,Bo,Fr,Lo,lt,te,ke,Cr,Me,Ro,Ir,Vo,mt,oe,Oe,Ho,Tr,Uo,ct,ae,Ne,Kr,We,Mo,qr,Oo,pt,ne,je,Wo,Br,jo,ft,se,we,Lr,Je,Jo,Rr,Go,ht,ie,Ge,Qo,Vr,Xo,dt,le,_e,Hr,Qe,Yo,Ur,Zo,zt,me,Xe,ea,Mr,ra,ut;return z=new x({}),T=new P({props:{name:"class tokenizers.normalizers.BertNormalizer",anchor:"tokenizers.normalizers.BertNormalizer",parameters:[{name:"clean_text",val:" = True"},{name:"handle_chinese_chars",val:" = True"},{name:"strip_accents",val:" = None"},{name:"lowercase",val:" = True"}],parametersDescription:[{anchor:"tokenizers.normalizers.BertNormalizer.clean_text",description:`<strong>clean_text</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether to clean the text, by removing any control characters
and replacing all whitespaces by the classic one.`,name:"clean_text"},{anchor:"tokenizers.normalizers.BertNormalizer.handle_chinese_chars",description:`<strong>handle_chinese_chars</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether to handle chinese chars by putting spaces around them.`,name:"handle_chinese_chars"},{anchor:"tokenizers.normalizers.BertNormalizer.strip_accents",description:`<strong>strip_accents</strong> (<code>bool</code>, <em>optional</em>) &#x2014;
Whether to strip all accents. If this option is not specified (ie == None),
then it will be determined by the value for <em>lowercase</em> (as in the original Bert).`,name:"strip_accents"},{anchor:"tokenizers.normalizers.BertNormalizer.lowercase",description:`<strong>lowercase</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether to lowercase.`,name:"lowercase"}]}}),Ee=new x({}),ye=new P({props:{name:"class tokenizers.normalizers.Lowercase",anchor:"tokenizers.normalizers.Lowercase",parameters:[]}}),Se=new x({}),Pe=new P({props:{name:"class tokenizers.normalizers.NFC",anchor:"tokenizers.normalizers.NFC",parameters:[]}}),Ae=new x({}),De=new P({props:{name:"class tokenizers.normalizers.NFD",anchor:"tokenizers.normalizers.NFD",parameters:[]}}),xe=new x({}),Fe=new P({props:{name:"class tokenizers.normalizers.NFKC",anchor:"tokenizers.normalizers.NFKC",parameters:[]}}),Ce=new x({}),Ie=new P({props:{name:"class tokenizers.normalizers.NFKD",anchor:"tokenizers.normalizers.NFKD",parameters:[]}}),Te=new x({}),Ke=new P({props:{name:"class tokenizers.normalizers.Nmt",anchor:"tokenizers.normalizers.Nmt",parameters:[]}}),qe=new x({}),Be=new P({props:{name:"class tokenizers.normalizers.Normalizer",anchor:"tokenizers.normalizers.Normalizer",parameters:[]}}),Le=new P({props:{name:"normalize",anchor:"tokenizers.normalizers.Normalizer.normalize",parameters:[{name:"normalized",val:""}],parametersDescription:[{anchor:"tokenizers.normalizers.Normalizer.normalize.normalized",description:`<strong>normalized</strong> (<code>NormalizedString</code>) &#x2014;
The normalized string on which to apply this
<a href="/docs/tokenizers/pr_1/en/api/normalizers#tokenizers.normalizers.Normalizer">Normalizer</a>`,name:"normalized"}]}}),Ve=new P({props:{name:"normalize_str",anchor:"tokenizers.normalizers.Normalizer.normalize_str",parameters:[{name:"sequence",val:""}],parametersDescription:[{anchor:"tokenizers.normalizers.Normalizer.normalize_str.sequence",description:`<strong>sequence</strong> (<code>str</code>) &#x2014;
A string to normalize`,name:"sequence"}],returnDescription:`
<p>A string after normalization</p>
`,returnType:`
<p><code>str</code></p>
`}}),He=new x({}),Ue=new P({props:{name:"class tokenizers.normalizers.Precompiled",anchor:"tokenizers.normalizers.Precompiled",parameters:[{name:"precompiled_charsmap",val:""}]}}),Me=new x({}),Oe=new P({props:{name:"class tokenizers.normalizers.Replace",anchor:"tokenizers.normalizers.Replace",parameters:[{name:"pattern",val:""},{name:"content",val:""}]}}),We=new x({}),je=new P({props:{name:"class tokenizers.normalizers.Sequence",anchor:"tokenizers.normalizers.Sequence",parameters:"",parametersDescription:[{anchor:"tokenizers.normalizers.Sequence.normalizers",description:`<strong>normalizers</strong> (<code>List[Normalizer]</code>) &#x2014;
A list of Normalizer to be run as a sequence`,name:"normalizers"}]}}),Je=new x({}),Ge=new P({props:{name:"class tokenizers.normalizers.Strip",anchor:"tokenizers.normalizers.Strip",parameters:[{name:"left",val:" = True"},{name:"right",val:" = True"}]}}),Qe=new x({}),Xe=new P({props:{name:"class tokenizers.normalizers.StripAccents",anchor:"tokenizers.normalizers.StripAccents",parameters:[]}}),{c(){l=o("h2"),u=o("a"),i=o("span"),$(z.$$.fragment),b=m(),E=o("span"),A=h("BertNormalizer"),F=m(),y=o("div"),$(T.$$.fragment),K=m(),B=o("p"),_=h("BertNormalizer"),D=m(),C=o("p"),Ye=h(`Takes care of normalizing raw text before giving it to a Bert model.
This includes cleaning the text, handling accents, chinese chars and lowercasing`),be=m(),q=o("h2"),ce=o("a"),or=o("span"),$(Ee.$$.fragment),Vt=m(),ar=o("span"),Ht=h("Lowercase"),jr=m(),H=o("div"),$(ye.$$.fragment),Ut=m(),nr=o("p"),Mt=h("Lowercase Normalizer"),Jr=m(),U=o("h2"),pe=o("a"),sr=o("span"),$(Se.$$.fragment),Ot=m(),ir=o("span"),Wt=h("NFC"),Gr=m(),M=o("div"),$(Pe.$$.fragment),jt=m(),lr=o("p"),Jt=h("NFC Unicode Normalizer"),Qr=m(),O=o("h2"),fe=o("a"),mr=o("span"),$(Ae.$$.fragment),Gt=m(),cr=o("span"),Qt=h("NFD"),Xr=m(),W=o("div"),$(De.$$.fragment),Xt=m(),pr=o("p"),Yt=h("NFD Unicode Normalizer"),Yr=m(),j=o("h2"),he=o("a"),fr=o("span"),$(xe.$$.fragment),Zt=m(),hr=o("span"),eo=h("NFKC"),Zr=m(),J=o("div"),$(Fe.$$.fragment),ro=m(),dr=o("p"),to=h("NFKC Unicode Normalizer"),et=m(),G=o("h2"),de=o("a"),zr=o("span"),$(Ce.$$.fragment),oo=m(),ur=o("span"),ao=h("NFKD"),rt=m(),Q=o("div"),$(Ie.$$.fragment),no=m(),$r=o("p"),so=h("NFKD Unicode Normalizer"),tt=m(),X=o("h2"),ze=o("a"),vr=o("span"),$(Te.$$.fragment),io=m(),gr=o("span"),lo=h("Nmt"),ot=m(),Y=o("div"),$(Ke.$$.fragment),mo=m(),kr=o("p"),co=h("Nmt normalizer"),at=m(),Z=o("h2"),ue=o("a"),Nr=o("span"),$(qe.$$.fragment),po=m(),wr=o("span"),fo=h("Normalizer"),nt=m(),S=o("div"),$(Be.$$.fragment),ho=m(),_r=o("p"),zo=h("Base class for all normalizers"),uo=m(),br=o("p"),$o=h(`This class is not supposed to be instantiated directly. Instead, any implementation of a
Normalizer will return an instance of this class when instantiated.`),vo=m(),L=o("div"),$(Le.$$.fragment),go=m(),Re=o("p"),ko=h("Normalize a "),Er=o("code"),No=h("NormalizedString"),wo=h(" in-place"),_o=m(),$e=o("p"),bo=h("This method allows to modify a "),yr=o("code"),Eo=h("NormalizedString"),yo=h(` to
keep track of the alignment information. If you just want to see the result
of the normalization on a raw string, you can use
`),Sr=o("code"),So=h("normalize_str()"),Po=m(),R=o("div"),$(Ve.$$.fragment),Ao=m(),Pr=o("p"),Do=h("Normalize the given string"),xo=m(),ve=o("p"),Fo=h(`This method provides a way to visualize the effect of a
`),Ze=o("a"),Co=h("Normalizer"),Io=h(` but it does not keep track of the alignment
information. If you need to get/convert offsets, you can use
`),Ar=o("code"),To=h("normalize()"),st=m(),ee=o("h2"),ge=o("a"),Dr=o("span"),$(He.$$.fragment),Ko=m(),xr=o("span"),qo=h("Precompiled"),it=m(),re=o("div"),$(Ue.$$.fragment),Bo=m(),Fr=o("p"),Lo=h(`Precompiled normalizer
Don\u2019t use manually it is used for compatiblity for SentencePiece.`),lt=m(),te=o("h2"),ke=o("a"),Cr=o("span"),$(Me.$$.fragment),Ro=m(),Ir=o("span"),Vo=h("Replace"),mt=m(),oe=o("div"),$(Oe.$$.fragment),Ho=m(),Tr=o("p"),Uo=h("Replace normalizer"),ct=m(),ae=o("h2"),Ne=o("a"),Kr=o("span"),$(We.$$.fragment),Mo=m(),qr=o("span"),Oo=h("Sequence"),pt=m(),ne=o("div"),$(je.$$.fragment),Wo=m(),Br=o("p"),jo=h(`Allows concatenating multiple other Normalizer as a Sequence.
All the normalizers run in sequence in the given order`),ft=m(),se=o("h2"),we=o("a"),Lr=o("span"),$(Je.$$.fragment),Jo=m(),Rr=o("span"),Go=h("Strip"),ht=m(),ie=o("div"),$(Ge.$$.fragment),Qo=m(),Vr=o("p"),Xo=h("Strip normalizer"),dt=m(),le=o("h2"),_e=o("a"),Hr=o("span"),$(Qe.$$.fragment),Yo=m(),Ur=o("span"),Zo=h("StripAccents"),zt=m(),me=o("div"),$(Xe.$$.fragment),ea=m(),Mr=o("p"),ra=h("StripAccents normalizer"),this.h()},l(e){l=a(e,"H2",{class:!0});var p=n(l);u=a(p,"A",{id:!0,class:!0,href:!0});var oa=n(u);i=a(oa,"SPAN",{});var aa=n(i);v(z.$$.fragment,aa),aa.forEach(r),oa.forEach(r),b=c(p),E=a(p,"SPAN",{});var na=n(E);A=d(na,"BertNormalizer"),na.forEach(r),p.forEach(r),F=c(e),y=a(e,"DIV",{class:!0});var er=n(y);v(T.$$.fragment,er),K=c(er),B=a(er,"P",{});var sa=n(B);_=d(sa,"BertNormalizer"),sa.forEach(r),D=c(er),C=a(er,"P",{});var ia=n(C);Ye=d(ia,`Takes care of normalizing raw text before giving it to a Bert model.
This includes cleaning the text, handling accents, chinese chars and lowercasing`),ia.forEach(r),er.forEach(r),be=c(e),q=a(e,"H2",{class:!0});var $t=n(q);ce=a($t,"A",{id:!0,class:!0,href:!0});var la=n(ce);or=a(la,"SPAN",{});var ma=n(or);v(Ee.$$.fragment,ma),ma.forEach(r),la.forEach(r),Vt=c($t),ar=a($t,"SPAN",{});var ca=n(ar);Ht=d(ca,"Lowercase"),ca.forEach(r),$t.forEach(r),jr=c(e),H=a(e,"DIV",{class:!0});var vt=n(H);v(ye.$$.fragment,vt),Ut=c(vt),nr=a(vt,"P",{});var pa=n(nr);Mt=d(pa,"Lowercase Normalizer"),pa.forEach(r),vt.forEach(r),Jr=c(e),U=a(e,"H2",{class:!0});var gt=n(U);pe=a(gt,"A",{id:!0,class:!0,href:!0});var fa=n(pe);sr=a(fa,"SPAN",{});var ha=n(sr);v(Se.$$.fragment,ha),ha.forEach(r),fa.forEach(r),Ot=c(gt),ir=a(gt,"SPAN",{});var da=n(ir);Wt=d(da,"NFC"),da.forEach(r),gt.forEach(r),Gr=c(e),M=a(e,"DIV",{class:!0});var kt=n(M);v(Pe.$$.fragment,kt),jt=c(kt),lr=a(kt,"P",{});var za=n(lr);Jt=d(za,"NFC Unicode Normalizer"),za.forEach(r),kt.forEach(r),Qr=c(e),O=a(e,"H2",{class:!0});var Nt=n(O);fe=a(Nt,"A",{id:!0,class:!0,href:!0});var ua=n(fe);mr=a(ua,"SPAN",{});var $a=n(mr);v(Ae.$$.fragment,$a),$a.forEach(r),ua.forEach(r),Gt=c(Nt),cr=a(Nt,"SPAN",{});var va=n(cr);Qt=d(va,"NFD"),va.forEach(r),Nt.forEach(r),Xr=c(e),W=a(e,"DIV",{class:!0});var wt=n(W);v(De.$$.fragment,wt),Xt=c(wt),pr=a(wt,"P",{});var ga=n(pr);Yt=d(ga,"NFD Unicode Normalizer"),ga.forEach(r),wt.forEach(r),Yr=c(e),j=a(e,"H2",{class:!0});var _t=n(j);he=a(_t,"A",{id:!0,class:!0,href:!0});var ka=n(he);fr=a(ka,"SPAN",{});var Na=n(fr);v(xe.$$.fragment,Na),Na.forEach(r),ka.forEach(r),Zt=c(_t),hr=a(_t,"SPAN",{});var wa=n(hr);eo=d(wa,"NFKC"),wa.forEach(r),_t.forEach(r),Zr=c(e),J=a(e,"DIV",{class:!0});var bt=n(J);v(Fe.$$.fragment,bt),ro=c(bt),dr=a(bt,"P",{});var _a=n(dr);to=d(_a,"NFKC Unicode Normalizer"),_a.forEach(r),bt.forEach(r),et=c(e),G=a(e,"H2",{class:!0});var Et=n(G);de=a(Et,"A",{id:!0,class:!0,href:!0});var ba=n(de);zr=a(ba,"SPAN",{});var Ea=n(zr);v(Ce.$$.fragment,Ea),Ea.forEach(r),ba.forEach(r),oo=c(Et),ur=a(Et,"SPAN",{});var ya=n(ur);ao=d(ya,"NFKD"),ya.forEach(r),Et.forEach(r),rt=c(e),Q=a(e,"DIV",{class:!0});var yt=n(Q);v(Ie.$$.fragment,yt),no=c(yt),$r=a(yt,"P",{});var Sa=n($r);so=d(Sa,"NFKD Unicode Normalizer"),Sa.forEach(r),yt.forEach(r),tt=c(e),X=a(e,"H2",{class:!0});var St=n(X);ze=a(St,"A",{id:!0,class:!0,href:!0});var Pa=n(ze);vr=a(Pa,"SPAN",{});var Aa=n(vr);v(Te.$$.fragment,Aa),Aa.forEach(r),Pa.forEach(r),io=c(St),gr=a(St,"SPAN",{});var Da=n(gr);lo=d(Da,"Nmt"),Da.forEach(r),St.forEach(r),ot=c(e),Y=a(e,"DIV",{class:!0});var Pt=n(Y);v(Ke.$$.fragment,Pt),mo=c(Pt),kr=a(Pt,"P",{});var xa=n(kr);co=d(xa,"Nmt normalizer"),xa.forEach(r),Pt.forEach(r),at=c(e),Z=a(e,"H2",{class:!0});var At=n(Z);ue=a(At,"A",{id:!0,class:!0,href:!0});var Fa=n(ue);Nr=a(Fa,"SPAN",{});var Ca=n(Nr);v(qe.$$.fragment,Ca),Ca.forEach(r),Fa.forEach(r),po=c(At),wr=a(At,"SPAN",{});var Ia=n(wr);fo=d(Ia,"Normalizer"),Ia.forEach(r),At.forEach(r),nt=c(e),S=a(e,"DIV",{class:!0});var V=n(S);v(Be.$$.fragment,V),ho=c(V),_r=a(V,"P",{});var Ta=n(_r);zo=d(Ta,"Base class for all normalizers"),Ta.forEach(r),uo=c(V),br=a(V,"P",{});var Ka=n(br);$o=d(Ka,`This class is not supposed to be instantiated directly. Instead, any implementation of a
Normalizer will return an instance of this class when instantiated.`),Ka.forEach(r),vo=c(V),L=a(V,"DIV",{class:!0});var rr=n(L);v(Le.$$.fragment,rr),go=c(rr),Re=a(rr,"P",{});var Dt=n(Re);ko=d(Dt,"Normalize a "),Er=a(Dt,"CODE",{});var qa=n(Er);No=d(qa,"NormalizedString"),qa.forEach(r),wo=d(Dt," in-place"),Dt.forEach(r),_o=c(rr),$e=a(rr,"P",{});var Or=n($e);bo=d(Or,"This method allows to modify a "),yr=a(Or,"CODE",{});var Ba=n(yr);Eo=d(Ba,"NormalizedString"),Ba.forEach(r),yo=d(Or,` to
keep track of the alignment information. If you just want to see the result
of the normalization on a raw string, you can use
`),Sr=a(Or,"CODE",{});var La=n(Sr);So=d(La,"normalize_str()"),La.forEach(r),Or.forEach(r),rr.forEach(r),Po=c(V),R=a(V,"DIV",{class:!0});var tr=n(R);v(Ve.$$.fragment,tr),Ao=c(tr),Pr=a(tr,"P",{});var Ra=n(Pr);Do=d(Ra,"Normalize the given string"),Ra.forEach(r),xo=c(tr),ve=a(tr,"P",{});var Wr=n(ve);Fo=d(Wr,`This method provides a way to visualize the effect of a
`),Ze=a(Wr,"A",{href:!0});var Va=n(Ze);Co=d(Va,"Normalizer"),Va.forEach(r),Io=d(Wr,` but it does not keep track of the alignment
information. If you need to get/convert offsets, you can use
`),Ar=a(Wr,"CODE",{});var Ha=n(Ar);To=d(Ha,"normalize()"),Ha.forEach(r),Wr.forEach(r),tr.forEach(r),V.forEach(r),st=c(e),ee=a(e,"H2",{class:!0});var xt=n(ee);ge=a(xt,"A",{id:!0,class:!0,href:!0});var Ua=n(ge);Dr=a(Ua,"SPAN",{});var Ma=n(Dr);v(He.$$.fragment,Ma),Ma.forEach(r),Ua.forEach(r),Ko=c(xt),xr=a(xt,"SPAN",{});var Oa=n(xr);qo=d(Oa,"Precompiled"),Oa.forEach(r),xt.forEach(r),it=c(e),re=a(e,"DIV",{class:!0});var Ft=n(re);v(Ue.$$.fragment,Ft),Bo=c(Ft),Fr=a(Ft,"P",{});var Wa=n(Fr);Lo=d(Wa,`Precompiled normalizer
Don\u2019t use manually it is used for compatiblity for SentencePiece.`),Wa.forEach(r),Ft.forEach(r),lt=c(e),te=a(e,"H2",{class:!0});var Ct=n(te);ke=a(Ct,"A",{id:!0,class:!0,href:!0});var ja=n(ke);Cr=a(ja,"SPAN",{});var Ja=n(Cr);v(Me.$$.fragment,Ja),Ja.forEach(r),ja.forEach(r),Ro=c(Ct),Ir=a(Ct,"SPAN",{});var Ga=n(Ir);Vo=d(Ga,"Replace"),Ga.forEach(r),Ct.forEach(r),mt=c(e),oe=a(e,"DIV",{class:!0});var It=n(oe);v(Oe.$$.fragment,It),Ho=c(It),Tr=a(It,"P",{});var Qa=n(Tr);Uo=d(Qa,"Replace normalizer"),Qa.forEach(r),It.forEach(r),ct=c(e),ae=a(e,"H2",{class:!0});var Tt=n(ae);Ne=a(Tt,"A",{id:!0,class:!0,href:!0});var Xa=n(Ne);Kr=a(Xa,"SPAN",{});var Ya=n(Kr);v(We.$$.fragment,Ya),Ya.forEach(r),Xa.forEach(r),Mo=c(Tt),qr=a(Tt,"SPAN",{});var Za=n(qr);Oo=d(Za,"Sequence"),Za.forEach(r),Tt.forEach(r),pt=c(e),ne=a(e,"DIV",{class:!0});var Kt=n(ne);v(je.$$.fragment,Kt),Wo=c(Kt),Br=a(Kt,"P",{});var en=n(Br);jo=d(en,`Allows concatenating multiple other Normalizer as a Sequence.
All the normalizers run in sequence in the given order`),en.forEach(r),Kt.forEach(r),ft=c(e),se=a(e,"H2",{class:!0});var qt=n(se);we=a(qt,"A",{id:!0,class:!0,href:!0});var rn=n(we);Lr=a(rn,"SPAN",{});var tn=n(Lr);v(Je.$$.fragment,tn),tn.forEach(r),rn.forEach(r),Jo=c(qt),Rr=a(qt,"SPAN",{});var on=n(Rr);Go=d(on,"Strip"),on.forEach(r),qt.forEach(r),ht=c(e),ie=a(e,"DIV",{class:!0});var Bt=n(ie);v(Ge.$$.fragment,Bt),Qo=c(Bt),Vr=a(Bt,"P",{});var an=n(Vr);Xo=d(an,"Strip normalizer"),an.forEach(r),Bt.forEach(r),dt=c(e),le=a(e,"H2",{class:!0});var Lt=n(le);_e=a(Lt,"A",{id:!0,class:!0,href:!0});var nn=n(_e);Hr=a(nn,"SPAN",{});var sn=n(Hr);v(Qe.$$.fragment,sn),sn.forEach(r),nn.forEach(r),Yo=c(Lt),Ur=a(Lt,"SPAN",{});var ln=n(Ur);Zo=d(ln,"StripAccents"),ln.forEach(r),Lt.forEach(r),zt=c(e),me=a(e,"DIV",{class:!0});var Rt=n(me);v(Xe.$$.fragment,Rt),ea=c(Rt),Mr=a(Rt,"P",{});var mn=n(Mr);ra=d(mn,"StripAccents normalizer"),mn.forEach(r),Rt.forEach(r),this.h()},h(){s(u,"id","tokenizers.normalizers.BertNormalizer]][[tokenizers.normalizers.BertNormalizer"),s(u,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(u,"href","#tokenizers.normalizers.BertNormalizer]][[tokenizers.normalizers.BertNormalizer"),s(l,"class","relative group"),s(y,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),s(ce,"id","tokenizers.normalizers.Lowercase]][[tokenizers.normalizers.Lowercase"),s(ce,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(ce,"href","#tokenizers.normalizers.Lowercase]][[tokenizers.normalizers.Lowercase"),s(q,"class","relative group"),s(H,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),s(pe,"id","tokenizers.normalizers.NFC]][[tokenizers.normalizers.NFC"),s(pe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(pe,"href","#tokenizers.normalizers.NFC]][[tokenizers.normalizers.NFC"),s(U,"class","relative group"),s(M,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),s(fe,"id","tokenizers.normalizers.NFD]][[tokenizers.normalizers.NFD"),s(fe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(fe,"href","#tokenizers.normalizers.NFD]][[tokenizers.normalizers.NFD"),s(O,"class","relative group"),s(W,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),s(he,"id","tokenizers.normalizers.NFKC]][[tokenizers.normalizers.NFKC"),s(he,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(he,"href","#tokenizers.normalizers.NFKC]][[tokenizers.normalizers.NFKC"),s(j,"class","relative group"),s(J,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),s(de,"id","tokenizers.normalizers.NFKD]][[tokenizers.normalizers.NFKD"),s(de,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(de,"href","#tokenizers.normalizers.NFKD]][[tokenizers.normalizers.NFKD"),s(G,"class","relative group"),s(Q,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),s(ze,"id","tokenizers.normalizers.Nmt]][[tokenizers.normalizers.Nmt"),s(ze,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(ze,"href","#tokenizers.normalizers.Nmt]][[tokenizers.normalizers.Nmt"),s(X,"class","relative group"),s(Y,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),s(ue,"id","tokenizers.normalizers.Normalizer]][[tokenizers.normalizers.Normalizer"),s(ue,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(ue,"href","#tokenizers.normalizers.Normalizer]][[tokenizers.normalizers.Normalizer"),s(Z,"class","relative group"),s(L,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),s(Ze,"href","/docs/tokenizers/pr_1/en/api/normalizers#tokenizers.normalizers.Normalizer"),s(R,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),s(S,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),s(ge,"id","tokenizers.normalizers.Precompiled]][[tokenizers.normalizers.Precompiled"),s(ge,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(ge,"href","#tokenizers.normalizers.Precompiled]][[tokenizers.normalizers.Precompiled"),s(ee,"class","relative group"),s(re,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),s(ke,"id","tokenizers.normalizers.Replace]][[tokenizers.normalizers.Replace"),s(ke,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(ke,"href","#tokenizers.normalizers.Replace]][[tokenizers.normalizers.Replace"),s(te,"class","relative group"),s(oe,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),s(Ne,"id","tokenizers.normalizers.Sequence]][[tokenizers.normalizers.Sequence"),s(Ne,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(Ne,"href","#tokenizers.normalizers.Sequence]][[tokenizers.normalizers.Sequence"),s(ae,"class","relative group"),s(ne,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),s(we,"id","tokenizers.normalizers.Strip]][[tokenizers.normalizers.Strip"),s(we,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(we,"href","#tokenizers.normalizers.Strip]][[tokenizers.normalizers.Strip"),s(se,"class","relative group"),s(ie,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8"),s(_e,"id","tokenizers.normalizers.StripAccents]][[tokenizers.normalizers.StripAccents"),s(_e,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(_e,"href","#tokenizers.normalizers.StripAccents]][[tokenizers.normalizers.StripAccents"),s(le,"class","relative group"),s(me,"class","docstring border-l-2 border-t-2 pl-4 pt-3.5 border-gray-100 rounded-tl-xl mb-6 mt-8")},m(e,p){f(e,l,p),t(l,u),t(u,i),g(z,i,null),t(l,b),t(l,E),t(E,A),f(e,F,p),f(e,y,p),g(T,y,null),t(y,K),t(y,B),t(B,_),t(y,D),t(y,C),t(C,Ye),f(e,be,p),f(e,q,p),t(q,ce),t(ce,or),g(Ee,or,null),t(q,Vt),t(q,ar),t(ar,Ht),f(e,jr,p),f(e,H,p),g(ye,H,null),t(H,Ut),t(H,nr),t(nr,Mt),f(e,Jr,p),f(e,U,p),t(U,pe),t(pe,sr),g(Se,sr,null),t(U,Ot),t(U,ir),t(ir,Wt),f(e,Gr,p),f(e,M,p),g(Pe,M,null),t(M,jt),t(M,lr),t(lr,Jt),f(e,Qr,p),f(e,O,p),t(O,fe),t(fe,mr),g(Ae,mr,null),t(O,Gt),t(O,cr),t(cr,Qt),f(e,Xr,p),f(e,W,p),g(De,W,null),t(W,Xt),t(W,pr),t(pr,Yt),f(e,Yr,p),f(e,j,p),t(j,he),t(he,fr),g(xe,fr,null),t(j,Zt),t(j,hr),t(hr,eo),f(e,Zr,p),f(e,J,p),g(Fe,J,null),t(J,ro),t(J,dr),t(dr,to),f(e,et,p),f(e,G,p),t(G,de),t(de,zr),g(Ce,zr,null),t(G,oo),t(G,ur),t(ur,ao),f(e,rt,p),f(e,Q,p),g(Ie,Q,null),t(Q,no),t(Q,$r),t($r,so),f(e,tt,p),f(e,X,p),t(X,ze),t(ze,vr),g(Te,vr,null),t(X,io),t(X,gr),t(gr,lo),f(e,ot,p),f(e,Y,p),g(Ke,Y,null),t(Y,mo),t(Y,kr),t(kr,co),f(e,at,p),f(e,Z,p),t(Z,ue),t(ue,Nr),g(qe,Nr,null),t(Z,po),t(Z,wr),t(wr,fo),f(e,nt,p),f(e,S,p),g(Be,S,null),t(S,ho),t(S,_r),t(_r,zo),t(S,uo),t(S,br),t(br,$o),t(S,vo),t(S,L),g(Le,L,null),t(L,go),t(L,Re),t(Re,ko),t(Re,Er),t(Er,No),t(Re,wo),t(L,_o),t(L,$e),t($e,bo),t($e,yr),t(yr,Eo),t($e,yo),t($e,Sr),t(Sr,So),t(S,Po),t(S,R),g(Ve,R,null),t(R,Ao),t(R,Pr),t(Pr,Do),t(R,xo),t(R,ve),t(ve,Fo),t(ve,Ze),t(Ze,Co),t(ve,Io),t(ve,Ar),t(Ar,To),f(e,st,p),f(e,ee,p),t(ee,ge),t(ge,Dr),g(He,Dr,null),t(ee,Ko),t(ee,xr),t(xr,qo),f(e,it,p),f(e,re,p),g(Ue,re,null),t(re,Bo),t(re,Fr),t(Fr,Lo),f(e,lt,p),f(e,te,p),t(te,ke),t(ke,Cr),g(Me,Cr,null),t(te,Ro),t(te,Ir),t(Ir,Vo),f(e,mt,p),f(e,oe,p),g(Oe,oe,null),t(oe,Ho),t(oe,Tr),t(Tr,Uo),f(e,ct,p),f(e,ae,p),t(ae,Ne),t(Ne,Kr),g(We,Kr,null),t(ae,Mo),t(ae,qr),t(qr,Oo),f(e,pt,p),f(e,ne,p),g(je,ne,null),t(ne,Wo),t(ne,Br),t(Br,jo),f(e,ft,p),f(e,se,p),t(se,we),t(we,Lr),g(Je,Lr,null),t(se,Jo),t(se,Rr),t(Rr,Go),f(e,ht,p),f(e,ie,p),g(Ge,ie,null),t(ie,Qo),t(ie,Vr),t(Vr,Xo),f(e,dt,p),f(e,le,p),t(le,_e),t(_e,Hr),g(Qe,Hr,null),t(le,Yo),t(le,Ur),t(Ur,Zo),f(e,zt,p),f(e,me,p),g(Xe,me,null),t(me,ea),t(me,Mr),t(Mr,ra),ut=!0},p:zn,i(e){ut||(k(z.$$.fragment,e),k(T.$$.fragment,e),k(Ee.$$.fragment,e),k(ye.$$.fragment,e),k(Se.$$.fragment,e),k(Pe.$$.fragment,e),k(Ae.$$.fragment,e),k(De.$$.fragment,e),k(xe.$$.fragment,e),k(Fe.$$.fragment,e),k(Ce.$$.fragment,e),k(Ie.$$.fragment,e),k(Te.$$.fragment,e),k(Ke.$$.fragment,e),k(qe.$$.fragment,e),k(Be.$$.fragment,e),k(Le.$$.fragment,e),k(Ve.$$.fragment,e),k(He.$$.fragment,e),k(Ue.$$.fragment,e),k(Me.$$.fragment,e),k(Oe.$$.fragment,e),k(We.$$.fragment,e),k(je.$$.fragment,e),k(Je.$$.fragment,e),k(Ge.$$.fragment,e),k(Qe.$$.fragment,e),k(Xe.$$.fragment,e),ut=!0)},o(e){N(z.$$.fragment,e),N(T.$$.fragment,e),N(Ee.$$.fragment,e),N(ye.$$.fragment,e),N(Se.$$.fragment,e),N(Pe.$$.fragment,e),N(Ae.$$.fragment,e),N(De.$$.fragment,e),N(xe.$$.fragment,e),N(Fe.$$.fragment,e),N(Ce.$$.fragment,e),N(Ie.$$.fragment,e),N(Te.$$.fragment,e),N(Ke.$$.fragment,e),N(qe.$$.fragment,e),N(Be.$$.fragment,e),N(Le.$$.fragment,e),N(Ve.$$.fragment,e),N(He.$$.fragment,e),N(Ue.$$.fragment,e),N(Me.$$.fragment,e),N(Oe.$$.fragment,e),N(We.$$.fragment,e),N(je.$$.fragment,e),N(Je.$$.fragment,e),N(Ge.$$.fragment,e),N(Qe.$$.fragment,e),N(Xe.$$.fragment,e),ut=!1},d(e){e&&r(l),w(z),e&&r(F),e&&r(y),w(T),e&&r(be),e&&r(q),w(Ee),e&&r(jr),e&&r(H),w(ye),e&&r(Jr),e&&r(U),w(Se),e&&r(Gr),e&&r(M),w(Pe),e&&r(Qr),e&&r(O),w(Ae),e&&r(Xr),e&&r(W),w(De),e&&r(Yr),e&&r(j),w(xe),e&&r(Zr),e&&r(J),w(Fe),e&&r(et),e&&r(G),w(Ce),e&&r(rt),e&&r(Q),w(Ie),e&&r(tt),e&&r(X),w(Te),e&&r(ot),e&&r(Y),w(Ke),e&&r(at),e&&r(Z),w(qe),e&&r(nt),e&&r(S),w(Be),w(Le),w(Ve),e&&r(st),e&&r(ee),w(He),e&&r(it),e&&r(re),w(Ue),e&&r(lt),e&&r(te),w(Me),e&&r(mt),e&&r(oe),w(Oe),e&&r(ct),e&&r(ae),w(We),e&&r(pt),e&&r(ne),w(je),e&&r(ft),e&&r(se),w(Je),e&&r(ht),e&&r(ie),w(Ge),e&&r(dt),e&&r(le),w(Qe),e&&r(zt),e&&r(me),w(Xe)}}}function vn(I){let l,u;return l=new ta({props:{$$slots:{default:[$n]},$$scope:{ctx:I}}}),{c(){$(l.$$.fragment)},l(i){v(l.$$.fragment,i)},m(i,z){g(l,i,z),u=!0},p(i,z){const b={};z&2&&(b.$$scope={dirty:z,ctx:i}),l.$set(b)},i(i){u||(k(l.$$.fragment,i),u=!0)},o(i){N(l.$$.fragment,i),u=!1},d(i){w(l,i)}}}function gn(I){let l,u,i,z,b;return{c(){l=o("p"),u=h("The Rust API Reference is available directly on the "),i=o("a"),z=h("Docs.rs"),b=h(" website."),this.h()},l(E){l=a(E,"P",{});var A=n(l);u=d(A,"The Rust API Reference is available directly on the "),i=a(A,"A",{href:!0,rel:!0});var F=n(i);z=d(F,"Docs.rs"),F.forEach(r),b=d(A," website."),A.forEach(r),this.h()},h(){s(i,"href","https://docs.rs/tokenizers/latest/tokenizers/"),s(i,"rel","nofollow")},m(E,A){f(E,l,A),t(l,u),t(l,i),t(i,z),t(l,b)},d(E){E&&r(l)}}}function kn(I){let l,u;return l=new ta({props:{$$slots:{default:[gn]},$$scope:{ctx:I}}}),{c(){$(l.$$.fragment)},l(i){v(l.$$.fragment,i)},m(i,z){g(l,i,z),u=!0},p(i,z){const b={};z&2&&(b.$$scope={dirty:z,ctx:i}),l.$set(b)},i(i){u||(k(l.$$.fragment,i),u=!0)},o(i){N(l.$$.fragment,i),u=!1},d(i){w(l,i)}}}function Nn(I){let l,u;return{c(){l=o("p"),u=h("The node API has not been documented yet.")},l(i){l=a(i,"P",{});var z=n(l);u=d(z,"The node API has not been documented yet."),z.forEach(r)},m(i,z){f(i,l,z),t(l,u)},d(i){i&&r(l)}}}function wn(I){let l,u;return l=new ta({props:{$$slots:{default:[Nn]},$$scope:{ctx:I}}}),{c(){$(l.$$.fragment)},l(i){v(l.$$.fragment,i)},m(i,z){g(l,i,z),u=!0},p(i,z){const b={};z&2&&(b.$$scope={dirty:z,ctx:i}),l.$set(b)},i(i){u||(k(l.$$.fragment,i),u=!0)},o(i){N(l.$$.fragment,i),u=!1},d(i){w(l,i)}}}function _n(I){let l,u,i,z,b,E,A,F,y,T,K,B;return E=new x({}),K=new un({props:{python:!0,rust:!0,node:!0,$$slots:{node:[wn],rust:[kn],python:[vn]},$$scope:{ctx:I}}}),{c(){l=o("meta"),u=m(),i=o("h1"),z=o("a"),b=o("span"),$(E.$$.fragment),A=m(),F=o("span"),y=h("Normalizers"),T=m(),$(K.$$.fragment),this.h()},l(_){const D=hn('[data-svelte="svelte-1phssyn"]',document.head);l=a(D,"META",{name:!0,content:!0}),D.forEach(r),u=c(_),i=a(_,"H1",{class:!0});var C=n(i);z=a(C,"A",{id:!0,class:!0,href:!0});var Ye=n(z);b=a(Ye,"SPAN",{});var be=n(b);v(E.$$.fragment,be),be.forEach(r),Ye.forEach(r),A=c(C),F=a(C,"SPAN",{});var q=n(F);y=d(q,"Normalizers"),q.forEach(r),C.forEach(r),T=c(_),v(K.$$.fragment,_),this.h()},h(){s(l,"name","hf:doc:metadata"),s(l,"content",JSON.stringify(bn)),s(z,"id","normalizers"),s(z,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(z,"href","#normalizers"),s(i,"class","relative group")},m(_,D){t(document.head,l),f(_,u,D),f(_,i,D),t(i,z),t(z,b),g(E,b,null),t(i,A),t(i,F),t(F,y),f(_,T,D),g(K,_,D),B=!0},p(_,[D]){const C={};D&2&&(C.$$scope={dirty:D,ctx:_}),K.$set(C)},i(_){B||(k(E.$$.fragment,_),k(K.$$.fragment,_),B=!0)},o(_){N(E.$$.fragment,_),N(K.$$.fragment,_),B=!1},d(_){r(l),_&&r(u),_&&r(i),w(E),_&&r(T),w(K,_)}}}const bn={local:"normalizers",sections:[{local:"tokenizers.normalizers.BertNormalizer]][[tokenizers.normalizers.BertNormalizer",title:"BertNormalizer"},{local:"tokenizers.normalizers.Lowercase]][[tokenizers.normalizers.Lowercase",title:"Lowercase"},{local:"tokenizers.normalizers.NFC]][[tokenizers.normalizers.NFC",title:"NFC"},{local:"tokenizers.normalizers.NFD]][[tokenizers.normalizers.NFD",title:"NFD"},{local:"tokenizers.normalizers.NFKC]][[tokenizers.normalizers.NFKC",title:"NFKC"},{local:"tokenizers.normalizers.NFKD]][[tokenizers.normalizers.NFKD",title:"NFKD"},{local:"tokenizers.normalizers.Nmt]][[tokenizers.normalizers.Nmt",title:"Nmt"},{local:"tokenizers.normalizers.Normalizer]][[tokenizers.normalizers.Normalizer",title:"Normalizer"},{local:"tokenizers.normalizers.Precompiled]][[tokenizers.normalizers.Precompiled",title:"Precompiled"},{local:"tokenizers.normalizers.Replace]][[tokenizers.normalizers.Replace",title:"Replace"},{local:"tokenizers.normalizers.Sequence]][[tokenizers.normalizers.Sequence",title:"Sequence"},{local:"tokenizers.normalizers.Strip]][[tokenizers.normalizers.Strip",title:"Strip"},{local:"tokenizers.normalizers.StripAccents]][[tokenizers.normalizers.StripAccents",title:"StripAccents"}],title:"Normalizers"};function En(I){return dn(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Dn extends cn{constructor(l){super();pn(this,l,En,_n,fn,{})}}export{Dn as default,bn as metadata};
