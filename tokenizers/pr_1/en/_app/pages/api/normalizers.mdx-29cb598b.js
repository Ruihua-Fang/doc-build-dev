import{S as mo,i as co,s as po,e as a,k as m,w as $,t as h,M as fo,c as n,d as r,m as c,a as o,x as v,h as z,b as s,F as t,g as f,y as k,q as g,o as N,B as w,v as ho,L as zo}from"../../chunks/vendor-0d3f0756.js";import{D as A}from"../../chunks/Docstring-f752f2c3.js";import{I as F}from"../../chunks/IconCopyLink-9193371d.js";import{T as uo,M as rn}from"../../chunks/TokenizersLanguageContent-ca787841.js";function $o(I){let l,u,i,d,E,y,D,x,S,T,K,B,_,b,C,Ye,Ee,q,ce,ar,ye,Vt,nr,Ht,jr,H,Se,Ut,or,Mt,Jr,U,pe,sr,Pe,Ot,ir,Wt,Gr,M,Ae,jt,lr,Jt,Qr,O,fe,mr,De,Gt,cr,Qt,Xr,W,be,Xt,pr,Yt,Yr,j,he,fr,Fe,Zt,hr,ea,Zr,J,xe,ra,zr,ta,et,G,ze,dr,Ce,aa,ur,na,rt,Q,Ie,oa,$r,sa,tt,X,de,vr,Te,ia,kr,la,at,Y,Ke,ma,gr,ca,nt,Z,ue,Nr,qe,pa,wr,fa,ot,P,Be,ha,_r,za,da,Er,ua,$a,L,Le,va,Re,ka,yr,ga,Na,wa,$e,_a,Sr,Ea,ya,Pr,Sa,Pa,R,Ve,Aa,Ar,Da,ba,ve,Fa,Ze,xa,Ca,Dr,Ia,st,ee,ke,br,He,Ta,Fr,Ka,it,re,Ue,qa,xr,Ba,lt,te,ge,Cr,Me,La,Ir,Ra,mt,ae,Oe,Va,Tr,Ha,ct,ne,Ne,Kr,We,Ua,qr,Ma,pt,oe,je,Oa,Br,Wa,ft,se,we,Lr,Je,ja,Rr,Ja,ht,ie,Ge,Ga,Vr,Qa,zt,le,_e,Hr,Qe,Xa,Ur,Ya,dt,me,Xe,Za,Mr,en,ut;return d=new F({}),T=new A({props:{name:"class tokenizers.normalizers.BertNormalizer",anchor:"tokenizers.normalizers.BertNormalizer",parameters:[{name:"clean_text",val:" = True"},{name:"handle_chinese_chars",val:" = True"},{name:"strip_accents",val:" = None"},{name:"lowercase",val:" = True"}],parametersDescription:[{anchor:"tokenizers.normalizers.BertNormalizer.clean_text",description:`<strong>clean_text</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether to clean the text, by removing any control characters
and replacing all whitespaces by the classic one.`,name:"clean_text"},{anchor:"tokenizers.normalizers.BertNormalizer.handle_chinese_chars",description:`<strong>handle_chinese_chars</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether to handle chinese chars by putting spaces around them.`,name:"handle_chinese_chars"},{anchor:"tokenizers.normalizers.BertNormalizer.strip_accents",description:`<strong>strip_accents</strong> (<code>bool</code>, <em>optional</em>) &#x2014;
Whether to strip all accents. If this option is not specified (ie == None),
then it will be determined by the value for <em>lowercase</em> (as in the original Bert).`,name:"strip_accents"},{anchor:"tokenizers.normalizers.BertNormalizer.lowercase",description:`<strong>lowercase</strong> (<code>bool</code>, <em>optional</em>, defaults to <code>True</code>) &#x2014;
Whether to lowercase.`,name:"lowercase"}]}}),ye=new F({}),Se=new A({props:{name:"class tokenizers.normalizers.Lowercase",anchor:"tokenizers.normalizers.Lowercase",parameters:[]}}),Pe=new F({}),Ae=new A({props:{name:"class tokenizers.normalizers.NFC",anchor:"tokenizers.normalizers.NFC",parameters:[]}}),De=new F({}),be=new A({props:{name:"class tokenizers.normalizers.NFD",anchor:"tokenizers.normalizers.NFD",parameters:[]}}),Fe=new F({}),xe=new A({props:{name:"class tokenizers.normalizers.NFKC",anchor:"tokenizers.normalizers.NFKC",parameters:[]}}),Ce=new F({}),Ie=new A({props:{name:"class tokenizers.normalizers.NFKD",anchor:"tokenizers.normalizers.NFKD",parameters:[]}}),Te=new F({}),Ke=new A({props:{name:"class tokenizers.normalizers.Nmt",anchor:"tokenizers.normalizers.Nmt",parameters:[]}}),qe=new F({}),Be=new A({props:{name:"class tokenizers.normalizers.Normalizer",anchor:"tokenizers.normalizers.Normalizer",parameters:[]}}),Le=new A({props:{name:"normalize",anchor:"tokenizers.normalizers.Normalizer.normalize",parameters:[{name:"normalized",val:""}],parametersDescription:[{anchor:"tokenizers.normalizers.Normalizer.normalize.normalized",description:`<strong>normalized</strong> (<code>NormalizedString</code>) &#x2014;
The normalized string on which to apply this
<a href="/docs/tokenizers/pr_1/en/api/normalizers#tokenizers.normalizers.Normalizer">Normalizer</a>`,name:"normalized"}]}}),Ve=new A({props:{name:"normalize_str",anchor:"tokenizers.normalizers.Normalizer.normalize_str",parameters:[{name:"sequence",val:""}],parametersDescription:[{anchor:"tokenizers.normalizers.Normalizer.normalize_str.sequence",description:`<strong>sequence</strong> (<code>str</code>) &#x2014;
A string to normalize`,name:"sequence"}],returnDescription:`
<p>A string after normalization</p>
`,returnType:`
<p><code>str</code></p>
`}}),He=new F({}),Ue=new A({props:{name:"class tokenizers.normalizers.Precompiled",anchor:"tokenizers.normalizers.Precompiled",parameters:[{name:"precompiled_charsmap",val:""}]}}),Me=new F({}),Oe=new A({props:{name:"class tokenizers.normalizers.Replace",anchor:"tokenizers.normalizers.Replace",parameters:[{name:"pattern",val:""},{name:"content",val:""}]}}),We=new F({}),je=new A({props:{name:"class tokenizers.normalizers.Sequence",anchor:"tokenizers.normalizers.Sequence",parameters:"",parametersDescription:[{anchor:"tokenizers.normalizers.Sequence.normalizers",description:`<strong>normalizers</strong> (<code>List[Normalizer]</code>) &#x2014;
A list of Normalizer to be run as a sequence`,name:"normalizers"}]}}),Je=new F({}),Ge=new A({props:{name:"class tokenizers.normalizers.Strip",anchor:"tokenizers.normalizers.Strip",parameters:[{name:"left",val:" = True"},{name:"right",val:" = True"}]}}),Qe=new F({}),Xe=new A({props:{name:"class tokenizers.normalizers.StripAccents",anchor:"tokenizers.normalizers.StripAccents",parameters:[]}}),{c(){l=a("h2"),u=a("a"),i=a("span"),$(d.$$.fragment),E=m(),y=a("span"),D=h("BertNormalizer"),x=m(),S=a("div"),$(T.$$.fragment),K=m(),B=a("p"),_=h("BertNormalizer"),b=m(),C=a("p"),Ye=h(`Takes care of normalizing raw text before giving it to a Bert model.
This includes cleaning the text, handling accents, chinese chars and lowercasing`),Ee=m(),q=a("h2"),ce=a("a"),ar=a("span"),$(ye.$$.fragment),Vt=m(),nr=a("span"),Ht=h("Lowercase"),jr=m(),H=a("div"),$(Se.$$.fragment),Ut=m(),or=a("p"),Mt=h("Lowercase Normalizer"),Jr=m(),U=a("h2"),pe=a("a"),sr=a("span"),$(Pe.$$.fragment),Ot=m(),ir=a("span"),Wt=h("NFC"),Gr=m(),M=a("div"),$(Ae.$$.fragment),jt=m(),lr=a("p"),Jt=h("NFC Unicode Normalizer"),Qr=m(),O=a("h2"),fe=a("a"),mr=a("span"),$(De.$$.fragment),Gt=m(),cr=a("span"),Qt=h("NFD"),Xr=m(),W=a("div"),$(be.$$.fragment),Xt=m(),pr=a("p"),Yt=h("NFD Unicode Normalizer"),Yr=m(),j=a("h2"),he=a("a"),fr=a("span"),$(Fe.$$.fragment),Zt=m(),hr=a("span"),ea=h("NFKC"),Zr=m(),J=a("div"),$(xe.$$.fragment),ra=m(),zr=a("p"),ta=h("NFKC Unicode Normalizer"),et=m(),G=a("h2"),ze=a("a"),dr=a("span"),$(Ce.$$.fragment),aa=m(),ur=a("span"),na=h("NFKD"),rt=m(),Q=a("div"),$(Ie.$$.fragment),oa=m(),$r=a("p"),sa=h("NFKD Unicode Normalizer"),tt=m(),X=a("h2"),de=a("a"),vr=a("span"),$(Te.$$.fragment),ia=m(),kr=a("span"),la=h("Nmt"),at=m(),Y=a("div"),$(Ke.$$.fragment),ma=m(),gr=a("p"),ca=h("Nmt normalizer"),nt=m(),Z=a("h2"),ue=a("a"),Nr=a("span"),$(qe.$$.fragment),pa=m(),wr=a("span"),fa=h("Normalizer"),ot=m(),P=a("div"),$(Be.$$.fragment),ha=m(),_r=a("p"),za=h("Base class for all normalizers"),da=m(),Er=a("p"),ua=h(`This class is not supposed to be instantiated directly. Instead, any implementation of a
Normalizer will return an instance of this class when instantiated.`),$a=m(),L=a("div"),$(Le.$$.fragment),va=m(),Re=a("p"),ka=h("Normalize a "),yr=a("code"),ga=h("NormalizedString"),Na=h(" in-place"),wa=m(),$e=a("p"),_a=h("This method allows to modify a "),Sr=a("code"),Ea=h("NormalizedString"),ya=h(` to
keep track of the alignment information. If you just want to see the result
of the normalization on a raw string, you can use
`),Pr=a("code"),Sa=h("normalize_str()"),Pa=m(),R=a("div"),$(Ve.$$.fragment),Aa=m(),Ar=a("p"),Da=h("Normalize the given string"),ba=m(),ve=a("p"),Fa=h(`This method provides a way to visualize the effect of a
`),Ze=a("a"),xa=h("Normalizer"),Ca=h(` but it does not keep track of the alignment
information. If you need to get/convert offsets, you can use
`),Dr=a("code"),Ia=h("normalize()"),st=m(),ee=a("h2"),ke=a("a"),br=a("span"),$(He.$$.fragment),Ta=m(),Fr=a("span"),Ka=h("Precompiled"),it=m(),re=a("div"),$(Ue.$$.fragment),qa=m(),xr=a("p"),Ba=h(`Precompiled normalizer
Don\u2019t use manually it is used for compatiblity for SentencePiece.`),lt=m(),te=a("h2"),ge=a("a"),Cr=a("span"),$(Me.$$.fragment),La=m(),Ir=a("span"),Ra=h("Replace"),mt=m(),ae=a("div"),$(Oe.$$.fragment),Va=m(),Tr=a("p"),Ha=h("Replace normalizer"),ct=m(),ne=a("h2"),Ne=a("a"),Kr=a("span"),$(We.$$.fragment),Ua=m(),qr=a("span"),Ma=h("Sequence"),pt=m(),oe=a("div"),$(je.$$.fragment),Oa=m(),Br=a("p"),Wa=h(`Allows concatenating multiple other Normalizer as a Sequence.
All the normalizers run in sequence in the given order`),ft=m(),se=a("h2"),we=a("a"),Lr=a("span"),$(Je.$$.fragment),ja=m(),Rr=a("span"),Ja=h("Strip"),ht=m(),ie=a("div"),$(Ge.$$.fragment),Ga=m(),Vr=a("p"),Qa=h("Strip normalizer"),zt=m(),le=a("h2"),_e=a("a"),Hr=a("span"),$(Qe.$$.fragment),Xa=m(),Ur=a("span"),Ya=h("StripAccents"),dt=m(),me=a("div"),$(Xe.$$.fragment),Za=m(),Mr=a("p"),en=h("StripAccents normalizer"),this.h()},l(e){l=n(e,"H2",{class:!0});var p=o(l);u=n(p,"A",{id:!0,class:!0,href:!0});var tn=o(u);i=n(tn,"SPAN",{});var an=o(i);v(d.$$.fragment,an),an.forEach(r),tn.forEach(r),E=c(p),y=n(p,"SPAN",{});var nn=o(y);D=z(nn,"BertNormalizer"),nn.forEach(r),p.forEach(r),x=c(e),S=n(e,"DIV",{class:!0});var er=o(S);v(T.$$.fragment,er),K=c(er),B=n(er,"P",{});var on=o(B);_=z(on,"BertNormalizer"),on.forEach(r),b=c(er),C=n(er,"P",{});var sn=o(C);Ye=z(sn,`Takes care of normalizing raw text before giving it to a Bert model.
This includes cleaning the text, handling accents, chinese chars and lowercasing`),sn.forEach(r),er.forEach(r),Ee=c(e),q=n(e,"H2",{class:!0});var $t=o(q);ce=n($t,"A",{id:!0,class:!0,href:!0});var ln=o(ce);ar=n(ln,"SPAN",{});var mn=o(ar);v(ye.$$.fragment,mn),mn.forEach(r),ln.forEach(r),Vt=c($t),nr=n($t,"SPAN",{});var cn=o(nr);Ht=z(cn,"Lowercase"),cn.forEach(r),$t.forEach(r),jr=c(e),H=n(e,"DIV",{class:!0});var vt=o(H);v(Se.$$.fragment,vt),Ut=c(vt),or=n(vt,"P",{});var pn=o(or);Mt=z(pn,"Lowercase Normalizer"),pn.forEach(r),vt.forEach(r),Jr=c(e),U=n(e,"H2",{class:!0});var kt=o(U);pe=n(kt,"A",{id:!0,class:!0,href:!0});var fn=o(pe);sr=n(fn,"SPAN",{});var hn=o(sr);v(Pe.$$.fragment,hn),hn.forEach(r),fn.forEach(r),Ot=c(kt),ir=n(kt,"SPAN",{});var zn=o(ir);Wt=z(zn,"NFC"),zn.forEach(r),kt.forEach(r),Gr=c(e),M=n(e,"DIV",{class:!0});var gt=o(M);v(Ae.$$.fragment,gt),jt=c(gt),lr=n(gt,"P",{});var dn=o(lr);Jt=z(dn,"NFC Unicode Normalizer"),dn.forEach(r),gt.forEach(r),Qr=c(e),O=n(e,"H2",{class:!0});var Nt=o(O);fe=n(Nt,"A",{id:!0,class:!0,href:!0});var un=o(fe);mr=n(un,"SPAN",{});var $n=o(mr);v(De.$$.fragment,$n),$n.forEach(r),un.forEach(r),Gt=c(Nt),cr=n(Nt,"SPAN",{});var vn=o(cr);Qt=z(vn,"NFD"),vn.forEach(r),Nt.forEach(r),Xr=c(e),W=n(e,"DIV",{class:!0});var wt=o(W);v(be.$$.fragment,wt),Xt=c(wt),pr=n(wt,"P",{});var kn=o(pr);Yt=z(kn,"NFD Unicode Normalizer"),kn.forEach(r),wt.forEach(r),Yr=c(e),j=n(e,"H2",{class:!0});var _t=o(j);he=n(_t,"A",{id:!0,class:!0,href:!0});var gn=o(he);fr=n(gn,"SPAN",{});var Nn=o(fr);v(Fe.$$.fragment,Nn),Nn.forEach(r),gn.forEach(r),Zt=c(_t),hr=n(_t,"SPAN",{});var wn=o(hr);ea=z(wn,"NFKC"),wn.forEach(r),_t.forEach(r),Zr=c(e),J=n(e,"DIV",{class:!0});var Et=o(J);v(xe.$$.fragment,Et),ra=c(Et),zr=n(Et,"P",{});var _n=o(zr);ta=z(_n,"NFKC Unicode Normalizer"),_n.forEach(r),Et.forEach(r),et=c(e),G=n(e,"H2",{class:!0});var yt=o(G);ze=n(yt,"A",{id:!0,class:!0,href:!0});var En=o(ze);dr=n(En,"SPAN",{});var yn=o(dr);v(Ce.$$.fragment,yn),yn.forEach(r),En.forEach(r),aa=c(yt),ur=n(yt,"SPAN",{});var Sn=o(ur);na=z(Sn,"NFKD"),Sn.forEach(r),yt.forEach(r),rt=c(e),Q=n(e,"DIV",{class:!0});var St=o(Q);v(Ie.$$.fragment,St),oa=c(St),$r=n(St,"P",{});var Pn=o($r);sa=z(Pn,"NFKD Unicode Normalizer"),Pn.forEach(r),St.forEach(r),tt=c(e),X=n(e,"H2",{class:!0});var Pt=o(X);de=n(Pt,"A",{id:!0,class:!0,href:!0});var An=o(de);vr=n(An,"SPAN",{});var Dn=o(vr);v(Te.$$.fragment,Dn),Dn.forEach(r),An.forEach(r),ia=c(Pt),kr=n(Pt,"SPAN",{});var bn=o(kr);la=z(bn,"Nmt"),bn.forEach(r),Pt.forEach(r),at=c(e),Y=n(e,"DIV",{class:!0});var At=o(Y);v(Ke.$$.fragment,At),ma=c(At),gr=n(At,"P",{});var Fn=o(gr);ca=z(Fn,"Nmt normalizer"),Fn.forEach(r),At.forEach(r),nt=c(e),Z=n(e,"H2",{class:!0});var Dt=o(Z);ue=n(Dt,"A",{id:!0,class:!0,href:!0});var xn=o(ue);Nr=n(xn,"SPAN",{});var Cn=o(Nr);v(qe.$$.fragment,Cn),Cn.forEach(r),xn.forEach(r),pa=c(Dt),wr=n(Dt,"SPAN",{});var In=o(wr);fa=z(In,"Normalizer"),In.forEach(r),Dt.forEach(r),ot=c(e),P=n(e,"DIV",{class:!0});var V=o(P);v(Be.$$.fragment,V),ha=c(V),_r=n(V,"P",{});var Tn=o(_r);za=z(Tn,"Base class for all normalizers"),Tn.forEach(r),da=c(V),Er=n(V,"P",{});var Kn=o(Er);ua=z(Kn,`This class is not supposed to be instantiated directly. Instead, any implementation of a
Normalizer will return an instance of this class when instantiated.`),Kn.forEach(r),$a=c(V),L=n(V,"DIV",{class:!0});var rr=o(L);v(Le.$$.fragment,rr),va=c(rr),Re=n(rr,"P",{});var bt=o(Re);ka=z(bt,"Normalize a "),yr=n(bt,"CODE",{});var qn=o(yr);ga=z(qn,"NormalizedString"),qn.forEach(r),Na=z(bt," in-place"),bt.forEach(r),wa=c(rr),$e=n(rr,"P",{});var Or=o($e);_a=z(Or,"This method allows to modify a "),Sr=n(Or,"CODE",{});var Bn=o(Sr);Ea=z(Bn,"NormalizedString"),Bn.forEach(r),ya=z(Or,` to
keep track of the alignment information. If you just want to see the result
of the normalization on a raw string, you can use
`),Pr=n(Or,"CODE",{});var Ln=o(Pr);Sa=z(Ln,"normalize_str()"),Ln.forEach(r),Or.forEach(r),rr.forEach(r),Pa=c(V),R=n(V,"DIV",{class:!0});var tr=o(R);v(Ve.$$.fragment,tr),Aa=c(tr),Ar=n(tr,"P",{});var Rn=o(Ar);Da=z(Rn,"Normalize the given string"),Rn.forEach(r),ba=c(tr),ve=n(tr,"P",{});var Wr=o(ve);Fa=z(Wr,`This method provides a way to visualize the effect of a
`),Ze=n(Wr,"A",{href:!0});var Vn=o(Ze);xa=z(Vn,"Normalizer"),Vn.forEach(r),Ca=z(Wr,` but it does not keep track of the alignment
information. If you need to get/convert offsets, you can use
`),Dr=n(Wr,"CODE",{});var Hn=o(Dr);Ia=z(Hn,"normalize()"),Hn.forEach(r),Wr.forEach(r),tr.forEach(r),V.forEach(r),st=c(e),ee=n(e,"H2",{class:!0});var Ft=o(ee);ke=n(Ft,"A",{id:!0,class:!0,href:!0});var Un=o(ke);br=n(Un,"SPAN",{});var Mn=o(br);v(He.$$.fragment,Mn),Mn.forEach(r),Un.forEach(r),Ta=c(Ft),Fr=n(Ft,"SPAN",{});var On=o(Fr);Ka=z(On,"Precompiled"),On.forEach(r),Ft.forEach(r),it=c(e),re=n(e,"DIV",{class:!0});var xt=o(re);v(Ue.$$.fragment,xt),qa=c(xt),xr=n(xt,"P",{});var Wn=o(xr);Ba=z(Wn,`Precompiled normalizer
Don\u2019t use manually it is used for compatiblity for SentencePiece.`),Wn.forEach(r),xt.forEach(r),lt=c(e),te=n(e,"H2",{class:!0});var Ct=o(te);ge=n(Ct,"A",{id:!0,class:!0,href:!0});var jn=o(ge);Cr=n(jn,"SPAN",{});var Jn=o(Cr);v(Me.$$.fragment,Jn),Jn.forEach(r),jn.forEach(r),La=c(Ct),Ir=n(Ct,"SPAN",{});var Gn=o(Ir);Ra=z(Gn,"Replace"),Gn.forEach(r),Ct.forEach(r),mt=c(e),ae=n(e,"DIV",{class:!0});var It=o(ae);v(Oe.$$.fragment,It),Va=c(It),Tr=n(It,"P",{});var Qn=o(Tr);Ha=z(Qn,"Replace normalizer"),Qn.forEach(r),It.forEach(r),ct=c(e),ne=n(e,"H2",{class:!0});var Tt=o(ne);Ne=n(Tt,"A",{id:!0,class:!0,href:!0});var Xn=o(Ne);Kr=n(Xn,"SPAN",{});var Yn=o(Kr);v(We.$$.fragment,Yn),Yn.forEach(r),Xn.forEach(r),Ua=c(Tt),qr=n(Tt,"SPAN",{});var Zn=o(qr);Ma=z(Zn,"Sequence"),Zn.forEach(r),Tt.forEach(r),pt=c(e),oe=n(e,"DIV",{class:!0});var Kt=o(oe);v(je.$$.fragment,Kt),Oa=c(Kt),Br=n(Kt,"P",{});var eo=o(Br);Wa=z(eo,`Allows concatenating multiple other Normalizer as a Sequence.
All the normalizers run in sequence in the given order`),eo.forEach(r),Kt.forEach(r),ft=c(e),se=n(e,"H2",{class:!0});var qt=o(se);we=n(qt,"A",{id:!0,class:!0,href:!0});var ro=o(we);Lr=n(ro,"SPAN",{});var to=o(Lr);v(Je.$$.fragment,to),to.forEach(r),ro.forEach(r),ja=c(qt),Rr=n(qt,"SPAN",{});var ao=o(Rr);Ja=z(ao,"Strip"),ao.forEach(r),qt.forEach(r),ht=c(e),ie=n(e,"DIV",{class:!0});var Bt=o(ie);v(Ge.$$.fragment,Bt),Ga=c(Bt),Vr=n(Bt,"P",{});var no=o(Vr);Qa=z(no,"Strip normalizer"),no.forEach(r),Bt.forEach(r),zt=c(e),le=n(e,"H2",{class:!0});var Lt=o(le);_e=n(Lt,"A",{id:!0,class:!0,href:!0});var oo=o(_e);Hr=n(oo,"SPAN",{});var so=o(Hr);v(Qe.$$.fragment,so),so.forEach(r),oo.forEach(r),Xa=c(Lt),Ur=n(Lt,"SPAN",{});var io=o(Ur);Ya=z(io,"StripAccents"),io.forEach(r),Lt.forEach(r),dt=c(e),me=n(e,"DIV",{class:!0});var Rt=o(me);v(Xe.$$.fragment,Rt),Za=c(Rt),Mr=n(Rt,"P",{});var lo=o(Mr);en=z(lo,"StripAccents normalizer"),lo.forEach(r),Rt.forEach(r),this.h()},h(){s(u,"id","tokenizers.normalizers.BertNormalizer]][[tokenizers.normalizers.BertNormalizer"),s(u,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(u,"href","#tokenizers.normalizers.BertNormalizer]][[tokenizers.normalizers.BertNormalizer"),s(l,"class","relative group"),s(S,"class","docstring"),s(ce,"id","tokenizers.normalizers.Lowercase]][[tokenizers.normalizers.Lowercase"),s(ce,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(ce,"href","#tokenizers.normalizers.Lowercase]][[tokenizers.normalizers.Lowercase"),s(q,"class","relative group"),s(H,"class","docstring"),s(pe,"id","tokenizers.normalizers.NFC]][[tokenizers.normalizers.NFC"),s(pe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(pe,"href","#tokenizers.normalizers.NFC]][[tokenizers.normalizers.NFC"),s(U,"class","relative group"),s(M,"class","docstring"),s(fe,"id","tokenizers.normalizers.NFD]][[tokenizers.normalizers.NFD"),s(fe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(fe,"href","#tokenizers.normalizers.NFD]][[tokenizers.normalizers.NFD"),s(O,"class","relative group"),s(W,"class","docstring"),s(he,"id","tokenizers.normalizers.NFKC]][[tokenizers.normalizers.NFKC"),s(he,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(he,"href","#tokenizers.normalizers.NFKC]][[tokenizers.normalizers.NFKC"),s(j,"class","relative group"),s(J,"class","docstring"),s(ze,"id","tokenizers.normalizers.NFKD]][[tokenizers.normalizers.NFKD"),s(ze,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(ze,"href","#tokenizers.normalizers.NFKD]][[tokenizers.normalizers.NFKD"),s(G,"class","relative group"),s(Q,"class","docstring"),s(de,"id","tokenizers.normalizers.Nmt]][[tokenizers.normalizers.Nmt"),s(de,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(de,"href","#tokenizers.normalizers.Nmt]][[tokenizers.normalizers.Nmt"),s(X,"class","relative group"),s(Y,"class","docstring"),s(ue,"id","tokenizers.normalizers.Normalizer]][[tokenizers.normalizers.Normalizer"),s(ue,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(ue,"href","#tokenizers.normalizers.Normalizer]][[tokenizers.normalizers.Normalizer"),s(Z,"class","relative group"),s(L,"class","docstring"),s(Ze,"href","/docs/tokenizers/pr_1/en/api/normalizers#tokenizers.normalizers.Normalizer"),s(R,"class","docstring"),s(P,"class","docstring"),s(ke,"id","tokenizers.normalizers.Precompiled]][[tokenizers.normalizers.Precompiled"),s(ke,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(ke,"href","#tokenizers.normalizers.Precompiled]][[tokenizers.normalizers.Precompiled"),s(ee,"class","relative group"),s(re,"class","docstring"),s(ge,"id","tokenizers.normalizers.Replace]][[tokenizers.normalizers.Replace"),s(ge,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(ge,"href","#tokenizers.normalizers.Replace]][[tokenizers.normalizers.Replace"),s(te,"class","relative group"),s(ae,"class","docstring"),s(Ne,"id","tokenizers.normalizers.Sequence]][[tokenizers.normalizers.Sequence"),s(Ne,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(Ne,"href","#tokenizers.normalizers.Sequence]][[tokenizers.normalizers.Sequence"),s(ne,"class","relative group"),s(oe,"class","docstring"),s(we,"id","tokenizers.normalizers.Strip]][[tokenizers.normalizers.Strip"),s(we,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(we,"href","#tokenizers.normalizers.Strip]][[tokenizers.normalizers.Strip"),s(se,"class","relative group"),s(ie,"class","docstring"),s(_e,"id","tokenizers.normalizers.StripAccents]][[tokenizers.normalizers.StripAccents"),s(_e,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(_e,"href","#tokenizers.normalizers.StripAccents]][[tokenizers.normalizers.StripAccents"),s(le,"class","relative group"),s(me,"class","docstring")},m(e,p){f(e,l,p),t(l,u),t(u,i),k(d,i,null),t(l,E),t(l,y),t(y,D),f(e,x,p),f(e,S,p),k(T,S,null),t(S,K),t(S,B),t(B,_),t(S,b),t(S,C),t(C,Ye),f(e,Ee,p),f(e,q,p),t(q,ce),t(ce,ar),k(ye,ar,null),t(q,Vt),t(q,nr),t(nr,Ht),f(e,jr,p),f(e,H,p),k(Se,H,null),t(H,Ut),t(H,or),t(or,Mt),f(e,Jr,p),f(e,U,p),t(U,pe),t(pe,sr),k(Pe,sr,null),t(U,Ot),t(U,ir),t(ir,Wt),f(e,Gr,p),f(e,M,p),k(Ae,M,null),t(M,jt),t(M,lr),t(lr,Jt),f(e,Qr,p),f(e,O,p),t(O,fe),t(fe,mr),k(De,mr,null),t(O,Gt),t(O,cr),t(cr,Qt),f(e,Xr,p),f(e,W,p),k(be,W,null),t(W,Xt),t(W,pr),t(pr,Yt),f(e,Yr,p),f(e,j,p),t(j,he),t(he,fr),k(Fe,fr,null),t(j,Zt),t(j,hr),t(hr,ea),f(e,Zr,p),f(e,J,p),k(xe,J,null),t(J,ra),t(J,zr),t(zr,ta),f(e,et,p),f(e,G,p),t(G,ze),t(ze,dr),k(Ce,dr,null),t(G,aa),t(G,ur),t(ur,na),f(e,rt,p),f(e,Q,p),k(Ie,Q,null),t(Q,oa),t(Q,$r),t($r,sa),f(e,tt,p),f(e,X,p),t(X,de),t(de,vr),k(Te,vr,null),t(X,ia),t(X,kr),t(kr,la),f(e,at,p),f(e,Y,p),k(Ke,Y,null),t(Y,ma),t(Y,gr),t(gr,ca),f(e,nt,p),f(e,Z,p),t(Z,ue),t(ue,Nr),k(qe,Nr,null),t(Z,pa),t(Z,wr),t(wr,fa),f(e,ot,p),f(e,P,p),k(Be,P,null),t(P,ha),t(P,_r),t(_r,za),t(P,da),t(P,Er),t(Er,ua),t(P,$a),t(P,L),k(Le,L,null),t(L,va),t(L,Re),t(Re,ka),t(Re,yr),t(yr,ga),t(Re,Na),t(L,wa),t(L,$e),t($e,_a),t($e,Sr),t(Sr,Ea),t($e,ya),t($e,Pr),t(Pr,Sa),t(P,Pa),t(P,R),k(Ve,R,null),t(R,Aa),t(R,Ar),t(Ar,Da),t(R,ba),t(R,ve),t(ve,Fa),t(ve,Ze),t(Ze,xa),t(ve,Ca),t(ve,Dr),t(Dr,Ia),f(e,st,p),f(e,ee,p),t(ee,ke),t(ke,br),k(He,br,null),t(ee,Ta),t(ee,Fr),t(Fr,Ka),f(e,it,p),f(e,re,p),k(Ue,re,null),t(re,qa),t(re,xr),t(xr,Ba),f(e,lt,p),f(e,te,p),t(te,ge),t(ge,Cr),k(Me,Cr,null),t(te,La),t(te,Ir),t(Ir,Ra),f(e,mt,p),f(e,ae,p),k(Oe,ae,null),t(ae,Va),t(ae,Tr),t(Tr,Ha),f(e,ct,p),f(e,ne,p),t(ne,Ne),t(Ne,Kr),k(We,Kr,null),t(ne,Ua),t(ne,qr),t(qr,Ma),f(e,pt,p),f(e,oe,p),k(je,oe,null),t(oe,Oa),t(oe,Br),t(Br,Wa),f(e,ft,p),f(e,se,p),t(se,we),t(we,Lr),k(Je,Lr,null),t(se,ja),t(se,Rr),t(Rr,Ja),f(e,ht,p),f(e,ie,p),k(Ge,ie,null),t(ie,Ga),t(ie,Vr),t(Vr,Qa),f(e,zt,p),f(e,le,p),t(le,_e),t(_e,Hr),k(Qe,Hr,null),t(le,Xa),t(le,Ur),t(Ur,Ya),f(e,dt,p),f(e,me,p),k(Xe,me,null),t(me,Za),t(me,Mr),t(Mr,en),ut=!0},p:zo,i(e){ut||(g(d.$$.fragment,e),g(T.$$.fragment,e),g(ye.$$.fragment,e),g(Se.$$.fragment,e),g(Pe.$$.fragment,e),g(Ae.$$.fragment,e),g(De.$$.fragment,e),g(be.$$.fragment,e),g(Fe.$$.fragment,e),g(xe.$$.fragment,e),g(Ce.$$.fragment,e),g(Ie.$$.fragment,e),g(Te.$$.fragment,e),g(Ke.$$.fragment,e),g(qe.$$.fragment,e),g(Be.$$.fragment,e),g(Le.$$.fragment,e),g(Ve.$$.fragment,e),g(He.$$.fragment,e),g(Ue.$$.fragment,e),g(Me.$$.fragment,e),g(Oe.$$.fragment,e),g(We.$$.fragment,e),g(je.$$.fragment,e),g(Je.$$.fragment,e),g(Ge.$$.fragment,e),g(Qe.$$.fragment,e),g(Xe.$$.fragment,e),ut=!0)},o(e){N(d.$$.fragment,e),N(T.$$.fragment,e),N(ye.$$.fragment,e),N(Se.$$.fragment,e),N(Pe.$$.fragment,e),N(Ae.$$.fragment,e),N(De.$$.fragment,e),N(be.$$.fragment,e),N(Fe.$$.fragment,e),N(xe.$$.fragment,e),N(Ce.$$.fragment,e),N(Ie.$$.fragment,e),N(Te.$$.fragment,e),N(Ke.$$.fragment,e),N(qe.$$.fragment,e),N(Be.$$.fragment,e),N(Le.$$.fragment,e),N(Ve.$$.fragment,e),N(He.$$.fragment,e),N(Ue.$$.fragment,e),N(Me.$$.fragment,e),N(Oe.$$.fragment,e),N(We.$$.fragment,e),N(je.$$.fragment,e),N(Je.$$.fragment,e),N(Ge.$$.fragment,e),N(Qe.$$.fragment,e),N(Xe.$$.fragment,e),ut=!1},d(e){e&&r(l),w(d),e&&r(x),e&&r(S),w(T),e&&r(Ee),e&&r(q),w(ye),e&&r(jr),e&&r(H),w(Se),e&&r(Jr),e&&r(U),w(Pe),e&&r(Gr),e&&r(M),w(Ae),e&&r(Qr),e&&r(O),w(De),e&&r(Xr),e&&r(W),w(be),e&&r(Yr),e&&r(j),w(Fe),e&&r(Zr),e&&r(J),w(xe),e&&r(et),e&&r(G),w(Ce),e&&r(rt),e&&r(Q),w(Ie),e&&r(tt),e&&r(X),w(Te),e&&r(at),e&&r(Y),w(Ke),e&&r(nt),e&&r(Z),w(qe),e&&r(ot),e&&r(P),w(Be),w(Le),w(Ve),e&&r(st),e&&r(ee),w(He),e&&r(it),e&&r(re),w(Ue),e&&r(lt),e&&r(te),w(Me),e&&r(mt),e&&r(ae),w(Oe),e&&r(ct),e&&r(ne),w(We),e&&r(pt),e&&r(oe),w(je),e&&r(ft),e&&r(se),w(Je),e&&r(ht),e&&r(ie),w(Ge),e&&r(zt),e&&r(le),w(Qe),e&&r(dt),e&&r(me),w(Xe)}}}function vo(I){let l,u;return l=new rn({props:{$$slots:{default:[$o]},$$scope:{ctx:I}}}),{c(){$(l.$$.fragment)},l(i){v(l.$$.fragment,i)},m(i,d){k(l,i,d),u=!0},p(i,d){const E={};d&2&&(E.$$scope={dirty:d,ctx:i}),l.$set(E)},i(i){u||(g(l.$$.fragment,i),u=!0)},o(i){N(l.$$.fragment,i),u=!1},d(i){w(l,i)}}}function ko(I){let l,u,i,d,E;return{c(){l=a("p"),u=h("The Rust API Reference is available directly on the "),i=a("a"),d=h("Docs.rs"),E=h(" website."),this.h()},l(y){l=n(y,"P",{});var D=o(l);u=z(D,"The Rust API Reference is available directly on the "),i=n(D,"A",{href:!0,rel:!0});var x=o(i);d=z(x,"Docs.rs"),x.forEach(r),E=z(D," website."),D.forEach(r),this.h()},h(){s(i,"href","https://docs.rs/tokenizers/latest/tokenizers/"),s(i,"rel","nofollow")},m(y,D){f(y,l,D),t(l,u),t(l,i),t(i,d),t(l,E)},d(y){y&&r(l)}}}function go(I){let l,u;return l=new rn({props:{$$slots:{default:[ko]},$$scope:{ctx:I}}}),{c(){$(l.$$.fragment)},l(i){v(l.$$.fragment,i)},m(i,d){k(l,i,d),u=!0},p(i,d){const E={};d&2&&(E.$$scope={dirty:d,ctx:i}),l.$set(E)},i(i){u||(g(l.$$.fragment,i),u=!0)},o(i){N(l.$$.fragment,i),u=!1},d(i){w(l,i)}}}function No(I){let l,u;return{c(){l=a("p"),u=h("The node API has not been documented yet.")},l(i){l=n(i,"P",{});var d=o(l);u=z(d,"The node API has not been documented yet."),d.forEach(r)},m(i,d){f(i,l,d),t(l,u)},d(i){i&&r(l)}}}function wo(I){let l,u;return l=new rn({props:{$$slots:{default:[No]},$$scope:{ctx:I}}}),{c(){$(l.$$.fragment)},l(i){v(l.$$.fragment,i)},m(i,d){k(l,i,d),u=!0},p(i,d){const E={};d&2&&(E.$$scope={dirty:d,ctx:i}),l.$set(E)},i(i){u||(g(l.$$.fragment,i),u=!0)},o(i){N(l.$$.fragment,i),u=!1},d(i){w(l,i)}}}function _o(I){let l,u,i,d,E,y,D,x,S,T,K,B;return y=new F({}),K=new uo({props:{python:!0,rust:!0,node:!0,$$slots:{node:[wo],rust:[go],python:[vo]},$$scope:{ctx:I}}}),{c(){l=a("meta"),u=m(),i=a("h1"),d=a("a"),E=a("span"),$(y.$$.fragment),D=m(),x=a("span"),S=h("Normalizers"),T=m(),$(K.$$.fragment),this.h()},l(_){const b=fo('[data-svelte="svelte-1phssyn"]',document.head);l=n(b,"META",{name:!0,content:!0}),b.forEach(r),u=c(_),i=n(_,"H1",{class:!0});var C=o(i);d=n(C,"A",{id:!0,class:!0,href:!0});var Ye=o(d);E=n(Ye,"SPAN",{});var Ee=o(E);v(y.$$.fragment,Ee),Ee.forEach(r),Ye.forEach(r),D=c(C),x=n(C,"SPAN",{});var q=o(x);S=z(q,"Normalizers"),q.forEach(r),C.forEach(r),T=c(_),v(K.$$.fragment,_),this.h()},h(){s(l,"name","hf:doc:metadata"),s(l,"content",JSON.stringify(Eo)),s(d,"id","normalizers"),s(d,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),s(d,"href","#normalizers"),s(i,"class","relative group")},m(_,b){t(document.head,l),f(_,u,b),f(_,i,b),t(i,d),t(d,E),k(y,E,null),t(i,D),t(i,x),t(x,S),f(_,T,b),k(K,_,b),B=!0},p(_,[b]){const C={};b&2&&(C.$$scope={dirty:b,ctx:_}),K.$set(C)},i(_){B||(g(y.$$.fragment,_),g(K.$$.fragment,_),B=!0)},o(_){N(y.$$.fragment,_),N(K.$$.fragment,_),B=!1},d(_){r(l),_&&r(u),_&&r(i),w(y),_&&r(T),w(K,_)}}}const Eo={local:"normalizers",sections:[{local:"tokenizers.normalizers.BertNormalizer]][[tokenizers.normalizers.BertNormalizer",title:"BertNormalizer"},{local:"tokenizers.normalizers.Lowercase]][[tokenizers.normalizers.Lowercase",title:"Lowercase"},{local:"tokenizers.normalizers.NFC]][[tokenizers.normalizers.NFC",title:"NFC"},{local:"tokenizers.normalizers.NFD]][[tokenizers.normalizers.NFD",title:"NFD"},{local:"tokenizers.normalizers.NFKC]][[tokenizers.normalizers.NFKC",title:"NFKC"},{local:"tokenizers.normalizers.NFKD]][[tokenizers.normalizers.NFKD",title:"NFKD"},{local:"tokenizers.normalizers.Nmt]][[tokenizers.normalizers.Nmt",title:"Nmt"},{local:"tokenizers.normalizers.Normalizer]][[tokenizers.normalizers.Normalizer",title:"Normalizer"},{local:"tokenizers.normalizers.Precompiled]][[tokenizers.normalizers.Precompiled",title:"Precompiled"},{local:"tokenizers.normalizers.Replace]][[tokenizers.normalizers.Replace",title:"Replace"},{local:"tokenizers.normalizers.Sequence]][[tokenizers.normalizers.Sequence",title:"Sequence"},{local:"tokenizers.normalizers.Strip]][[tokenizers.normalizers.Strip",title:"Strip"},{local:"tokenizers.normalizers.StripAccents]][[tokenizers.normalizers.StripAccents",title:"StripAccents"}],title:"Normalizers"};function yo(I){return ho(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class bo extends mo{constructor(l){super();co(this,l,yo,_o,po,{})}}export{bo as default,Eo as metadata};
