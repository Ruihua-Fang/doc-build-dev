import{S as lr,i as ir,s as ur,e as o,k as d,w as _,t as a,M as dr,c as r,d as s,m as c,a as l,x as g,h as n,b as f,F as t,g as u,y as q,q as $,o as b,B as E,v as cr}from"../../chunks/vendor-e6c5d93e.js";import{D as pr,Y as fr,T as Un}from"../../chunks/DocNotebookDropdown-b3e38740.js";import{I as Gs}from"../../chunks/IconCopyLink-7b8d27fe.js";import{C as J}from"../../chunks/CodeBlock-37867453.js";function mr(ae){let p,A,m,j,w;return{c(){p=o("p"),A=a("\u270E Si vous vous demandez pourquoi il y a un caract\xE8re "),m=o("code"),j=a("!"),w=a(" dans les commandes shell ci-dessus, c\u2019est parce que nous les ex\xE9cutons dans un cahier Jupyter. Supprimez simplement le pr\xE9fixe si vous souhaitez t\xE9l\xE9charger et d\xE9compresser l\u2019ensemble de donn\xE9es dans un terminal.")},l(h){p=r(h,"P",{});var x=l(p);A=n(x,"\u270E Si vous vous demandez pourquoi il y a un caract\xE8re "),m=r(x,"CODE",{});var y=l(m);j=n(y,"!"),y.forEach(s),w=n(x," dans les commandes shell ci-dessus, c\u2019est parce que nous les ex\xE9cutons dans un cahier Jupyter. Supprimez simplement le pr\xE9fixe si vous souhaitez t\xE9l\xE9charger et d\xE9compresser l\u2019ensemble de donn\xE9es dans un terminal."),x.forEach(s)},m(h,x){u(h,p,x),t(p,A),t(p,m),t(m,j),t(p,w)},d(h){h&&s(p)}}}function hr(ae){let p,A,m,j,w,h,x,y,C,P,O,S,v,M;return{c(){p=o("p"),A=a("The "),m=o("code"),j=a("data_files"),w=a(" argument of the "),h=o("code"),x=a("load_dataset()"),y=a(" function is quite flexible and can be either a single file path, a list of file paths, or a dictionary that maps split names to file paths. You can also group files matching a specified pattern according to the rules used by the Unix shell (for example, you can group all JSON files in a directory into a single division by setting "),C=o("code"),P=a('data_files="*.json"'),O=a(" ). See \u{1F917} Datasets "),S=o("a"),v=a("documentation"),M=a(" for details."),this.h()},l(z){p=r(z,"P",{});var D=l(p);A=n(D,"The "),m=r(D,"CODE",{});var Te=l(m);j=n(Te,"data_files"),Te.forEach(s),w=n(D," argument of the "),h=r(D,"CODE",{});var _e=l(h);x=n(_e,"load_dataset()"),_e.forEach(s),y=n(D," function is quite flexible and can be either a single file path, a list of file paths, or a dictionary that maps split names to file paths. You can also group files matching a specified pattern according to the rules used by the Unix shell (for example, you can group all JSON files in a directory into a single division by setting "),C=r(D,"CODE",{});var I=l(C);P=n(I,'data_files="*.json"'),I.forEach(s),O=n(D," ). See \u{1F917} Datasets "),S=r(D,"A",{href:!0,rel:!0});var ge=l(S);v=n(ge,"documentation"),ge.forEach(s),M=n(D," for details."),D.forEach(s),this.h()},h(){f(S,"href","https://huggingface.co/docs/datasets/loading.html#local-and-remote-files"),f(S,"rel","nofollow")},m(z,D){u(z,p,D),t(p,A),t(p,m),t(m,j),t(p,w),t(p,h),t(h,x),t(p,y),t(p,C),t(C,P),t(p,O),t(p,S),t(S,v),t(p,M)},d(z){z&&s(p)}}}function vr(ae){let p,A,m,j,w,h,x,y,C,P,O;return{c(){p=o("p"),A=a("\u270F\uFE0F "),m=o("strong"),j=a("Essayez-le !"),w=a(" Choisissez un autre ensemble de donn\xE9es h\xE9berg\xE9 sur GitHub ou le "),h=o("a"),x=a("UCI Machine Learning Repository"),y=a(" et essayez de le charger localement et \xE0 distance en utilisant les techniques pr\xE9sent\xE9es ci-dessus. Pour obtenir des points bonus, essayez de charger un ensemble de donn\xE9es stock\xE9 au format CSV ou texte (voir la "),C=o("a"),P=a("documentation"),O=a(" pour plus d\u2019informations sur ces formats)."),this.h()},l(S){p=r(S,"P",{});var v=l(p);A=n(v,"\u270F\uFE0F "),m=r(v,"STRONG",{});var M=l(m);j=n(M,"Essayez-le !"),M.forEach(s),w=n(v," Choisissez un autre ensemble de donn\xE9es h\xE9berg\xE9 sur GitHub ou le "),h=r(v,"A",{href:!0,rel:!0});var z=l(h);x=n(z,"UCI Machine Learning Repository"),z.forEach(s),y=n(v," et essayez de le charger localement et \xE0 distance en utilisant les techniques pr\xE9sent\xE9es ci-dessus. Pour obtenir des points bonus, essayez de charger un ensemble de donn\xE9es stock\xE9 au format CSV ou texte (voir la "),C=r(v,"A",{href:!0,rel:!0});var D=l(C);P=n(D,"documentation"),D.forEach(s),O=n(v," pour plus d\u2019informations sur ces formats)."),v.forEach(s),this.h()},h(){f(h,"href","https://archive.ics.uci.edu/ml/index.php"),f(h,"rel","nofollow"),f(C,"href","https://huggingface.co/docs/datasets/loading.html#local-and-remote-files"),f(C,"rel","nofollow")},m(S,v){u(S,p,v),t(p,A),t(p,m),t(m,j),t(p,w),t(p,h),t(h,x),t(p,y),t(p,C),t(C,P),t(p,O)},d(S){S&&s(p)}}}function _r(ae){let p,A,m,j,w,h,x,y,C,P,O,S,v,M,z,D,Te,_e,I,ge,B,ne,pt,qe,Us,ft,Vs,ss,Ne,Ys,as,oe,mt,Z,He,Bs,Zs,Je,Ks,Ws,Le,Xs,ea,L,K,Me,ta,sa,Ie,ht,aa,na,Re,vt,oa,ra,W,Fe,la,ia,Ge,_t,ua,da,Ue,gt,ca,pa,X,Ve,fa,ma,Ye,qt,ha,va,Be,$t,_a,ga,ee,Ze,qa,$a,Ke,bt,ba,Ea,We,Et,ja,ns,R,Da,jt,xa,Sa,Dt,wa,Ca,os,te,re,xt,$e,Aa,St,ya,rs,le,za,be,ka,Oa,ls,ie,Qa,wt,Pa,Ta,is,Ee,us,T,Na,Ct,Ha,Ja,At,La,Ma,yt,Ia,Ra,ds,je,cs,De,ps,F,Fa,zt,Ga,Ua,kt,Va,Ya,fs,ue,ms,G,Ba,Ot,Za,Ka,Qt,Wa,Xa,hs,xe,vs,N,en,Pt,tn,sn,Tt,an,nn,Nt,on,rn,_s,Se,gs,we,qs,Xe,ln,$s,Ce,bs,Ae,Es,k,un,Ht,dn,cn,Jt,pn,fn,Lt,mn,hn,Mt,vn,_n,It,gn,qn,js,ye,Ds,ze,xs,et,$n,Ss,de,ws,U,bn,Rt,En,jn,Ft,Dn,xn,Cs,ke,As,ce,Sn,Gt,wn,Cn,ys,tt,An,zs,se,pe,Ut,Oe,yn,Vt,zn,ks,Q,kn,Yt,On,Qn,Bt,Pn,Tn,Zt,Nn,Hn,Kt,Jn,Ln,Os,Qe,Qs,V,Mn,Wt,In,Rn,Xt,Fn,Gn,Ps,fe,Ts;return h=new Gs({}),O=new pr({props:{classNames:"absolute z-10 right-0 top-0",options:[{label:"Google Colab",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/master/course/chapter5/section2.ipynb"},{label:"Aws Studio",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/master/course/chapter5/section2.ipynb"}]}}),I=new fr({props:{id:"HyQgpJTkRdE"}}),qe=new Gs({}),$e=new Gs({}),Ee=new J({props:{code:`!wget https://github.com/crux82/squad-it/raw/master/SQuAD_it-train.json.gz
!wget https://github.com/crux82/squad-it/raw/master/SQuAD_it-test.json.gz`,highlighted:`!wget https://github.com/crux82/squad-it/raw/master/SQuAD_it-train.json.gz
!wget https://github.com/crux82/squad-it/raw/master/SQuAD_it-test.json.gz`}}),je=new J({props:{code:"!gzip -dkv SQuAD_it-*.json.gz",highlighted:"!gzip -dkv SQuAD_it-*.json.gz"}}),De=new J({props:{code:`SQuAD_it-test.json.gz:	   87.4% -- replaced with SQuAD_it-test.json
SQuAD_it-train.json.gz:	   82.2% -- replaced with SQuAD_it-train.json`,highlighted:`SQuAD_it-test.json.gz:	   87.4% -- replaced with SQuAD_it-test.json
SQuAD_it-train.json.gz:	   82.2% -- replaced with SQuAD_it-train.json`}}),ue=new Un({props:{$$slots:{default:[mr]},$$scope:{ctx:ae}}}),xe=new J({props:{code:`from datasets import load_dataset

squad_it_dataset = load_dataset("json", data_files="SQuAD_it-train.json", field="data")`,highlighted:`<span class="hljs-keyword">from</span> datasets <span class="hljs-keyword">import</span> load_dataset

squad_it_dataset = load_dataset(<span class="hljs-string">&quot;json&quot;</span>, data_files=<span class="hljs-string">&quot;SQuAD_it-train.json&quot;</span>, field=<span class="hljs-string">&quot;data&quot;</span>)`}}),Se=new J({props:{code:"squad_it_dataset",highlighted:"squad_it_dataset"}}),we=new J({props:{code:`DatasetDict({
    train: Dataset({
        features: ['title', 'paragraphs'],
        num_rows: 442
    })
})`,highlighted:`DatasetDict({
    train: Dataset({
        features: [<span class="hljs-string">&#x27;title&#x27;</span>, <span class="hljs-string">&#x27;paragraphs&#x27;</span>],
        num_rows: <span class="hljs-number">442</span>
    })
})`}}),Ce=new J({props:{code:'squad_it_dataset["train"][0]',highlighted:'squad_it_dataset[<span class="hljs-string">&quot;train&quot;</span>][<span class="hljs-number">0</span>]'}}),Ae=new J({props:{code:`{
    "title": "Terremoto del Sichuan del 2008",
    "paragraphs": [
        {
            "context": "Il terremoto del Sichuan del 2008 o il terremoto...",
            "qas": [
                {
                    "answers": [{"answer_start": 29, "text": "2008"}],
                    "id": "56cdca7862d2951400fa6826",
                    "question": "In quale anno si \xE8 verificato il terremoto nel Sichuan?",
                },
                ...
            ],
        },
        ...
    ],
}`,highlighted:`{
    <span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;Terremoto del Sichuan del 2008&quot;</span>,
    <span class="hljs-string">&quot;paragraphs&quot;</span>: [
        {
            <span class="hljs-string">&quot;context&quot;</span>: <span class="hljs-string">&quot;Il terremoto del Sichuan del 2008 o il terremoto...&quot;</span>,
            <span class="hljs-string">&quot;qas&quot;</span>: [
                {
                    <span class="hljs-string">&quot;answers&quot;</span>: [{<span class="hljs-string">&quot;answer_start&quot;</span>: <span class="hljs-number">29</span>, <span class="hljs-string">&quot;text&quot;</span>: <span class="hljs-string">&quot;2008&quot;</span>}],
                    <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-string">&quot;56cdca7862d2951400fa6826&quot;</span>,
                    <span class="hljs-string">&quot;question&quot;</span>: <span class="hljs-string">&quot;In quale anno si \xE8 verificato il terremoto nel Sichuan?&quot;</span>,
                },
                ...
            ],
        },
        ...
    ],
}`}}),ye=new J({props:{code:`data_files = {"train": "SQuAD_it-train.json", "test": "SQuAD_it-test.json"}
squad_it_dataset = load_dataset("json", data_files=data_files, field="data")
squad_it_dataset`,highlighted:`data_files = {<span class="hljs-string">&quot;train&quot;</span>: <span class="hljs-string">&quot;SQuAD_it-train.json&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>: <span class="hljs-string">&quot;SQuAD_it-test.json&quot;</span>}
squad_it_dataset = load_dataset(<span class="hljs-string">&quot;json&quot;</span>, data_files=data_files, field=<span class="hljs-string">&quot;data&quot;</span>)
squad_it_dataset`}}),ze=new J({props:{code:`DatasetDict({
    train: Dataset({
        features: ['title', 'paragraphs'],
        num_rows: 442
    })
    test: Dataset({
        features: ['title', 'paragraphs'],
        num_rows: 48
    })
})`,highlighted:`DatasetDict({
    train: Dataset({
        features: [<span class="hljs-string">&#x27;title&#x27;</span>, <span class="hljs-string">&#x27;paragraphs&#x27;</span>],
        num_rows: <span class="hljs-number">442</span>
    })
    test: Dataset({
        features: [<span class="hljs-string">&#x27;title&#x27;</span>, <span class="hljs-string">&#x27;paragraphs&#x27;</span>],
        num_rows: <span class="hljs-number">48</span>
    })
})`}}),de=new Un({props:{$$slots:{default:[hr]},$$scope:{ctx:ae}}}),ke=new J({props:{code:`data_files = {"train": "SQuAD_it-train.json.gz", "test": "SQuAD_it-test.json.gz"}
squad_it_dataset = load_dataset("json", data_files=data_files, field="data")`,highlighted:`data_files = {<span class="hljs-string">&quot;train&quot;</span>: <span class="hljs-string">&quot;SQuAD_it-train.json.gz&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>: <span class="hljs-string">&quot;SQuAD_it-test.json.gz&quot;</span>}
squad_it_dataset = load_dataset(<span class="hljs-string">&quot;json&quot;</span>, data_files=data_files, field=<span class="hljs-string">&quot;data&quot;</span>)`}}),Oe=new Gs({}),Qe=new J({props:{code:`url = "https://github.com/crux82/squad-it/raw/master/"
data_files = {
    "train": url + "SQuAD_it-train.json.gz",
    "test": url + "SQuAD_it-test.json.gz",
}
squad_it_dataset = load_dataset("json", data_files=data_files, field="data")`,highlighted:`url = <span class="hljs-string">&quot;https://github.com/crux82/squad-it/raw/master/&quot;</span>
data_files = {
    <span class="hljs-string">&quot;train&quot;</span>: url + <span class="hljs-string">&quot;SQuAD_it-train.json.gz&quot;</span>,
    <span class="hljs-string">&quot;test&quot;</span>: url + <span class="hljs-string">&quot;SQuAD_it-test.json.gz&quot;</span>,
}
squad_it_dataset = load_dataset(<span class="hljs-string">&quot;json&quot;</span>, data_files=data_files, field=<span class="hljs-string">&quot;data&quot;</span>)`}}),fe=new Un({props:{$$slots:{default:[vr]},$$scope:{ctx:ae}}}),{c(){p=o("meta"),A=d(),m=o("h1"),j=o("a"),w=o("span"),_(h.$$.fragment),x=d(),y=o("span"),C=a("Que faire si mon ensemble de donn\xE9es n'est pas sur le Hub\xA0?"),P=d(),_(O.$$.fragment),S=d(),v=o("p"),M=a("Vous savez comment utiliser le "),z=o("a"),D=a("Hugging Face Hub"),Te=a(" pour t\xE9l\xE9charger des ensembles de donn\xE9es, mais vous vous retrouverez souvent \xE0 travailler avec des donn\xE9es stock\xE9es sur votre ordinateur portable ou sur un serveur distant. Dans cette section, nous allons vous montrer comment \u{1F917} Datasets peut \xEAtre utilis\xE9 pour charger des ensembles de donn\xE9es qui ne sont pas disponibles sur le Hugging Face Hub."),_e=d(),_(I.$$.fragment),ge=d(),B=o("h2"),ne=o("a"),pt=o("span"),_(qe.$$.fragment),Us=d(),ft=o("span"),Vs=a("Travailler avec des ensembles de donn\xE9es locaux et distants"),ss=d(),Ne=o("p"),Ys=a("\u{1F917} Datasets fournit des scripts de chargement pour g\xE9rer le chargement des ensembles de donn\xE9es locaux et distants. Il prend en charge plusieurs formats de donn\xE9es courants, tels que\xA0:"),as=d(),oe=o("table"),mt=o("thead"),Z=o("tr"),He=o("th"),Bs=a("Format de donn\xE9es"),Zs=d(),Je=o("th"),Ks=a("Chargement du script"),Ws=d(),Le=o("th"),Xs=a("Exemple"),ea=d(),L=o("tbody"),K=o("tr"),Me=o("td"),ta=a("CSV & TSV"),sa=d(),Ie=o("td"),ht=o("code"),aa=a("csv"),na=d(),Re=o("td"),vt=o("code"),oa=a('load_dataset("csv", data_files="my_file.csv")'),ra=d(),W=o("tr"),Fe=o("td"),la=a("Fichiers texte"),ia=d(),Ge=o("td"),_t=o("code"),ua=a("text"),da=d(),Ue=o("td"),gt=o("code"),ca=a('load_dataset("text", data_files="my_file.txt")'),pa=d(),X=o("tr"),Ve=o("td"),fa=a("JSON & Lignes JSON"),ma=d(),Ye=o("td"),qt=o("code"),ha=a("json"),va=d(),Be=o("td"),$t=o("code"),_a=a('load_dataset("json", data_files="my_file.jsonl")'),ga=d(),ee=o("tr"),Ze=o("td"),qa=a("DataFrames marin\xE9s"),$a=d(),Ke=o("td"),bt=o("code"),ba=a("pandas"),Ea=d(),We=o("td"),Et=o("code"),ja=a('load_dataset("pandas", data_files="my_dataframe.pkl")'),ns=d(),R=o("p"),Da=a("Comme indiqu\xE9 dans le tableau, pour chaque format de donn\xE9es, nous avons juste besoin de sp\xE9cifier le type de script de chargement dans la fonction "),jt=o("code"),xa=a("load_dataset()"),Sa=a(", ainsi qu\u2019un argument "),Dt=o("code"),wa=a("data_files"),Ca=a(" qui sp\xE9cifie le chemin vers un ou plusieurs fichiers. Commen\xE7ons par charger un jeu de donn\xE9es \xE0 partir de fichiers locaux\xA0; plus tard, nous verrons comment faire la m\xEAme chose avec des fichiers distants."),os=d(),te=o("h2"),re=o("a"),xt=o("span"),_($e.$$.fragment),Aa=d(),St=o("span"),ya=a("Charger un jeu de donn\xE9es local"),rs=d(),le=o("p"),za=a("Pour cet exemple, nous utiliserons l\u2019ensemble de donn\xE9es "),be=o("a"),ka=a("SQuAD-it"),Oa=a(", qui est un ensemble de donn\xE9es \xE0 grande \xE9chelle pour r\xE9pondre aux questions en Italien."),ls=d(),ie=o("p"),Qa=a("Les fractionnements de formation et de test sont h\xE9berg\xE9s sur GitHub, nous pouvons donc les t\xE9l\xE9charger avec une simple commande "),wt=o("code"),Pa=a("wget"),Ta=a("\xA0:"),is=d(),_(Ee.$$.fragment),us=d(),T=o("p"),Na=a("Cela t\xE9l\xE9chargera deux fichiers compress\xE9s appel\xE9s "),Ct=o("em"),Ha=a("SQuAD_it-train.json.gz"),Ja=a(" et "),At=o("em"),La=a("SQuAD_it-test.json.gz"),Ma=a(", que nous pouvons d\xE9compresser avec la commande Linux "),yt=o("code"),Ia=a("gzip"),Ra=a("\xA0:"),ds=d(),_(je.$$.fragment),cs=d(),_(De.$$.fragment),ps=d(),F=o("p"),Fa=a("Nous pouvons voir que les fichiers compress\xE9s ont \xE9t\xE9 remplac\xE9s par "),zt=o("em"),Ga=a("SQuAD_it-train.json"),Ua=a(" et "),kt=o("em"),Va=a("SQuAD_it-text.json"),Ya=a(", et que les donn\xE9es sont stock\xE9es au format JSON."),fs=d(),_(ue.$$.fragment),ms=d(),G=o("p"),Ba=a("Pour charger un fichier JSON avec la fonction "),Ot=o("code"),Za=a("load_dataset()"),Ka=a(", nous avons juste besoin de savoir si nous avons affaire \xE0 du JSON ordinaire (similaire \xE0 un dictionnaire imbriqu\xE9) ou \xE0 des lignes JSON (JSON s\xE9par\xE9 par des lignes). Comme de nombreux ensembles de donn\xE9es de questions-r\xE9ponses, SQuAD-it utilise le format imbriqu\xE9, avec tout le texte stock\xE9 dans un champ \u201Cdonn\xE9es\u201D. Cela signifie que nous pouvons charger le jeu de donn\xE9es en sp\xE9cifiant l\u2019argument "),Qt=o("code"),Wa=a("field"),Xa=a(" comme suit\xA0:"),hs=d(),_(xe.$$.fragment),vs=d(),N=o("p"),en=a("Par d\xE9faut, le chargement de fichiers locaux cr\xE9e un objet "),Pt=o("code"),tn=a("DatasetDict"),sn=a(" avec une division "),Tt=o("code"),an=a("train"),nn=a(". Nous pouvons le voir en inspectant l\u2019objet "),Nt=o("code"),on=a("squad_it_dataset"),rn=a("\xA0:"),_s=d(),_(Se.$$.fragment),gs=d(),_(we.$$.fragment),qs=d(),Xe=o("p"),ln=a("Cela nous montre le nombre de lignes et les noms de colonnes associ\xE9s \xE0 l\u2019ensemble d\u2019apprentissage. Nous pouvons afficher l\u2019un des exemples en indexant la division \u201Ctrain\u201D comme suit\xA0:"),$s=d(),_(Ce.$$.fragment),bs=d(),_(Ae.$$.fragment),Es=d(),k=o("p"),un=a("Super, nous avons charg\xE9 notre premier jeu de donn\xE9es local\xA0! Mais bien que cela ait fonctionn\xE9 pour l\u2019ensemble d\u2019entra\xEEnement, ce que nous voulons vraiment, c\u2019est inclure \xE0 la fois les divisions "),Ht=o("code"),dn=a("train"),cn=a(" et "),Jt=o("code"),pn=a("test"),fn=a(" dans un seul objet "),Lt=o("code"),mn=a("DatasetDict"),hn=a(" afin que nous puissions appliquer les fonctions "),Mt=o("code"),vn=a("Dataset.map()"),_n=a(" sur les deux divisions \xE0 la fois . Pour ce faire, nous pouvons fournir un dictionnaire \xE0 l\u2019argument "),It=o("code"),gn=a("data_files"),qn=a(" qui associe chaque nom de division \xE0 un fichier associ\xE9 \xE0 cette division\xA0:"),js=d(),_(ye.$$.fragment),Ds=d(),_(ze.$$.fragment),xs=d(),et=o("p"),$n=a("C\u2019est exactement ce que nous voulions. D\xE9sormais, nous pouvons appliquer diverses techniques de pr\xE9traitement pour nettoyer les donn\xE9es, tokeniser les avis, etc."),Ss=d(),_(de.$$.fragment),ws=d(),U=o("p"),bn=a("Les scripts de chargement dans \u{1F917} Datasets prend en charge la d\xE9compression automatique des fichiers d\u2019entr\xE9e, nous aurions donc pu ignorer l\u2019utilisation de "),Rt=o("code"),En=a("gzip"),jn=a(" en pointant l\u2019argument "),Ft=o("code"),Dn=a("data_files"),xn=a(" directement sur les fichiers compress\xE9s\xA0:"),Cs=d(),_(ke.$$.fragment),As=d(),ce=o("p"),Sn=a("Cela peut \xEAtre utile si vous ne souhaitez pas d\xE9compresser manuellement de nombreux fichiers GZIP. La d\xE9compression automatique s\u2019applique \xE9galement \xE0 d\u2019autres formats courants tels que ZIP et TAR, il vous suffit donc de pointer "),Gt=o("code"),wn=a("data_files"),Cn=a(" vers les fichiers compress\xE9s et vous \xEAtes pr\xEAt \xE0 partir\xA0!"),ys=d(),tt=o("p"),An=a("Maintenant que vous savez comment charger des fichiers locaux sur votre ordinateur portable ou de bureau, examinons le chargement de fichiers distants."),zs=d(),se=o("h2"),pe=o("a"),Ut=o("span"),_(Oe.$$.fragment),yn=d(),Vt=o("span"),zn=a("Charger un jeu de donn\xE9es distant"),ks=d(),Q=o("p"),kn=a("Si vous travaillez en tant que data scientist ou codeur dans une entreprise, il y a de fortes chances que les ensembles de donn\xE9es que vous souhaitez analyser soient stock\xE9s sur un serveur distant. Heureusement, charger des fichiers distants est aussi simple que de charger des fichiers locaux\xA0! Au lieu de fournir un chemin vers les fichiers locaux, nous pointons l\u2019argument "),Yt=o("code"),On=a("data_files"),Qn=a(" de "),Bt=o("code"),Pn=a("load_dataset()"),Tn=a(" vers une ou plusieurs URL o\xF9 les fichiers distants sont stock\xE9s. Par exemple, pour l\u2019ensemble de donn\xE9es SQuAD-it h\xE9berg\xE9 sur GitHub, nous pouvons simplement faire pointer "),Zt=o("code"),Nn=a("data_files"),Hn=a(" vers les URL "),Kt=o("em"),Jn=a("SQuAD_it-*.json.gz"),Ln=a(" comme suit\xA0:"),Os=d(),_(Qe.$$.fragment),Qs=d(),V=o("p"),Mn=a("Cela renvoie le m\xEAme objet "),Wt=o("code"),In=a("DatasetDict"),Rn=a(" obtenu ci-dessus, mais nous \xE9vite de t\xE9l\xE9charger et de d\xE9compresser manuellement les fichiers "),Xt=o("em"),Fn=a("SQuAD_it-*.json.gz"),Gn=a(". Ceci conclut notre incursion dans les diff\xE9rentes fa\xE7ons de charger des ensembles de donn\xE9es qui ne sont pas h\xE9berg\xE9s sur le Hugging Face Hub. Maintenant que nous avons un ensemble de donn\xE9es avec lequel jouer, mettons-nous la main \xE0 la p\xE2te avec diverses techniques de gestion des donn\xE9es\xA0!"),Ps=d(),_(fe.$$.fragment),this.h()},l(e){const i=dr('[data-svelte="svelte-1phssyn"]',document.head);p=r(i,"META",{name:!0,content:!0}),i.forEach(s),A=c(e),m=r(e,"H1",{class:!0});var Pe=l(m);j=r(Pe,"A",{id:!0,class:!0,href:!0});var es=l(j);w=r(es,"SPAN",{});var ts=l(w);g(h.$$.fragment,ts),ts.forEach(s),es.forEach(s),x=c(Pe),y=r(Pe,"SPAN",{});var Vn=l(y);C=n(Vn,"Que faire si mon ensemble de donn\xE9es n'est pas sur le Hub\xA0?"),Vn.forEach(s),Pe.forEach(s),P=c(e),g(O.$$.fragment,e),S=c(e),v=r(e,"P",{});var Ns=l(v);M=n(Ns,"Vous savez comment utiliser le "),z=r(Ns,"A",{href:!0,rel:!0});var Yn=l(z);D=n(Yn,"Hugging Face Hub"),Yn.forEach(s),Te=n(Ns," pour t\xE9l\xE9charger des ensembles de donn\xE9es, mais vous vous retrouverez souvent \xE0 travailler avec des donn\xE9es stock\xE9es sur votre ordinateur portable ou sur un serveur distant. Dans cette section, nous allons vous montrer comment \u{1F917} Datasets peut \xEAtre utilis\xE9 pour charger des ensembles de donn\xE9es qui ne sont pas disponibles sur le Hugging Face Hub."),Ns.forEach(s),_e=c(e),g(I.$$.fragment,e),ge=c(e),B=r(e,"H2",{class:!0});var Hs=l(B);ne=r(Hs,"A",{id:!0,class:!0,href:!0});var Bn=l(ne);pt=r(Bn,"SPAN",{});var Zn=l(pt);g(qe.$$.fragment,Zn),Zn.forEach(s),Bn.forEach(s),Us=c(Hs),ft=r(Hs,"SPAN",{});var Kn=l(ft);Vs=n(Kn,"Travailler avec des ensembles de donn\xE9es locaux et distants"),Kn.forEach(s),Hs.forEach(s),ss=c(e),Ne=r(e,"P",{});var Wn=l(Ne);Ys=n(Wn,"\u{1F917} Datasets fournit des scripts de chargement pour g\xE9rer le chargement des ensembles de donn\xE9es locaux et distants. Il prend en charge plusieurs formats de donn\xE9es courants, tels que\xA0:"),Wn.forEach(s),as=c(e),oe=r(e,"TABLE",{});var Js=l(oe);mt=r(Js,"THEAD",{});var Xn=l(mt);Z=r(Xn,"TR",{});var st=l(Z);He=r(st,"TH",{align:!0});var eo=l(He);Bs=n(eo,"Format de donn\xE9es"),eo.forEach(s),Zs=c(st),Je=r(st,"TH",{align:!0});var to=l(Je);Ks=n(to,"Chargement du script"),to.forEach(s),Ws=c(st),Le=r(st,"TH",{align:!0});var so=l(Le);Xs=n(so,"Exemple"),so.forEach(s),st.forEach(s),Xn.forEach(s),ea=c(Js),L=r(Js,"TBODY",{});var me=l(L);K=r(me,"TR",{});var at=l(K);Me=r(at,"TD",{align:!0});var ao=l(Me);ta=n(ao,"CSV & TSV"),ao.forEach(s),sa=c(at),Ie=r(at,"TD",{align:!0});var no=l(Ie);ht=r(no,"CODE",{});var oo=l(ht);aa=n(oo,"csv"),oo.forEach(s),no.forEach(s),na=c(at),Re=r(at,"TD",{align:!0});var ro=l(Re);vt=r(ro,"CODE",{});var lo=l(vt);oa=n(lo,'load_dataset("csv", data_files="my_file.csv")'),lo.forEach(s),ro.forEach(s),at.forEach(s),ra=c(me),W=r(me,"TR",{});var nt=l(W);Fe=r(nt,"TD",{align:!0});var io=l(Fe);la=n(io,"Fichiers texte"),io.forEach(s),ia=c(nt),Ge=r(nt,"TD",{align:!0});var uo=l(Ge);_t=r(uo,"CODE",{});var co=l(_t);ua=n(co,"text"),co.forEach(s),uo.forEach(s),da=c(nt),Ue=r(nt,"TD",{align:!0});var po=l(Ue);gt=r(po,"CODE",{});var fo=l(gt);ca=n(fo,'load_dataset("text", data_files="my_file.txt")'),fo.forEach(s),po.forEach(s),nt.forEach(s),pa=c(me),X=r(me,"TR",{});var ot=l(X);Ve=r(ot,"TD",{align:!0});var mo=l(Ve);fa=n(mo,"JSON & Lignes JSON"),mo.forEach(s),ma=c(ot),Ye=r(ot,"TD",{align:!0});var ho=l(Ye);qt=r(ho,"CODE",{});var vo=l(qt);ha=n(vo,"json"),vo.forEach(s),ho.forEach(s),va=c(ot),Be=r(ot,"TD",{align:!0});var _o=l(Be);$t=r(_o,"CODE",{});var go=l($t);_a=n(go,'load_dataset("json", data_files="my_file.jsonl")'),go.forEach(s),_o.forEach(s),ot.forEach(s),ga=c(me),ee=r(me,"TR",{});var rt=l(ee);Ze=r(rt,"TD",{align:!0});var qo=l(Ze);qa=n(qo,"DataFrames marin\xE9s"),qo.forEach(s),$a=c(rt),Ke=r(rt,"TD",{align:!0});var $o=l(Ke);bt=r($o,"CODE",{});var bo=l(bt);ba=n(bo,"pandas"),bo.forEach(s),$o.forEach(s),Ea=c(rt),We=r(rt,"TD",{align:!0});var Eo=l(We);Et=r(Eo,"CODE",{});var jo=l(Et);ja=n(jo,'load_dataset("pandas", data_files="my_dataframe.pkl")'),jo.forEach(s),Eo.forEach(s),rt.forEach(s),me.forEach(s),Js.forEach(s),ns=c(e),R=r(e,"P",{});var lt=l(R);Da=n(lt,"Comme indiqu\xE9 dans le tableau, pour chaque format de donn\xE9es, nous avons juste besoin de sp\xE9cifier le type de script de chargement dans la fonction "),jt=r(lt,"CODE",{});var Do=l(jt);xa=n(Do,"load_dataset()"),Do.forEach(s),Sa=n(lt,", ainsi qu\u2019un argument "),Dt=r(lt,"CODE",{});var xo=l(Dt);wa=n(xo,"data_files"),xo.forEach(s),Ca=n(lt," qui sp\xE9cifie le chemin vers un ou plusieurs fichiers. Commen\xE7ons par charger un jeu de donn\xE9es \xE0 partir de fichiers locaux\xA0; plus tard, nous verrons comment faire la m\xEAme chose avec des fichiers distants."),lt.forEach(s),os=c(e),te=r(e,"H2",{class:!0});var Ls=l(te);re=r(Ls,"A",{id:!0,class:!0,href:!0});var So=l(re);xt=r(So,"SPAN",{});var wo=l(xt);g($e.$$.fragment,wo),wo.forEach(s),So.forEach(s),Aa=c(Ls),St=r(Ls,"SPAN",{});var Co=l(St);ya=n(Co,"Charger un jeu de donn\xE9es local"),Co.forEach(s),Ls.forEach(s),rs=c(e),le=r(e,"P",{});var Ms=l(le);za=n(Ms,"Pour cet exemple, nous utiliserons l\u2019ensemble de donn\xE9es "),be=r(Ms,"A",{href:!0,rel:!0});var Ao=l(be);ka=n(Ao,"SQuAD-it"),Ao.forEach(s),Oa=n(Ms,", qui est un ensemble de donn\xE9es \xE0 grande \xE9chelle pour r\xE9pondre aux questions en Italien."),Ms.forEach(s),ls=c(e),ie=r(e,"P",{});var Is=l(ie);Qa=n(Is,"Les fractionnements de formation et de test sont h\xE9berg\xE9s sur GitHub, nous pouvons donc les t\xE9l\xE9charger avec une simple commande "),wt=r(Is,"CODE",{});var yo=l(wt);Pa=n(yo,"wget"),yo.forEach(s),Ta=n(Is,"\xA0:"),Is.forEach(s),is=c(e),g(Ee.$$.fragment,e),us=c(e),T=r(e,"P",{});var he=l(T);Na=n(he,"Cela t\xE9l\xE9chargera deux fichiers compress\xE9s appel\xE9s "),Ct=r(he,"EM",{});var zo=l(Ct);Ha=n(zo,"SQuAD_it-train.json.gz"),zo.forEach(s),Ja=n(he," et "),At=r(he,"EM",{});var ko=l(At);La=n(ko,"SQuAD_it-test.json.gz"),ko.forEach(s),Ma=n(he,", que nous pouvons d\xE9compresser avec la commande Linux "),yt=r(he,"CODE",{});var Oo=l(yt);Ia=n(Oo,"gzip"),Oo.forEach(s),Ra=n(he,"\xA0:"),he.forEach(s),ds=c(e),g(je.$$.fragment,e),cs=c(e),g(De.$$.fragment,e),ps=c(e),F=r(e,"P",{});var it=l(F);Fa=n(it,"Nous pouvons voir que les fichiers compress\xE9s ont \xE9t\xE9 remplac\xE9s par "),zt=r(it,"EM",{});var Qo=l(zt);Ga=n(Qo,"SQuAD_it-train.json"),Qo.forEach(s),Ua=n(it," et "),kt=r(it,"EM",{});var Po=l(kt);Va=n(Po,"SQuAD_it-text.json"),Po.forEach(s),Ya=n(it,", et que les donn\xE9es sont stock\xE9es au format JSON."),it.forEach(s),fs=c(e),g(ue.$$.fragment,e),ms=c(e),G=r(e,"P",{});var ut=l(G);Ba=n(ut,"Pour charger un fichier JSON avec la fonction "),Ot=r(ut,"CODE",{});var To=l(Ot);Za=n(To,"load_dataset()"),To.forEach(s),Ka=n(ut,", nous avons juste besoin de savoir si nous avons affaire \xE0 du JSON ordinaire (similaire \xE0 un dictionnaire imbriqu\xE9) ou \xE0 des lignes JSON (JSON s\xE9par\xE9 par des lignes). Comme de nombreux ensembles de donn\xE9es de questions-r\xE9ponses, SQuAD-it utilise le format imbriqu\xE9, avec tout le texte stock\xE9 dans un champ \u201Cdonn\xE9es\u201D. Cela signifie que nous pouvons charger le jeu de donn\xE9es en sp\xE9cifiant l\u2019argument "),Qt=r(ut,"CODE",{});var No=l(Qt);Wa=n(No,"field"),No.forEach(s),Xa=n(ut," comme suit\xA0:"),ut.forEach(s),hs=c(e),g(xe.$$.fragment,e),vs=c(e),N=r(e,"P",{});var ve=l(N);en=n(ve,"Par d\xE9faut, le chargement de fichiers locaux cr\xE9e un objet "),Pt=r(ve,"CODE",{});var Ho=l(Pt);tn=n(Ho,"DatasetDict"),Ho.forEach(s),sn=n(ve," avec une division "),Tt=r(ve,"CODE",{});var Jo=l(Tt);an=n(Jo,"train"),Jo.forEach(s),nn=n(ve,". Nous pouvons le voir en inspectant l\u2019objet "),Nt=r(ve,"CODE",{});var Lo=l(Nt);on=n(Lo,"squad_it_dataset"),Lo.forEach(s),rn=n(ve,"\xA0:"),ve.forEach(s),_s=c(e),g(Se.$$.fragment,e),gs=c(e),g(we.$$.fragment,e),qs=c(e),Xe=r(e,"P",{});var Mo=l(Xe);ln=n(Mo,"Cela nous montre le nombre de lignes et les noms de colonnes associ\xE9s \xE0 l\u2019ensemble d\u2019apprentissage. Nous pouvons afficher l\u2019un des exemples en indexant la division \u201Ctrain\u201D comme suit\xA0:"),Mo.forEach(s),$s=c(e),g(Ce.$$.fragment,e),bs=c(e),g(Ae.$$.fragment,e),Es=c(e),k=r(e,"P",{});var H=l(k);un=n(H,"Super, nous avons charg\xE9 notre premier jeu de donn\xE9es local\xA0! Mais bien que cela ait fonctionn\xE9 pour l\u2019ensemble d\u2019entra\xEEnement, ce que nous voulons vraiment, c\u2019est inclure \xE0 la fois les divisions "),Ht=r(H,"CODE",{});var Io=l(Ht);dn=n(Io,"train"),Io.forEach(s),cn=n(H," et "),Jt=r(H,"CODE",{});var Ro=l(Jt);pn=n(Ro,"test"),Ro.forEach(s),fn=n(H," dans un seul objet "),Lt=r(H,"CODE",{});var Fo=l(Lt);mn=n(Fo,"DatasetDict"),Fo.forEach(s),hn=n(H," afin que nous puissions appliquer les fonctions "),Mt=r(H,"CODE",{});var Go=l(Mt);vn=n(Go,"Dataset.map()"),Go.forEach(s),_n=n(H," sur les deux divisions \xE0 la fois . Pour ce faire, nous pouvons fournir un dictionnaire \xE0 l\u2019argument "),It=r(H,"CODE",{});var Uo=l(It);gn=n(Uo,"data_files"),Uo.forEach(s),qn=n(H," qui associe chaque nom de division \xE0 un fichier associ\xE9 \xE0 cette division\xA0:"),H.forEach(s),js=c(e),g(ye.$$.fragment,e),Ds=c(e),g(ze.$$.fragment,e),xs=c(e),et=r(e,"P",{});var Vo=l(et);$n=n(Vo,"C\u2019est exactement ce que nous voulions. D\xE9sormais, nous pouvons appliquer diverses techniques de pr\xE9traitement pour nettoyer les donn\xE9es, tokeniser les avis, etc."),Vo.forEach(s),Ss=c(e),g(de.$$.fragment,e),ws=c(e),U=r(e,"P",{});var dt=l(U);bn=n(dt,"Les scripts de chargement dans \u{1F917} Datasets prend en charge la d\xE9compression automatique des fichiers d\u2019entr\xE9e, nous aurions donc pu ignorer l\u2019utilisation de "),Rt=r(dt,"CODE",{});var Yo=l(Rt);En=n(Yo,"gzip"),Yo.forEach(s),jn=n(dt," en pointant l\u2019argument "),Ft=r(dt,"CODE",{});var Bo=l(Ft);Dn=n(Bo,"data_files"),Bo.forEach(s),xn=n(dt," directement sur les fichiers compress\xE9s\xA0:"),dt.forEach(s),Cs=c(e),g(ke.$$.fragment,e),As=c(e),ce=r(e,"P",{});var Rs=l(ce);Sn=n(Rs,"Cela peut \xEAtre utile si vous ne souhaitez pas d\xE9compresser manuellement de nombreux fichiers GZIP. La d\xE9compression automatique s\u2019applique \xE9galement \xE0 d\u2019autres formats courants tels que ZIP et TAR, il vous suffit donc de pointer "),Gt=r(Rs,"CODE",{});var Zo=l(Gt);wn=n(Zo,"data_files"),Zo.forEach(s),Cn=n(Rs," vers les fichiers compress\xE9s et vous \xEAtes pr\xEAt \xE0 partir\xA0!"),Rs.forEach(s),ys=c(e),tt=r(e,"P",{});var Ko=l(tt);An=n(Ko,"Maintenant que vous savez comment charger des fichiers locaux sur votre ordinateur portable ou de bureau, examinons le chargement de fichiers distants."),Ko.forEach(s),zs=c(e),se=r(e,"H2",{class:!0});var Fs=l(se);pe=r(Fs,"A",{id:!0,class:!0,href:!0});var Wo=l(pe);Ut=r(Wo,"SPAN",{});var Xo=l(Ut);g(Oe.$$.fragment,Xo),Xo.forEach(s),Wo.forEach(s),yn=c(Fs),Vt=r(Fs,"SPAN",{});var er=l(Vt);zn=n(er,"Charger un jeu de donn\xE9es distant"),er.forEach(s),Fs.forEach(s),ks=c(e),Q=r(e,"P",{});var Y=l(Q);kn=n(Y,"Si vous travaillez en tant que data scientist ou codeur dans une entreprise, il y a de fortes chances que les ensembles de donn\xE9es que vous souhaitez analyser soient stock\xE9s sur un serveur distant. Heureusement, charger des fichiers distants est aussi simple que de charger des fichiers locaux\xA0! Au lieu de fournir un chemin vers les fichiers locaux, nous pointons l\u2019argument "),Yt=r(Y,"CODE",{});var tr=l(Yt);On=n(tr,"data_files"),tr.forEach(s),Qn=n(Y," de "),Bt=r(Y,"CODE",{});var sr=l(Bt);Pn=n(sr,"load_dataset()"),sr.forEach(s),Tn=n(Y," vers une ou plusieurs URL o\xF9 les fichiers distants sont stock\xE9s. Par exemple, pour l\u2019ensemble de donn\xE9es SQuAD-it h\xE9berg\xE9 sur GitHub, nous pouvons simplement faire pointer "),Zt=r(Y,"CODE",{});var ar=l(Zt);Nn=n(ar,"data_files"),ar.forEach(s),Hn=n(Y," vers les URL "),Kt=r(Y,"EM",{});var nr=l(Kt);Jn=n(nr,"SQuAD_it-*.json.gz"),nr.forEach(s),Ln=n(Y," comme suit\xA0:"),Y.forEach(s),Os=c(e),g(Qe.$$.fragment,e),Qs=c(e),V=r(e,"P",{});var ct=l(V);Mn=n(ct,"Cela renvoie le m\xEAme objet "),Wt=r(ct,"CODE",{});var or=l(Wt);In=n(or,"DatasetDict"),or.forEach(s),Rn=n(ct," obtenu ci-dessus, mais nous \xE9vite de t\xE9l\xE9charger et de d\xE9compresser manuellement les fichiers "),Xt=r(ct,"EM",{});var rr=l(Xt);Fn=n(rr,"SQuAD_it-*.json.gz"),rr.forEach(s),Gn=n(ct,". Ceci conclut notre incursion dans les diff\xE9rentes fa\xE7ons de charger des ensembles de donn\xE9es qui ne sont pas h\xE9berg\xE9s sur le Hugging Face Hub. Maintenant que nous avons un ensemble de donn\xE9es avec lequel jouer, mettons-nous la main \xE0 la p\xE2te avec diverses techniques de gestion des donn\xE9es\xA0!"),ct.forEach(s),Ps=c(e),g(fe.$$.fragment,e),this.h()},h(){f(p,"name","hf:doc:metadata"),f(p,"content",JSON.stringify(gr)),f(j,"id","que-faire-si-mon-ensemble-de-donnes-nest-pas-sur-le-hub"),f(j,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(j,"href","#que-faire-si-mon-ensemble-de-donnes-nest-pas-sur-le-hub"),f(m,"class","relative group"),f(z,"href","https://huggingface.co/datasets"),f(z,"rel","nofollow"),f(ne,"id","travailler-avec-des-ensembles-de-donnes-locaux-et-distants"),f(ne,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(ne,"href","#travailler-avec-des-ensembles-de-donnes-locaux-et-distants"),f(B,"class","relative group"),f(He,"align","center"),f(Je,"align","center"),f(Le,"align","center"),f(Me,"align","center"),f(Ie,"align","center"),f(Re,"align","center"),f(Fe,"align","center"),f(Ge,"align","center"),f(Ue,"align","center"),f(Ve,"align","center"),f(Ye,"align","center"),f(Be,"align","center"),f(Ze,"align","center"),f(Ke,"align","center"),f(We,"align","center"),f(re,"id","charger-un-jeu-de-donnes-local"),f(re,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(re,"href","#charger-un-jeu-de-donnes-local"),f(te,"class","relative group"),f(be,"href","https://github.com/crux82/squad-it/"),f(be,"rel","nofollow"),f(pe,"id","charger-un-jeu-de-donnes-distant"),f(pe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),f(pe,"href","#charger-un-jeu-de-donnes-distant"),f(se,"class","relative group")},m(e,i){t(document.head,p),u(e,A,i),u(e,m,i),t(m,j),t(j,w),q(h,w,null),t(m,x),t(m,y),t(y,C),u(e,P,i),q(O,e,i),u(e,S,i),u(e,v,i),t(v,M),t(v,z),t(z,D),t(v,Te),u(e,_e,i),q(I,e,i),u(e,ge,i),u(e,B,i),t(B,ne),t(ne,pt),q(qe,pt,null),t(B,Us),t(B,ft),t(ft,Vs),u(e,ss,i),u(e,Ne,i),t(Ne,Ys),u(e,as,i),u(e,oe,i),t(oe,mt),t(mt,Z),t(Z,He),t(He,Bs),t(Z,Zs),t(Z,Je),t(Je,Ks),t(Z,Ws),t(Z,Le),t(Le,Xs),t(oe,ea),t(oe,L),t(L,K),t(K,Me),t(Me,ta),t(K,sa),t(K,Ie),t(Ie,ht),t(ht,aa),t(K,na),t(K,Re),t(Re,vt),t(vt,oa),t(L,ra),t(L,W),t(W,Fe),t(Fe,la),t(W,ia),t(W,Ge),t(Ge,_t),t(_t,ua),t(W,da),t(W,Ue),t(Ue,gt),t(gt,ca),t(L,pa),t(L,X),t(X,Ve),t(Ve,fa),t(X,ma),t(X,Ye),t(Ye,qt),t(qt,ha),t(X,va),t(X,Be),t(Be,$t),t($t,_a),t(L,ga),t(L,ee),t(ee,Ze),t(Ze,qa),t(ee,$a),t(ee,Ke),t(Ke,bt),t(bt,ba),t(ee,Ea),t(ee,We),t(We,Et),t(Et,ja),u(e,ns,i),u(e,R,i),t(R,Da),t(R,jt),t(jt,xa),t(R,Sa),t(R,Dt),t(Dt,wa),t(R,Ca),u(e,os,i),u(e,te,i),t(te,re),t(re,xt),q($e,xt,null),t(te,Aa),t(te,St),t(St,ya),u(e,rs,i),u(e,le,i),t(le,za),t(le,be),t(be,ka),t(le,Oa),u(e,ls,i),u(e,ie,i),t(ie,Qa),t(ie,wt),t(wt,Pa),t(ie,Ta),u(e,is,i),q(Ee,e,i),u(e,us,i),u(e,T,i),t(T,Na),t(T,Ct),t(Ct,Ha),t(T,Ja),t(T,At),t(At,La),t(T,Ma),t(T,yt),t(yt,Ia),t(T,Ra),u(e,ds,i),q(je,e,i),u(e,cs,i),q(De,e,i),u(e,ps,i),u(e,F,i),t(F,Fa),t(F,zt),t(zt,Ga),t(F,Ua),t(F,kt),t(kt,Va),t(F,Ya),u(e,fs,i),q(ue,e,i),u(e,ms,i),u(e,G,i),t(G,Ba),t(G,Ot),t(Ot,Za),t(G,Ka),t(G,Qt),t(Qt,Wa),t(G,Xa),u(e,hs,i),q(xe,e,i),u(e,vs,i),u(e,N,i),t(N,en),t(N,Pt),t(Pt,tn),t(N,sn),t(N,Tt),t(Tt,an),t(N,nn),t(N,Nt),t(Nt,on),t(N,rn),u(e,_s,i),q(Se,e,i),u(e,gs,i),q(we,e,i),u(e,qs,i),u(e,Xe,i),t(Xe,ln),u(e,$s,i),q(Ce,e,i),u(e,bs,i),q(Ae,e,i),u(e,Es,i),u(e,k,i),t(k,un),t(k,Ht),t(Ht,dn),t(k,cn),t(k,Jt),t(Jt,pn),t(k,fn),t(k,Lt),t(Lt,mn),t(k,hn),t(k,Mt),t(Mt,vn),t(k,_n),t(k,It),t(It,gn),t(k,qn),u(e,js,i),q(ye,e,i),u(e,Ds,i),q(ze,e,i),u(e,xs,i),u(e,et,i),t(et,$n),u(e,Ss,i),q(de,e,i),u(e,ws,i),u(e,U,i),t(U,bn),t(U,Rt),t(Rt,En),t(U,jn),t(U,Ft),t(Ft,Dn),t(U,xn),u(e,Cs,i),q(ke,e,i),u(e,As,i),u(e,ce,i),t(ce,Sn),t(ce,Gt),t(Gt,wn),t(ce,Cn),u(e,ys,i),u(e,tt,i),t(tt,An),u(e,zs,i),u(e,se,i),t(se,pe),t(pe,Ut),q(Oe,Ut,null),t(se,yn),t(se,Vt),t(Vt,zn),u(e,ks,i),u(e,Q,i),t(Q,kn),t(Q,Yt),t(Yt,On),t(Q,Qn),t(Q,Bt),t(Bt,Pn),t(Q,Tn),t(Q,Zt),t(Zt,Nn),t(Q,Hn),t(Q,Kt),t(Kt,Jn),t(Q,Ln),u(e,Os,i),q(Qe,e,i),u(e,Qs,i),u(e,V,i),t(V,Mn),t(V,Wt),t(Wt,In),t(V,Rn),t(V,Xt),t(Xt,Fn),t(V,Gn),u(e,Ps,i),q(fe,e,i),Ts=!0},p(e,[i]){const Pe={};i&2&&(Pe.$$scope={dirty:i,ctx:e}),ue.$set(Pe);const es={};i&2&&(es.$$scope={dirty:i,ctx:e}),de.$set(es);const ts={};i&2&&(ts.$$scope={dirty:i,ctx:e}),fe.$set(ts)},i(e){Ts||($(h.$$.fragment,e),$(O.$$.fragment,e),$(I.$$.fragment,e),$(qe.$$.fragment,e),$($e.$$.fragment,e),$(Ee.$$.fragment,e),$(je.$$.fragment,e),$(De.$$.fragment,e),$(ue.$$.fragment,e),$(xe.$$.fragment,e),$(Se.$$.fragment,e),$(we.$$.fragment,e),$(Ce.$$.fragment,e),$(Ae.$$.fragment,e),$(ye.$$.fragment,e),$(ze.$$.fragment,e),$(de.$$.fragment,e),$(ke.$$.fragment,e),$(Oe.$$.fragment,e),$(Qe.$$.fragment,e),$(fe.$$.fragment,e),Ts=!0)},o(e){b(h.$$.fragment,e),b(O.$$.fragment,e),b(I.$$.fragment,e),b(qe.$$.fragment,e),b($e.$$.fragment,e),b(Ee.$$.fragment,e),b(je.$$.fragment,e),b(De.$$.fragment,e),b(ue.$$.fragment,e),b(xe.$$.fragment,e),b(Se.$$.fragment,e),b(we.$$.fragment,e),b(Ce.$$.fragment,e),b(Ae.$$.fragment,e),b(ye.$$.fragment,e),b(ze.$$.fragment,e),b(de.$$.fragment,e),b(ke.$$.fragment,e),b(Oe.$$.fragment,e),b(Qe.$$.fragment,e),b(fe.$$.fragment,e),Ts=!1},d(e){s(p),e&&s(A),e&&s(m),E(h),e&&s(P),E(O,e),e&&s(S),e&&s(v),e&&s(_e),E(I,e),e&&s(ge),e&&s(B),E(qe),e&&s(ss),e&&s(Ne),e&&s(as),e&&s(oe),e&&s(ns),e&&s(R),e&&s(os),e&&s(te),E($e),e&&s(rs),e&&s(le),e&&s(ls),e&&s(ie),e&&s(is),E(Ee,e),e&&s(us),e&&s(T),e&&s(ds),E(je,e),e&&s(cs),E(De,e),e&&s(ps),e&&s(F),e&&s(fs),E(ue,e),e&&s(ms),e&&s(G),e&&s(hs),E(xe,e),e&&s(vs),e&&s(N),e&&s(_s),E(Se,e),e&&s(gs),E(we,e),e&&s(qs),e&&s(Xe),e&&s($s),E(Ce,e),e&&s(bs),E(Ae,e),e&&s(Es),e&&s(k),e&&s(js),E(ye,e),e&&s(Ds),E(ze,e),e&&s(xs),e&&s(et),e&&s(Ss),E(de,e),e&&s(ws),e&&s(U),e&&s(Cs),E(ke,e),e&&s(As),e&&s(ce),e&&s(ys),e&&s(tt),e&&s(zs),e&&s(se),E(Oe),e&&s(ks),e&&s(Q),e&&s(Os),E(Qe,e),e&&s(Qs),e&&s(V),e&&s(Ps),E(fe,e)}}}const gr={local:"que-faire-si-mon-ensemble-de-donnes-nest-pas-sur-le-hub",sections:[{local:"travailler-avec-des-ensembles-de-donnes-locaux-et-distants",title:"Travailler avec des ensembles de donn\xE9es locaux et distants"},{local:"charger-un-jeu-de-donnes-local",title:"Charger un jeu de donn\xE9es local"},{local:"charger-un-jeu-de-donnes-distant",title:"Charger un jeu de donn\xE9es distant"}],title:"Que faire si mon ensemble de donn\xE9es n'est pas sur le Hub\xA0?"};function qr(ae){return cr(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Dr extends lr{constructor(p){super();ir(this,p,qr,_r,ur,{})}}export{Dr as default,gr as metadata};
