import{S as cc,i as dc,s as mc,e as r,k as p,w as g,t as a,M as hc,c as o,d as t,m as c,a as i,x as _,h as n,b as m,N as Tt,F as s,g as u,y as b,q as v,o as x,B as j,v as fc}from"../../chunks/vendor-e6c5d93e.js";import{D as gc,T as nt,Y as _c}from"../../chunks/DocNotebookDropdown-b3e38740.js";import{I as Ot}from"../../chunks/IconCopyLink-7b8d27fe.js";import{C as w}from"../../chunks/CodeBlock-37867453.js";function bc(O){let d,q,h,$,E;return{c(){d=r("p"),q=a("\u270F\uFE0F "),h=r("strong"),$=a("Essayez-le\xA0!"),E=a(" Cliquez sur quelques-unes des URL dans la charge utile JSON ci-dessus pour avoir une id\xE9e du type d\u2019informations auxquelles chaque probl\xE8me GitHub est li\xE9.")},l(f){d=o(f,"P",{});var y=i(d);q=n(y,"\u270F\uFE0F "),h=o(y,"STRONG",{});var P=i(h);$=n(P,"Essayez-le\xA0!"),P.forEach(t),E=n(y," Cliquez sur quelques-unes des URL dans la charge utile JSON ci-dessus pour avoir une id\xE9e du type d\u2019informations auxquelles chaque probl\xE8me GitHub est li\xE9."),y.forEach(t)},m(f,y){u(f,d,y),s(d,q),s(d,h),s(h,$),s(d,E)},d(f){f&&t(d)}}}function vc(O){let d,q,h,$,E,f,y,P,k,D,H,C,A;return{c(){d=r("p"),q=a("\u26A0\uFE0F Ne partagez pas un notebook avec votre "),h=r("code"),$=a("GITHUB_TOKEN"),E=a(" coll\xE9 dedans. Nous vous recommandons de supprimer la derni\xE8re cellule une fois que vous l\u2019avez ex\xE9cut\xE9e pour \xE9viter de divulguer accidentellement ces informations. Mieux encore, stockez le jeton dans un fichier "),f=r("em"),y=a(".env"),P=a(" et utilisez la "),k=r("a"),D=a("biblioth\xE8que "),H=r("code"),C=a("python-dotenv"),A=a(" pour le charger automatiquement pour vous en tant que variable d\u2019environnement."),this.h()},l(S){d=o(S,"P",{});var z=i(d);q=n(z,"\u26A0\uFE0F Ne partagez pas un notebook avec votre "),h=o(z,"CODE",{});var Q=i(h);$=n(Q,"GITHUB_TOKEN"),Q.forEach(t),E=n(z," coll\xE9 dedans. Nous vous recommandons de supprimer la derni\xE8re cellule une fois que vous l\u2019avez ex\xE9cut\xE9e pour \xE9viter de divulguer accidentellement ces informations. Mieux encore, stockez le jeton dans un fichier "),f=o(z,"EM",{});var J=i(f);y=n(J,".env"),J.forEach(t),P=n(z," et utilisez la "),k=o(z,"A",{href:!0,rel:!0});var I=i(k);D=n(I,"biblioth\xE8que "),H=o(I,"CODE",{});var T=i(H);C=n(T,"python-dotenv"),T.forEach(t),I.forEach(t),A=n(z," pour le charger automatiquement pour vous en tant que variable d\u2019environnement."),z.forEach(t),this.h()},h(){m(k,"href","https://github.com/theskumar/python-dotenv"),m(k,"rel","nofollow")},m(S,z){u(S,d,z),s(d,q),s(d,h),s(h,$),s(d,E),s(d,f),s(f,y),s(d,P),s(d,k),s(k,D),s(k,H),s(H,C),s(d,A)},d(S){S&&t(d)}}}function xc(O){let d,q,h,$,E,f,y,P,k,D,H,C,A,S,z,Q,J,I,T,oe;return{c(){d=r("p"),q=a("\u270F\uFE0F "),h=r("strong"),$=a("Essayez-le !"),E=a(" Calculez le temps moyen n\xE9cessaire pour r\xE9soudre les probl\xE8mes dans \u{1F917} Datasets. Vous pouvez trouver la fonction "),f=r("code"),y=a("Dataset.filter()"),P=a(" utile pour filtrer les demandes d\u2019extraction et les probl\xE8mes ouverts, et vous pouvez utiliser la fonction "),k=r("code"),D=a("Dataset.set_format()"),H=a(" pour convertir l\u2019ensemble de donn\xE9es en un "),C=r("code"),A=a("DataFrame"),S=a(" afin que vous puissiez facilement manipuler les horodatages "),z=r("code"),Q=a("created_at"),J=a(" et "),I=r("code"),T=a("closed_at"),oe=a(". Pour les points bonus, calculez le temps moyen n\xE9cessaire pour fermer les demandes d\u2019extraction.")},l(ie){d=o(ie,"P",{});var N=i(d);q=n(N,"\u270F\uFE0F "),h=o(N,"STRONG",{});var Z=i(h);$=n(Z,"Essayez-le !"),Z.forEach(t),E=n(N," Calculez le temps moyen n\xE9cessaire pour r\xE9soudre les probl\xE8mes dans \u{1F917} Datasets. Vous pouvez trouver la fonction "),f=o(N,"CODE",{});var lt=i(f);y=n(lt,"Dataset.filter()"),lt.forEach(t),P=n(N," utile pour filtrer les demandes d\u2019extraction et les probl\xE8mes ouverts, et vous pouvez utiliser la fonction "),k=o(N,"CODE",{});var ge=i(k);D=n(ge,"Dataset.set_format()"),ge.forEach(t),H=n(N," pour convertir l\u2019ensemble de donn\xE9es en un "),C=o(N,"CODE",{});var rt=i(C);A=n(rt,"DataFrame"),rt.forEach(t),S=n(N," afin que vous puissiez facilement manipuler les horodatages "),z=o(N,"CODE",{});var ot=i(z);Q=n(ot,"created_at"),ot.forEach(t),J=n(N," et "),I=o(N,"CODE",{});var it=i(I);T=n(it,"closed_at"),it.forEach(t),oe=n(N,". Pour les points bonus, calculez le temps moyen n\xE9cessaire pour fermer les demandes d\u2019extraction."),N.forEach(t)},m(ie,N){u(ie,d,N),s(d,q),s(d,h),s(h,$),s(d,E),s(d,f),s(f,y),s(d,P),s(d,k),s(k,D),s(d,H),s(d,C),s(C,A),s(d,S),s(d,z),s(z,Q),s(d,J),s(d,I),s(I,T),s(d,oe)},d(ie){ie&&t(d)}}}function jc(O){let d,q,h,$,E,f,y,P;return{c(){d=r("p"),q=a("\u270F\uFE0F "),h=r("strong"),$=a("Essayez-le\xA0!"),E=a(" Utilisez votre nom d\u2019utilisateur et votre mot de passe Hugging Face Hub pour obtenir un jeton et cr\xE9er un r\xE9f\xE9rentiel vide appel\xE9 \u201Cgithub-issues\u201D. N\u2019oubliez pas de "),f=r("strong"),y=a("n\u2019enregistrez jamais vos informations d\u2019identification"),P=a(" dans Colab ou tout autre r\xE9f\xE9rentiel, car ces informations peuvent \xEAtre exploit\xE9es par de mauvais acteurs.")},l(k){d=o(k,"P",{});var D=i(d);q=n(D,"\u270F\uFE0F "),h=o(D,"STRONG",{});var H=i(h);$=n(H,"Essayez-le\xA0!"),H.forEach(t),E=n(D," Utilisez votre nom d\u2019utilisateur et votre mot de passe Hugging Face Hub pour obtenir un jeton et cr\xE9er un r\xE9f\xE9rentiel vide appel\xE9 \u201Cgithub-issues\u201D. N\u2019oubliez pas de "),f=o(D,"STRONG",{});var C=i(f);y=n(C,"n\u2019enregistrez jamais vos informations d\u2019identification"),C.forEach(t),P=n(D," dans Colab ou tout autre r\xE9f\xE9rentiel, car ces informations peuvent \xEAtre exploit\xE9es par de mauvais acteurs."),D.forEach(t)},m(k,D){u(k,d,D),s(d,q),s(d,h),s(h,$),s(d,E),s(d,f),s(f,y),s(d,P)},d(k){k&&t(d)}}}function $c(O){let d,q,h,$,E,f,y,P;return{c(){d=r("p"),q=a("\u{1F4A1} Vous pouvez \xE9galement t\xE9l\xE9charger un ensemble de donn\xE9es sur le Hugging Face Hub directement depuis le terminal en utilisant "),h=r("code"),$=a("huggingface-cli"),E=a(" et un peu de magie Git. Consultez le "),f=r("a"),y=a("\u{1F917}\xA0Datasets guide"),P=a(" pour savoir comment proc\xE9der."),this.h()},l(k){d=o(k,"P",{});var D=i(d);q=n(D,"\u{1F4A1} Vous pouvez \xE9galement t\xE9l\xE9charger un ensemble de donn\xE9es sur le Hugging Face Hub directement depuis le terminal en utilisant "),h=o(D,"CODE",{});var H=i(h);$=n(H,"huggingface-cli"),H.forEach(t),E=n(D," et un peu de magie Git. Consultez le "),f=o(D,"A",{href:!0,rel:!0});var C=i(f);y=n(C,"\u{1F917}\xA0Datasets guide"),C.forEach(t),P=n(D," pour savoir comment proc\xE9der."),D.forEach(t),this.h()},h(){m(f,"href","https://huggingface.co/docs/datasets/share.html#add-a-community-dataset"),m(f,"rel","nofollow")},m(k,D){u(k,d,D),s(d,q),s(d,h),s(h,$),s(d,E),s(d,f),s(f,y),s(d,P)},d(k){k&&t(d)}}}function qc(O){let d,q,h;return{c(){d=r("ul"),q=r("li"),h=a("Fichier README.md* pour votre ensemble de donn\xE9es de probl\xE8mes GitHub.")},l($){d=o($,"UL",{});var E=i(d);q=o(E,"LI",{});var f=i(q);h=n(f,"Fichier README.md* pour votre ensemble de donn\xE9es de probl\xE8mes GitHub."),f.forEach(t),E.forEach(t)},m($,E){u($,d,E),s(d,q),s(q,h)},d($){$&&t(d)}}}function Ec(O){let d,q,h,$,E;return{c(){d=r("p"),q=a("\u270F\uFE0F "),h=r("strong"),$=a("Essayez-le\xA0!"),E=a(" Suivez les \xE9tapes que nous avons suivies dans cette section pour cr\xE9er un ensemble de donn\xE9es de probl\xE8mes GitHub pour votre biblioth\xE8que open source pr\xE9f\xE9r\xE9e (choisissez autre chose que \u{1F917} Datasets, bien s\xFBr\xA0!). Pour obtenir des points bonus, ajustez un classificateur multilabel pour pr\xE9dire les balises pr\xE9sentes dans le champ \u201Clabels\u201D.")},l(f){d=o(f,"P",{});var y=i(d);q=n(y,"\u270F\uFE0F "),h=o(y,"STRONG",{});var P=i(h);$=n(P,"Essayez-le\xA0!"),P.forEach(t),E=n(y," Suivez les \xE9tapes que nous avons suivies dans cette section pour cr\xE9er un ensemble de donn\xE9es de probl\xE8mes GitHub pour votre biblioth\xE8que open source pr\xE9f\xE9r\xE9e (choisissez autre chose que \u{1F917} Datasets, bien s\xFBr\xA0!). Pour obtenir des points bonus, ajustez un classificateur multilabel pour pr\xE9dire les balises pr\xE9sentes dans le champ \u201Clabels\u201D."),y.forEach(t)},m(f,y){u(f,d,y),s(d,q),s(d,h),s(h,$),s(d,E)},d(f){f&&t(d)}}}function yc(O){let d,q,h,$,E,f,y,P,k,D,H,C,A,S,z,Q,J,I,T,oe,ie,N,Z,lt,ge,rt,ot,it,At,Yl,Va,ut,er,Ba,ue,_e,Gt,Qe,sr,It,tr,Qa,be,ar,Je,nr,lr,Ja,Ze,Ke,hu,Za,pt,rr,Ka,Xe,We,fu,Xa,L,or,Ye,ir,ur,Rt,pr,cr,es,dr,mr,Wa,ct,hr,Ya,ss,en,K,fr,Ut,gr,_r,St,br,vr,sn,ts,tn,ve,xr,Lt,jr,$r,an,as,nn,ns,ln,X,qr,ls,Er,yr,Mt,wr,kr,rn,rs,on,os,un,M,Dr,Ft,Pr,zr,Vt,Hr,Cr,Bt,Nr,Tr,pn,xe,cn,R,Or,is,Ar,Gr,Qt,Ir,Rr,us,Ur,Sr,Jt,Lr,Mr,dn,ps,mn,je,hn,dt,Fr,fn,cs,gn,W,Vr,Zt,Br,Qr,Kt,Jr,Zr,_n,ds,bn,$e,Kr,mt,Xr,Wr,vn,ms,xn,hs,jn,Y,Yr,fs,eo,so,gs,to,ao,$n,ht,_s,no,Xt,lo,ro,qn,ft,oo,En,pe,qe,Wt,bs,io,Yt,uo,yn,G,po,gt,co,mo,ea,ho,fo,sa,go,_o,ta,bo,vo,aa,xo,jo,wn,vs,kn,xs,Dn,F,$o,na,qo,Eo,la,yo,wo,ra,ko,Do,Pn,js,zn,Ee,Hn,_t,Po,Cn,bt,zo,Nn,ce,ye,oa,$s,Ho,ia,Co,Tn,vt,No,On,qs,Es,gu,An,we,To,ys,ua,Oo,Ao,Gn,ws,In,ks,Rn,V,Go,pa,Io,Ro,ca,Uo,So,da,Lo,Mo,Un,Ds,Sn,Ps,Ln,ee,Fo,ma,Vo,Bo,ha,Qo,Jo,Mn,zs,Fn,xt,Zo,Vn,Hs,Bn,de,ke,fa,Cs,Ko,ga,Xo,Qn,Ns,Jn,se,Wo,Ts,Yo,ei,_a,si,ti,Zn,Os,Kn,As,Xn,De,ai,ba,ni,li,Wn,Pe,ri,va,oi,ii,Yn,Gs,el,ze,ui,xa,pi,ci,sl,Is,tl,He,di,ja,mi,hi,al,Rs,nl,Us,ll,te,fi,$a,gi,_i,qa,bi,vi,rl,Ce,ol,Ne,xi,Ea,ji,$i,il,Ss,ul,U,qi,ya,Ei,yi,wa,wi,ki,ka,Di,Pi,Da,zi,Hi,pl,Ls,cl,Te,Ci,Pa,Ni,Ti,dl,Ms,ml,Oe,Oi,za,Ai,Gi,hl,Fs,Vs,_u,fl,ae,Ii,Ha,Ri,Ui,Ca,Si,Li,gl,Bs,_l,Qs,bl,Ae,Mi,Na,Fi,Vi,vl,Ge,xl,me,Ie,Ta,Js,Bi,Oa,Qi,jl,jt,Ji,$l,Re,Zi,Aa,Ki,Xi,ql,$t,he,Wi,Ue,Yi,Ga,eu,su,Ia,tu,au,El,Zs,Ks,bu,yl,Xs,Ws,nu,Ys,lu,ru,wl,ne,ou,Ra,iu,uu,Ua,pu,cu,kl,et,st,vu,Dl,Se,Pl,qt,du,zl,Le,Hl;return f=new Ot({}),H=new gc({props:{classNames:"absolute z-10 right-0 top-0",options:[{label:"Google Colab",value:"https://colab.research.google.com/github/huggingface/notebooks/blob/master/course/chapter5/section5.ipynb"},{label:"Aws Studio",value:"https://studiolab.sagemaker.aws/import/github/huggingface/notebooks/blob/master/course/chapter5/section5.ipynb"}]}}),Qe=new Ot({}),ss=new w({props:{code:"!pip install requests",highlighted:"!pip install requests"}}),ts=new w({props:{code:`import requests

url = "https://api.github.com/repos/huggingface/datasets/issues?page=1&per_page=1"
response = requests.get(url)`,highlighted:`<span class="hljs-keyword">import</span> requests

url = <span class="hljs-string">&quot;https://api.github.com/repos/huggingface/datasets/issues?page=1&amp;per_page=1&quot;</span>
response = requests.get(url)`}}),as=new w({props:{code:"response.status_code",highlighted:"response.status_code"}}),ns=new w({props:{code:"200",highlighted:'<span class="hljs-number">200</span>'}}),rs=new w({props:{code:"response.json()",highlighted:"response.json()"}}),os=new w({props:{code:`[{'url': 'https://api.github.com/repos/huggingface/datasets/issues/2792',
  'repository_url': 'https://api.github.com/repos/huggingface/datasets',
  'labels_url': 'https://api.github.com/repos/huggingface/datasets/issues/2792/labels{/name}',
  'comments_url': 'https://api.github.com/repos/huggingface/datasets/issues/2792/comments',
  'events_url': 'https://api.github.com/repos/huggingface/datasets/issues/2792/events',
  'html_url': 'https://github.com/huggingface/datasets/pull/2792',
  'id': 968650274,
  'node_id': 'MDExOlB1bGxSZXF1ZXN0NzEwNzUyMjc0',
  'number': 2792,
  'title': 'Update GooAQ',
  'user': {'login': 'bhavitvyamalik',
   'id': 19718818,
   'node_id': 'MDQ6VXNlcjE5NzE4ODE4',
   'avatar_url': 'https://avatars.githubusercontent.com/u/19718818?v=4',
   'gravatar_id': '',
   'url': 'https://api.github.com/users/bhavitvyamalik',
   'html_url': 'https://github.com/bhavitvyamalik',
   'followers_url': 'https://api.github.com/users/bhavitvyamalik/followers',
   'following_url': 'https://api.github.com/users/bhavitvyamalik/following{/other_user}',
   'gists_url': 'https://api.github.com/users/bhavitvyamalik/gists{/gist_id}',
   'starred_url': 'https://api.github.com/users/bhavitvyamalik/starred{/owner}{/repo}',
   'subscriptions_url': 'https://api.github.com/users/bhavitvyamalik/subscriptions',
   'organizations_url': 'https://api.github.com/users/bhavitvyamalik/orgs',
   'repos_url': 'https://api.github.com/users/bhavitvyamalik/repos',
   'events_url': 'https://api.github.com/users/bhavitvyamalik/events{/privacy}',
   'received_events_url': 'https://api.github.com/users/bhavitvyamalik/received_events',
   'type': 'User',
   'site_admin': False},
  'labels': [],
  'state': 'open',
  'locked': False,
  'assignee': None,
  'assignees': [],
  'milestone': None,
  'comments': 1,
  'created_at': '2021-08-12T11:40:18Z',
  'updated_at': '2021-08-12T12:31:17Z',
  'closed_at': None,
  'author_association': 'CONTRIBUTOR',
  'active_lock_reason': None,
  'pull_request': {'url': 'https://api.github.com/repos/huggingface/datasets/pulls/2792',
   'html_url': 'https://github.com/huggingface/datasets/pull/2792',
   'diff_url': 'https://github.com/huggingface/datasets/pull/2792.diff',
   'patch_url': 'https://github.com/huggingface/datasets/pull/2792.patch'},
  'body': '[GooAQ](https://github.com/allenai/gooaq) dataset was recently updated after splits were added for the same. This PR contains new updated GooAQ with train/val/test splits and updated README as well.',
  'performed_via_github_app': None}]`,highlighted:`[{<span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/issues/2792&#x27;</span>,
  <span class="hljs-string">&#x27;repository_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets&#x27;</span>,
  <span class="hljs-string">&#x27;labels_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/issues/2792/labels{/name}&#x27;</span>,
  <span class="hljs-string">&#x27;comments_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/issues/2792/comments&#x27;</span>,
  <span class="hljs-string">&#x27;events_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/issues/2792/events&#x27;</span>,
  <span class="hljs-string">&#x27;html_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/2792&#x27;</span>,
  <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-number">968650274</span>,
  <span class="hljs-string">&#x27;node_id&#x27;</span>: <span class="hljs-string">&#x27;MDExOlB1bGxSZXF1ZXN0NzEwNzUyMjc0&#x27;</span>,
  <span class="hljs-string">&#x27;number&#x27;</span>: <span class="hljs-number">2792</span>,
  <span class="hljs-string">&#x27;title&#x27;</span>: <span class="hljs-string">&#x27;Update GooAQ&#x27;</span>,
  <span class="hljs-string">&#x27;user&#x27;</span>: {<span class="hljs-string">&#x27;login&#x27;</span>: <span class="hljs-string">&#x27;bhavitvyamalik&#x27;</span>,
   <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-number">19718818</span>,
   <span class="hljs-string">&#x27;node_id&#x27;</span>: <span class="hljs-string">&#x27;MDQ6VXNlcjE5NzE4ODE4&#x27;</span>,
   <span class="hljs-string">&#x27;avatar_url&#x27;</span>: <span class="hljs-string">&#x27;https://avatars.githubusercontent.com/u/19718818?v=4&#x27;</span>,
   <span class="hljs-string">&#x27;gravatar_id&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,
   <span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik&#x27;</span>,
   <span class="hljs-string">&#x27;html_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/bhavitvyamalik&#x27;</span>,
   <span class="hljs-string">&#x27;followers_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/followers&#x27;</span>,
   <span class="hljs-string">&#x27;following_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/following{/other_user}&#x27;</span>,
   <span class="hljs-string">&#x27;gists_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/gists{/gist_id}&#x27;</span>,
   <span class="hljs-string">&#x27;starred_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/starred{/owner}{/repo}&#x27;</span>,
   <span class="hljs-string">&#x27;subscriptions_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/subscriptions&#x27;</span>,
   <span class="hljs-string">&#x27;organizations_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/orgs&#x27;</span>,
   <span class="hljs-string">&#x27;repos_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/repos&#x27;</span>,
   <span class="hljs-string">&#x27;events_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/events{/privacy}&#x27;</span>,
   <span class="hljs-string">&#x27;received_events_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/received_events&#x27;</span>,
   <span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;User&#x27;</span>,
   <span class="hljs-string">&#x27;site_admin&#x27;</span>: <span class="hljs-literal">False</span>},
  <span class="hljs-string">&#x27;labels&#x27;</span>: [],
  <span class="hljs-string">&#x27;state&#x27;</span>: <span class="hljs-string">&#x27;open&#x27;</span>,
  <span class="hljs-string">&#x27;locked&#x27;</span>: <span class="hljs-literal">False</span>,
  <span class="hljs-string">&#x27;assignee&#x27;</span>: <span class="hljs-literal">None</span>,
  <span class="hljs-string">&#x27;assignees&#x27;</span>: [],
  <span class="hljs-string">&#x27;milestone&#x27;</span>: <span class="hljs-literal">None</span>,
  <span class="hljs-string">&#x27;comments&#x27;</span>: <span class="hljs-number">1</span>,
  <span class="hljs-string">&#x27;created_at&#x27;</span>: <span class="hljs-string">&#x27;2021-08-12T11:40:18Z&#x27;</span>,
  <span class="hljs-string">&#x27;updated_at&#x27;</span>: <span class="hljs-string">&#x27;2021-08-12T12:31:17Z&#x27;</span>,
  <span class="hljs-string">&#x27;closed_at&#x27;</span>: <span class="hljs-literal">None</span>,
  <span class="hljs-string">&#x27;author_association&#x27;</span>: <span class="hljs-string">&#x27;CONTRIBUTOR&#x27;</span>,
  <span class="hljs-string">&#x27;active_lock_reason&#x27;</span>: <span class="hljs-literal">None</span>,
  <span class="hljs-string">&#x27;pull_request&#x27;</span>: {<span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/pulls/2792&#x27;</span>,
   <span class="hljs-string">&#x27;html_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/2792&#x27;</span>,
   <span class="hljs-string">&#x27;diff_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/2792.diff&#x27;</span>,
   <span class="hljs-string">&#x27;patch_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/2792.patch&#x27;</span>},
  <span class="hljs-string">&#x27;body&#x27;</span>: <span class="hljs-string">&#x27;[GooAQ](https://github.com/allenai/gooaq) dataset was recently updated after splits were added for the same. This PR contains new updated GooAQ with train/val/test splits and updated README as well.&#x27;</span>,
  <span class="hljs-string">&#x27;performed_via_github_app&#x27;</span>: <span class="hljs-literal">None</span>}]`}}),xe=new nt({props:{$$slots:{default:[bc]},$$scope:{ctx:O}}}),ps=new w({props:{code:`GITHUB_TOKEN = xxx  # Copy your GitHub token here
headers = {"Authorization": f"token {GITHUB_TOKEN}"}`,highlighted:`GITHUB_TOKEN = xxx  <span class="hljs-comment"># Copy your GitHub token here</span>
headers = {<span class="hljs-string">&quot;Authorization&quot;</span>: <span class="hljs-string">f&quot;token <span class="hljs-subst">{GITHUB_TOKEN}</span>&quot;</span>}`}}),je=new nt({props:{warning:!0,$$slots:{default:[vc]},$$scope:{ctx:O}}}),cs=new w({props:{code:`import time
import math
from pathlib import Path
import pandas as pd
from tqdm.notebook import tqdm


def fetch_issues(
    owner="huggingface",
    repo="datasets",
    num_issues=10_000,
    rate_limit=5_000,
    issues_path=Path("."),
):
    if not issues_path.is_dir():
        issues_path.mkdir(exist_ok=True)

    batch = []
    all_issues = []
    per_page = 100  # Number of issues to return per page
    num_pages = math.ceil(num_issues / per_page)
    base_url = "https://api.github.com/repos"

    for page in tqdm(range(num_pages)):
        # Query with state=all to get both open and closed issues
        query = f"issues?page={page}&per_page={per_page}&state=all"
        issues = requests.get(f"{base_url}/{owner}/{repo}/{query}", headers=headers)
        batch.extend(issues.json())

        if len(batch) > rate_limit and len(all_issues) < num_issues:
            all_issues.extend(batch)
            batch = []  # Flush batch for next time period
            print(f"Reached GitHub rate limit. Sleeping for one hour ...")
            time.sleep(60 * 60 + 1)

    all_issues.extend(batch)
    df = pd.DataFrame.from_records(all_issues)
    df.to_json(f"{issues_path}/{repo}-issues.jsonl", orient="records", lines=True)
    print(
        f"Downloaded all the issues for {repo}! Dataset stored at {issues_path}/{repo}-issues.jsonl"
    )`,highlighted:`<span class="hljs-keyword">import</span> time
<span class="hljs-keyword">import</span> math
<span class="hljs-keyword">from</span> pathlib <span class="hljs-keyword">import</span> Path
<span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd
<span class="hljs-keyword">from</span> tqdm.notebook <span class="hljs-keyword">import</span> tqdm


<span class="hljs-keyword">def</span> <span class="hljs-title function_">fetch_issues</span>(<span class="hljs-params">
    owner=<span class="hljs-string">&quot;huggingface&quot;</span>,
    repo=<span class="hljs-string">&quot;datasets&quot;</span>,
    num_issues=<span class="hljs-number">10_000</span>,
    rate_limit=<span class="hljs-number">5_000</span>,
    issues_path=Path(<span class="hljs-params"><span class="hljs-string">&quot;.&quot;</span></span>),
</span>):
    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> issues_path.is_dir():
        issues_path.mkdir(exist_ok=<span class="hljs-literal">True</span>)

    batch = []
    all_issues = []
    per_page = <span class="hljs-number">100</span>  <span class="hljs-comment"># Number of issues to return per page</span>
    num_pages = math.ceil(num_issues / per_page)
    base_url = <span class="hljs-string">&quot;https://api.github.com/repos&quot;</span>

    <span class="hljs-keyword">for</span> page <span class="hljs-keyword">in</span> tqdm(<span class="hljs-built_in">range</span>(num_pages)):
        <span class="hljs-comment"># Query with state=all to get both open and closed issues</span>
        query = <span class="hljs-string">f&quot;issues?page=<span class="hljs-subst">{page}</span>&amp;per_page=<span class="hljs-subst">{per_page}</span>&amp;state=all&quot;</span>
        issues = requests.get(<span class="hljs-string">f&quot;<span class="hljs-subst">{base_url}</span>/<span class="hljs-subst">{owner}</span>/<span class="hljs-subst">{repo}</span>/<span class="hljs-subst">{query}</span>&quot;</span>, headers=headers)
        batch.extend(issues.json())

        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(batch) &gt; rate_limit <span class="hljs-keyword">and</span> <span class="hljs-built_in">len</span>(all_issues) &lt; num_issues:
            all_issues.extend(batch)
            batch = []  <span class="hljs-comment"># Flush batch for next time period</span>
            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Reached GitHub rate limit. Sleeping for one hour ...&quot;</span>)
            time.sleep(<span class="hljs-number">60</span> * <span class="hljs-number">60</span> + <span class="hljs-number">1</span>)

    all_issues.extend(batch)
    df = pd.DataFrame.from_records(all_issues)
    df.to_json(<span class="hljs-string">f&quot;<span class="hljs-subst">{issues_path}</span>/<span class="hljs-subst">{repo}</span>-issues.jsonl&quot;</span>, orient=<span class="hljs-string">&quot;records&quot;</span>, lines=<span class="hljs-literal">True</span>)
    <span class="hljs-built_in">print</span>(
        <span class="hljs-string">f&quot;Downloaded all the issues for <span class="hljs-subst">{repo}</span>! Dataset stored at <span class="hljs-subst">{issues_path}</span>/<span class="hljs-subst">{repo}</span>-issues.jsonl&quot;</span>
    )`}}),ds=new w({props:{code:`# Depending on your internet connection, this can take several minutes to run...
fetch_issues()`,highlighted:`<span class="hljs-comment"># Depending on your internet connection, this can take several minutes to run...</span>
fetch_issues()`}}),ms=new w({props:{code:`issues_dataset = load_dataset("json", data_files="datasets-issues.jsonl", split="train")
issues_dataset`,highlighted:`issues_dataset = load_dataset(<span class="hljs-string">&quot;json&quot;</span>, data_files=<span class="hljs-string">&quot;datasets-issues.jsonl&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)
issues_dataset`}}),hs=new w({props:{code:`Dataset({
    features: ['url', 'repository_url', 'labels_url', 'comments_url', 'events_url', 'html_url', 'id', 'node_id', 'number', 'title', 'user', 'labels', 'state', 'locked', 'assignee', 'assignees', 'milestone', 'comments', 'created_at', 'updated_at', 'closed_at', 'author_association', 'active_lock_reason', 'pull_request', 'body', 'timeline_url', 'performed_via_github_app'],
    num_rows: 3019
})`,highlighted:`Dataset({
    features: [<span class="hljs-string">&#x27;url&#x27;</span>, <span class="hljs-string">&#x27;repository_url&#x27;</span>, <span class="hljs-string">&#x27;labels_url&#x27;</span>, <span class="hljs-string">&#x27;comments_url&#x27;</span>, <span class="hljs-string">&#x27;events_url&#x27;</span>, <span class="hljs-string">&#x27;html_url&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>, <span class="hljs-string">&#x27;node_id&#x27;</span>, <span class="hljs-string">&#x27;number&#x27;</span>, <span class="hljs-string">&#x27;title&#x27;</span>, <span class="hljs-string">&#x27;user&#x27;</span>, <span class="hljs-string">&#x27;labels&#x27;</span>, <span class="hljs-string">&#x27;state&#x27;</span>, <span class="hljs-string">&#x27;locked&#x27;</span>, <span class="hljs-string">&#x27;assignee&#x27;</span>, <span class="hljs-string">&#x27;assignees&#x27;</span>, <span class="hljs-string">&#x27;milestone&#x27;</span>, <span class="hljs-string">&#x27;comments&#x27;</span>, <span class="hljs-string">&#x27;created_at&#x27;</span>, <span class="hljs-string">&#x27;updated_at&#x27;</span>, <span class="hljs-string">&#x27;closed_at&#x27;</span>, <span class="hljs-string">&#x27;author_association&#x27;</span>, <span class="hljs-string">&#x27;active_lock_reason&#x27;</span>, <span class="hljs-string">&#x27;pull_request&#x27;</span>, <span class="hljs-string">&#x27;body&#x27;</span>, <span class="hljs-string">&#x27;timeline_url&#x27;</span>, <span class="hljs-string">&#x27;performed_via_github_app&#x27;</span>],
    num_rows: <span class="hljs-number">3019</span>
})`}}),bs=new Ot({}),vs=new w({props:{code:`sample = issues_dataset.shuffle(seed=666).select(range(3))

# Print out the URL and pull request entries
for url, pr in zip(sample["html_url"], sample["pull_request"]):
    print(f">> URL: {url}")
    print(f">> Pull request: {pr}\\n")`,highlighted:`sample = issues_dataset.shuffle(seed=<span class="hljs-number">666</span>).select(<span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>))

<span class="hljs-comment"># Print out the URL and pull request entries</span>
<span class="hljs-keyword">for</span> url, pr <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(sample[<span class="hljs-string">&quot;html_url&quot;</span>], sample[<span class="hljs-string">&quot;pull_request&quot;</span>]):
    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;&gt;&gt; URL: <span class="hljs-subst">{url}</span>&quot;</span>)
    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;&gt;&gt; Pull request: <span class="hljs-subst">{pr}</span>\\n&quot;</span>)`}}),xs=new w({props:{code:`>> URL: https://github.com/huggingface/datasets/pull/850
>> Pull request: {'url': 'https://api.github.com/repos/huggingface/datasets/pulls/850', 'html_url': 'https://github.com/huggingface/datasets/pull/850', 'diff_url': 'https://github.com/huggingface/datasets/pull/850.diff', 'patch_url': 'https://github.com/huggingface/datasets/pull/850.patch'}

>> URL: https://github.com/huggingface/datasets/issues/2773
>> Pull request: None

>> URL: https://github.com/huggingface/datasets/pull/783
>> Pull request: {'url': 'https://api.github.com/repos/huggingface/datasets/pulls/783', 'html_url': 'https://github.com/huggingface/datasets/pull/783', 'diff_url': 'https://github.com/huggingface/datasets/pull/783.diff', 'patch_url': 'https://github.com/huggingface/datasets/pull/783.patch'}`,highlighted:`&gt;&gt; URL: https://github.com/huggingface/datasets/pull/<span class="hljs-number">850</span>
&gt;&gt; Pull request: {<span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/pulls/850&#x27;</span>, <span class="hljs-string">&#x27;html_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/850&#x27;</span>, <span class="hljs-string">&#x27;diff_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/850.diff&#x27;</span>, <span class="hljs-string">&#x27;patch_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/850.patch&#x27;</span>}

&gt;&gt; URL: https://github.com/huggingface/datasets/issues/<span class="hljs-number">2773</span>
&gt;&gt; Pull request: <span class="hljs-literal">None</span>

&gt;&gt; URL: https://github.com/huggingface/datasets/pull/<span class="hljs-number">783</span>
&gt;&gt; Pull request: {<span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/pulls/783&#x27;</span>, <span class="hljs-string">&#x27;html_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/783&#x27;</span>, <span class="hljs-string">&#x27;diff_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/783.diff&#x27;</span>, <span class="hljs-string">&#x27;patch_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/783.patch&#x27;</span>}`}}),js=new w({props:{code:`issues_dataset = issues_dataset.map(
    lambda x: {"is_pull_request": False if x["pull_request"] is None else True}
)`,highlighted:`issues_dataset = issues_dataset.<span class="hljs-built_in">map</span>(
    <span class="hljs-keyword">lambda</span> x: {<span class="hljs-string">&quot;is_pull_request&quot;</span>: <span class="hljs-literal">False</span> <span class="hljs-keyword">if</span> x[<span class="hljs-string">&quot;pull_request&quot;</span>] <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> <span class="hljs-literal">True</span>}
)`}}),Ee=new nt({props:{$$slots:{default:[xc]},$$scope:{ctx:O}}}),$s=new Ot({}),ws=new w({props:{code:`issue_number = 2792
url = f"https://api.github.com/repos/huggingface/datasets/issues/{issue_number}/comments"
response = requests.get(url, headers=headers)
response.json()`,highlighted:`issue_number = <span class="hljs-number">2792</span>
url = <span class="hljs-string">f&quot;https://api.github.com/repos/huggingface/datasets/issues/<span class="hljs-subst">{issue_number}</span>/comments&quot;</span>
response = requests.get(url, headers=headers)
response.json()`}}),ks=new w({props:{code:`[{'url': 'https://api.github.com/repos/huggingface/datasets/issues/comments/897594128',
  'html_url': 'https://github.com/huggingface/datasets/pull/2792#issuecomment-897594128',
  'issue_url': 'https://api.github.com/repos/huggingface/datasets/issues/2792',
  'id': 897594128,
  'node_id': 'IC_kwDODunzps41gDMQ',
  'user': {'login': 'bhavitvyamalik',
   'id': 19718818,
   'node_id': 'MDQ6VXNlcjE5NzE4ODE4',
   'avatar_url': 'https://avatars.githubusercontent.com/u/19718818?v=4',
   'gravatar_id': '',
   'url': 'https://api.github.com/users/bhavitvyamalik',
   'html_url': 'https://github.com/bhavitvyamalik',
   'followers_url': 'https://api.github.com/users/bhavitvyamalik/followers',
   'following_url': 'https://api.github.com/users/bhavitvyamalik/following{/other_user}',
   'gists_url': 'https://api.github.com/users/bhavitvyamalik/gists{/gist_id}',
   'starred_url': 'https://api.github.com/users/bhavitvyamalik/starred{/owner}{/repo}',
   'subscriptions_url': 'https://api.github.com/users/bhavitvyamalik/subscriptions',
   'organizations_url': 'https://api.github.com/users/bhavitvyamalik/orgs',
   'repos_url': 'https://api.github.com/users/bhavitvyamalik/repos',
   'events_url': 'https://api.github.com/users/bhavitvyamalik/events{/privacy}',
   'received_events_url': 'https://api.github.com/users/bhavitvyamalik/received_events',
   'type': 'User',
   'site_admin': False},
  'created_at': '2021-08-12T12:21:52Z',
  'updated_at': '2021-08-12T12:31:17Z',
  'author_association': 'CONTRIBUTOR',
  'body': "@albertvillanova my tests are failing here:\\r\\n\`\`\`\\r\\ndataset_name = 'gooaq'\\r\\n\\r\\n    def test_load_dataset(self, dataset_name):\\r\\n        configs = self.dataset_tester.load_all_configs(dataset_name, is_local=True)[:1]\\r\\n>       self.dataset_tester.check_load_dataset(dataset_name, configs, is_local=True, use_local_dummy_data=True)\\r\\n\\r\\ntests/test_dataset_common.py:234: \\r\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\r\\ntests/test_dataset_common.py:187: in check_load_dataset\\r\\n    self.parent.assertTrue(len(dataset[split]) > 0)\\r\\nE   AssertionError: False is not true\\r\\n\`\`\`\\r\\nWhen I try loading dataset on local machine it works fine. Any suggestions on how can I avoid this error?",
  'performed_via_github_app': None}]`,highlighted:`[{<span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/issues/comments/897594128&#x27;</span>,
  <span class="hljs-string">&#x27;html_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/huggingface/datasets/pull/2792#issuecomment-897594128&#x27;</span>,
  <span class="hljs-string">&#x27;issue_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/repos/huggingface/datasets/issues/2792&#x27;</span>,
  <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-number">897594128</span>,
  <span class="hljs-string">&#x27;node_id&#x27;</span>: <span class="hljs-string">&#x27;IC_kwDODunzps41gDMQ&#x27;</span>,
  <span class="hljs-string">&#x27;user&#x27;</span>: {<span class="hljs-string">&#x27;login&#x27;</span>: <span class="hljs-string">&#x27;bhavitvyamalik&#x27;</span>,
   <span class="hljs-string">&#x27;id&#x27;</span>: <span class="hljs-number">19718818</span>,
   <span class="hljs-string">&#x27;node_id&#x27;</span>: <span class="hljs-string">&#x27;MDQ6VXNlcjE5NzE4ODE4&#x27;</span>,
   <span class="hljs-string">&#x27;avatar_url&#x27;</span>: <span class="hljs-string">&#x27;https://avatars.githubusercontent.com/u/19718818?v=4&#x27;</span>,
   <span class="hljs-string">&#x27;gravatar_id&#x27;</span>: <span class="hljs-string">&#x27;&#x27;</span>,
   <span class="hljs-string">&#x27;url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik&#x27;</span>,
   <span class="hljs-string">&#x27;html_url&#x27;</span>: <span class="hljs-string">&#x27;https://github.com/bhavitvyamalik&#x27;</span>,
   <span class="hljs-string">&#x27;followers_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/followers&#x27;</span>,
   <span class="hljs-string">&#x27;following_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/following{/other_user}&#x27;</span>,
   <span class="hljs-string">&#x27;gists_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/gists{/gist_id}&#x27;</span>,
   <span class="hljs-string">&#x27;starred_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/starred{/owner}{/repo}&#x27;</span>,
   <span class="hljs-string">&#x27;subscriptions_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/subscriptions&#x27;</span>,
   <span class="hljs-string">&#x27;organizations_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/orgs&#x27;</span>,
   <span class="hljs-string">&#x27;repos_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/repos&#x27;</span>,
   <span class="hljs-string">&#x27;events_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/events{/privacy}&#x27;</span>,
   <span class="hljs-string">&#x27;received_events_url&#x27;</span>: <span class="hljs-string">&#x27;https://api.github.com/users/bhavitvyamalik/received_events&#x27;</span>,
   <span class="hljs-string">&#x27;type&#x27;</span>: <span class="hljs-string">&#x27;User&#x27;</span>,
   <span class="hljs-string">&#x27;site_admin&#x27;</span>: <span class="hljs-literal">False</span>},
  <span class="hljs-string">&#x27;created_at&#x27;</span>: <span class="hljs-string">&#x27;2021-08-12T12:21:52Z&#x27;</span>,
  <span class="hljs-string">&#x27;updated_at&#x27;</span>: <span class="hljs-string">&#x27;2021-08-12T12:31:17Z&#x27;</span>,
  <span class="hljs-string">&#x27;author_association&#x27;</span>: <span class="hljs-string">&#x27;CONTRIBUTOR&#x27;</span>,
  <span class="hljs-string">&#x27;body&#x27;</span>: <span class="hljs-string">&quot;@albertvillanova my tests are failing here:\\r\\n\`\`\`\\r\\ndataset_name = &#x27;gooaq&#x27;\\r\\n\\r\\n    def test_load_dataset(self, dataset_name):\\r\\n        configs = self.dataset_tester.load_all_configs(dataset_name, is_local=True)[:1]\\r\\n&gt;       self.dataset_tester.check_load_dataset(dataset_name, configs, is_local=True, use_local_dummy_data=True)\\r\\n\\r\\ntests/test_dataset_common.py:234: \\r\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\r\\ntests/test_dataset_common.py:187: in check_load_dataset\\r\\n    self.parent.assertTrue(len(dataset[split]) &gt; 0)\\r\\nE   AssertionError: False is not true\\r\\n\`\`\`\\r\\nWhen I try loading dataset on local machine it works fine. Any suggestions on how can I avoid this error?&quot;</span>,
  <span class="hljs-string">&#x27;performed_via_github_app&#x27;</span>: <span class="hljs-literal">None</span>}]`}}),Ds=new w({props:{code:`def get_comments(issue_number):
    url = f"https://api.github.com/repos/huggingface/datasets/issues/{issue_number}/comments"
    response = requests.get(url, headers=headers)
    return [r["body"] for r in response.json()]


# Testez notre fonction fonctionne comme pr\xE9vu
get_comments(2792)`,highlighted:`<span class="hljs-keyword">def</span> <span class="hljs-title function_">get_comments</span>(<span class="hljs-params">issue_number</span>):
    url = <span class="hljs-string">f&quot;https://api.github.com/repos/huggingface/datasets/issues/<span class="hljs-subst">{issue_number}</span>/comments&quot;</span>
    response = requests.get(url, headers=headers)
    <span class="hljs-keyword">return</span> [r[<span class="hljs-string">&quot;body&quot;</span>] <span class="hljs-keyword">for</span> r <span class="hljs-keyword">in</span> response.json()]


<span class="hljs-comment"># Testez notre fonction fonctionne comme pr\xE9vu</span>
get_comments(<span class="hljs-number">2792</span>)`}}),Ps=new w({props:{code:"[\"@albertvillanova my tests are failing here:\\r\\n```\\r\\ndataset_name = 'gooaq'\\r\\n\\r\\n    def test_load_dataset(self, dataset_name):\\r\\n        configs = self.dataset_tester.load_all_configs(dataset_name, is_local=True)[:1]\\r\\n>       self.dataset_tester.check_load_dataset(dataset_name, configs, is_local=True, use_local_dummy_data=True)\\r\\n\\r\\ntests/test_dataset_common.py:234: \\r\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\r\\ntests/test_dataset_common.py:187: in check_load_dataset\\r\\n    self.parent.assertTrue(len(dataset[split]) > 0)\\r\\nE   AssertionError: False is not true\\r\\n```\\r\\nWhen I try loading dataset on local machine it works fine. Any suggestions on how can I avoid this error?\"]",highlighted:'[<span class="hljs-string">&quot;@albertvillanova my tests are failing here:\\r\\n```\\r\\ndataset_name = &#x27;gooaq&#x27;\\r\\n\\r\\n    def test_load_dataset(self, dataset_name):\\r\\n        configs = self.dataset_tester.load_all_configs(dataset_name, is_local=True)[:1]\\r\\n&gt;       self.dataset_tester.check_load_dataset(dataset_name, configs, is_local=True, use_local_dummy_data=True)\\r\\n\\r\\ntests/test_dataset_common.py:234: \\r\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \\r\\ntests/test_dataset_common.py:187: in check_load_dataset\\r\\n    self.parent.assertTrue(len(dataset[split]) &gt; 0)\\r\\nE   AssertionError: False is not true\\r\\n```\\r\\nWhen I try loading dataset on local machine it works fine. Any suggestions on how can I avoid this error?&quot;</span>]'}}),zs=new w({props:{code:`# Selon votre connexion internet, cela peut prendre quelques minutes...
issues_with_comments_dataset = issues_dataset.map(
    lambda x: {"comments": get_comments(x["number"])}
)`,highlighted:`<span class="hljs-comment"># Selon votre connexion internet, cela peut prendre quelques minutes...</span>
issues_with_comments_dataset = issues_dataset.<span class="hljs-built_in">map</span>(
    <span class="hljs-keyword">lambda</span> x: {<span class="hljs-string">&quot;comments&quot;</span>: get_comments(x[<span class="hljs-string">&quot;number&quot;</span>])}
)`}}),Hs=new w({props:{code:'issues_with_comments_dataset.to_json("issues-datasets-with-comments.jsonl")',highlighted:'issues_with_comments_dataset.to_json(<span class="hljs-string">&quot;issues-datasets-with-comments.jsonl&quot;</span>)'}}),Cs=new Ot({}),Ns=new _c({props:{id:"HaN6qCr_Afc"}}),Os=new w({props:{code:`from huggingface_hub import list_datasets

all_datasets = list_datasets()
print(f"Number of datasets on Hub: {len(all_datasets)}")
print(all_datasets[0])`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> list_datasets

all_datasets = list_datasets()
<span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Number of datasets on Hub: <span class="hljs-subst">{<span class="hljs-built_in">len</span>(all_datasets)}</span>&quot;</span>)
<span class="hljs-built_in">print</span>(all_datasets[<span class="hljs-number">0</span>])`}}),As=new w({props:{code:`Number of datasets on Hub: 1487
Dataset Name: acronym_identification, Tags: ['annotations_creators:expert-generated', 'language_creators:found', 'languages:en', 'licenses:mit', 'multilinguality:monolingual', 'size_categories:10K<n<100K', 'source_datasets:original', 'task_categories:structure-prediction', 'task_ids:structure-prediction-other-acronym-identification']`,highlighted:`Number of datasets on Hub: <span class="hljs-number">1487</span>
Dataset Name: acronym_identification, Tags: [<span class="hljs-string">&#x27;annotations_creators:expert-generated&#x27;</span>, <span class="hljs-string">&#x27;language_creators:found&#x27;</span>, <span class="hljs-string">&#x27;languages:en&#x27;</span>, <span class="hljs-string">&#x27;licenses:mit&#x27;</span>, <span class="hljs-string">&#x27;multilinguality:monolingual&#x27;</span>, <span class="hljs-string">&#x27;size_categories:10K&lt;n&lt;100K&#x27;</span>, <span class="hljs-string">&#x27;source_datasets:original&#x27;</span>, <span class="hljs-string">&#x27;task_categories:structure-prediction&#x27;</span>, <span class="hljs-string">&#x27;task_ids:structure-prediction-other-acronym-identification&#x27;</span>]`}}),Gs=new w({props:{code:`from huggingface_hub import notebook_login

notebook_login()`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> notebook_login

notebook_login()`}}),Is=new w({props:{code:"huggingface-cli login",highlighted:"huggingface-cli login"}}),Rs=new w({props:{code:`from huggingface_hub import create_repo

repo_url = create_repo(name="github-issues", repo_type="dataset")
repo_url`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> create_repo

repo_url = create_repo(name=<span class="hljs-string">&quot;github-issues&quot;</span>, repo_type=<span class="hljs-string">&quot;dataset&quot;</span>)
repo_url`}}),Us=new w({props:{code:"'https://huggingface.co/datasets/lewtun/github-issues'",highlighted:'<span class="hljs-string">&#x27;https://huggingface.co/datasets/lewtun/github-issues&#x27;</span>'}}),Ce=new nt({props:{$$slots:{default:[jc]},$$scope:{ctx:O}}}),Ss=new w({props:{code:`from huggingface_hub import Repository

repo = Repository(local_dir="github-issues", clone_from=repo_url)
!cp datasets-issues-with-comments.jsonl github-issues/`,highlighted:`<span class="hljs-keyword">from</span> huggingface_hub <span class="hljs-keyword">import</span> Repository

repo = Repository(local_dir=<span class="hljs-string">&quot;github-issues&quot;</span>, clone_from=repo_url)
!cp datasets-issues-<span class="hljs-keyword">with</span>-comments.jsonl github-issues/`}}),Ls=new w({props:{code:'repo.lfs_track("*.jsonl")',highlighted:'repo.lfs_track(<span class="hljs-string">&quot;*.jsonl&quot;</span>)'}}),Ms=new w({props:{code:"repo.push_to_hub()",highlighted:"repo.push_to_hub()"}}),Bs=new w({props:{code:`remote_dataset = load_dataset("lewtun/github-issues", split="train")
remote_dataset`,highlighted:`remote_dataset = load_dataset(<span class="hljs-string">&quot;lewtun/github-issues&quot;</span>, split=<span class="hljs-string">&quot;train&quot;</span>)
remote_dataset`}}),Qs=new w({props:{code:`Dataset({
    features: ['url', 'repository_url', 'labels_url', 'comments_url', 'events_url', 'html_url', 'id', 'node_id', 'number', 'title', 'user', 'labels', 'state', 'locked', 'assignee', 'assignees', 'milestone', 'comments', 'created_at', 'updated_at', 'closed_at', 'author_association', 'active_lock_reason', 'pull_request', 'body', 'performed_via_github_app', 'is_pull_request'],
    num_rows: 2855
})`,highlighted:`Dataset({
    features: [<span class="hljs-string">&#x27;url&#x27;</span>, <span class="hljs-string">&#x27;repository_url&#x27;</span>, <span class="hljs-string">&#x27;labels_url&#x27;</span>, <span class="hljs-string">&#x27;comments_url&#x27;</span>, <span class="hljs-string">&#x27;events_url&#x27;</span>, <span class="hljs-string">&#x27;html_url&#x27;</span>, <span class="hljs-string">&#x27;id&#x27;</span>, <span class="hljs-string">&#x27;node_id&#x27;</span>, <span class="hljs-string">&#x27;number&#x27;</span>, <span class="hljs-string">&#x27;title&#x27;</span>, <span class="hljs-string">&#x27;user&#x27;</span>, <span class="hljs-string">&#x27;labels&#x27;</span>, <span class="hljs-string">&#x27;state&#x27;</span>, <span class="hljs-string">&#x27;locked&#x27;</span>, <span class="hljs-string">&#x27;assignee&#x27;</span>, <span class="hljs-string">&#x27;assignees&#x27;</span>, <span class="hljs-string">&#x27;milestone&#x27;</span>, <span class="hljs-string">&#x27;comments&#x27;</span>, <span class="hljs-string">&#x27;created_at&#x27;</span>, <span class="hljs-string">&#x27;updated_at&#x27;</span>, <span class="hljs-string">&#x27;closed_at&#x27;</span>, <span class="hljs-string">&#x27;author_association&#x27;</span>, <span class="hljs-string">&#x27;active_lock_reason&#x27;</span>, <span class="hljs-string">&#x27;pull_request&#x27;</span>, <span class="hljs-string">&#x27;body&#x27;</span>, <span class="hljs-string">&#x27;performed_via_github_app&#x27;</span>, <span class="hljs-string">&#x27;is_pull_request&#x27;</span>],
    num_rows: <span class="hljs-number">2855</span>
})`}}),Ge=new nt({props:{$$slots:{default:[$c]},$$scope:{ctx:O}}}),Js=new Ot({}),Se=new nt({props:{$$slots:{default:[qc]},$$scope:{ctx:O}}}),Le=new nt({props:{$$slots:{default:[Ec]},$$scope:{ctx:O}}}),{c(){d=r("meta"),q=p(),h=r("h1"),$=r("a"),E=r("span"),g(f.$$.fragment),y=p(),P=r("span"),k=a("Cr\xE9ation de votre propre jeu de donn\xE9es"),D=p(),g(H.$$.fragment),C=p(),A=r("p"),S=a("Parfois, l\u2019ensemble de donn\xE9es dont vous avez besoin pour cr\xE9er une application NLP n\u2019existe pas, vous devrez donc le cr\xE9er vous-m\xEAme. Dans cette section, nous allons vous montrer comment cr\xE9er un corpus de "),z=r("a"),Q=a("probl\xE8mes GitHub"),J=a(", qui sont couramment utilis\xE9s pour suivre les bogues ou les fonctionnalit\xE9s dans les r\xE9f\xE9rentiels GitHub. Ce corpus pourrait \xEAtre utilis\xE9 \xE0 diverses fins, notamment :"),I=p(),T=r("ul"),oe=r("li"),ie=a("Explorer combien de temps il faut pour fermer les probl\xE8mes ouverts ou les demandes d\u2019extraction"),N=p(),Z=r("li"),lt=a("Entra\xEEnement d\u2019un "),ge=r("em"),rt=a("classificateur multilabel"),ot=a(" capable d\u2019\xE9tiqueter les probl\xE8mes avec des m\xE9tadonn\xE9es bas\xE9es sur la description du probl\xE8me (par exemple, \u201Cbogue\u201D, \u201Cam\xE9lioration\u201D ou \u201Cquestion\u201D)"),it=p(),At=r("li"),Yl=a("Cr\xE9ation d\u2019un moteur de recherche s\xE9mantique pour trouver les probl\xE8mes correspondant \xE0 la requ\xEAte d\u2019un utilisateur"),Va=p(),ut=r("p"),er=a("Ici, nous nous concentrerons sur la cr\xE9ation du corpus, et dans la section suivante, nous aborderons l\u2019application de recherche s\xE9mantique. Pour garder les choses m\xE9ta, nous utiliserons les probl\xE8mes GitHub associ\xE9s \xE0 un projet open source populaire\xA0: \u{1F917} Datasets\xA0! Voyons comment obtenir les donn\xE9es et explorons les informations contenues dans ces probl\xE8mes."),Ba=p(),ue=r("h2"),_e=r("a"),Gt=r("span"),g(Qe.$$.fragment),sr=p(),It=r("span"),tr=a("Obtenir les donn\xE9es"),Qa=p(),be=r("p"),ar=a("Vous pouvez trouver tous les probl\xE8mes dans \u{1F917} Datasets en acc\xE9dant \xE0 l\u2019[onglet Probl\xE8mes] du r\xE9f\xE9rentiel ("),Je=r("a"),nr=a("https://github.com/huggingface/datasets/issues"),lr=a("). Comme le montre la capture d\u2019\xE9cran suivante, au moment de la r\xE9daction, il y avait 331 probl\xE8mes ouverts et 668 probl\xE8mes ferm\xE9s."),Ja=p(),Ze=r("div"),Ke=r("img"),Za=p(),pt=r("p"),rr=a("Si vous cliquez sur l\u2019un de ces probl\xE8mes, vous constaterez qu\u2019il contient un titre, une description et un ensemble d\u2019\xE9tiquettes qui caract\xE9risent le probl\xE8me. Un exemple est montr\xE9 dans la capture d\u2019\xE9cran ci-dessous."),Ka=p(),Xe=r("div"),We=r("img"),Xa=p(),L=r("p"),or=a("Pour t\xE9l\xE9charger tous les probl\xE8mes du r\xE9f\xE9rentiel, nous utiliserons l\u2019"),Ye=r("a"),ir=a("API\xA0REST GitHub"),ur=a(" pour interroger le point de terminaison ["),Rt=r("code"),pr=a("Issues"),cr=a("]("),es=r("a"),dr=a("https://docs.github."),mr=a(" com/en/rest/reference/issues#list-repository-issues). Ce point de terminaison renvoie une liste d\u2019objets JSON, chaque objet contenant un grand nombre de champs qui incluent le titre et la description ainsi que des m\xE9tadonn\xE9es sur l\u2019\xE9tat du probl\xE8me, etc."),Wa=p(),ct=r("p"),hr=a("Un moyen pratique de t\xE9l\xE9charger les probl\xE8mes consiste \xE0 utiliser la biblioth\xE8que \u201Crequests\u201D, qui est la m\xE9thode standard pour effectuer des requ\xEAtes HTTP en Python. Vous pouvez installer la biblioth\xE8que en ex\xE9cutant\xA0:"),Ya=p(),g(ss.$$.fragment),en=p(),K=r("p"),fr=a("Une fois la biblioth\xE8que install\xE9e, vous pouvez envoyer des requ\xEAtes GET au point de terminaison "),Ut=r("code"),gr=a("Issues"),_r=a(" en appelant la fonction "),St=r("code"),br=a("requests.get()"),vr=a(". Par exemple, vous pouvez ex\xE9cuter la commande suivante pour r\xE9cup\xE9rer le premier num\xE9ro sur la premi\xE8re page\xA0:"),sn=p(),g(ts.$$.fragment),tn=p(),ve=r("p"),xr=a("L\u2019objet "),Lt=r("code"),jr=a("response"),$r=a(" contient de nombreuses informations utiles sur la requ\xEAte, y compris le code d\u2019\xE9tat HTTP\xA0:"),an=p(),g(as.$$.fragment),nn=p(),g(ns.$$.fragment),ln=p(),X=r("p"),qr=a("o\xF9 un statut \u201C200\u201D signifie que la requ\xEAte a r\xE9ussi (vous pouvez trouver une liste des codes de statut HTTP possibles "),ls=r("a"),Er=a("ici"),yr=a("). Ce qui nous int\xE9resse vraiment, cependant, c\u2019est le "),Mt=r("em"),wr=a("payload"),kr=a(", qui peut \xEAtre consult\xE9 dans diff\xE9rents formats comme les octets, les cha\xEEnes ou JSON. Comme nous savons que nos probl\xE8mes sont au format JSON, examinons la charge utile comme suit\xA0:"),rn=p(),g(rs.$$.fragment),on=p(),g(os.$$.fragment),un=p(),M=r("p"),Dr=a("Waouh, \xE7a fait beaucoup d\u2019informations ! Nous pouvons voir des champs utiles comme "),Ft=r("code"),Pr=a("title"),zr=a(", "),Vt=r("code"),Hr=a("body"),Cr=a(" et "),Bt=r("code"),Nr=a("number"),Tr=a(" qui d\xE9crivent le probl\xE8me, ainsi que des informations sur l\u2019utilisateur GitHub qui a ouvert le probl\xE8me."),pn=p(),g(xe.$$.fragment),cn=p(),R=r("p"),Or=a("Comme d\xE9crit dans la [documentation] GitHub("),is=r("a"),Ar=a("https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting"),Gr=a("), les requ\xEAtes non authentifi\xE9es sont limit\xE9es \xE0 60 requ\xEAtes par heure. Bien que vous puissiez augmenter le param\xE8tre de requ\xEAte "),Qt=r("code"),Ir=a("per_page"),Rr=a(" pour r\xE9duire le nombre de requ\xEAtes que vous effectuez, vous atteindrez toujours la limite de d\xE9bit sur tout r\xE9f\xE9rentiel contenant plus de quelques milliers de probl\xE8mes. Donc, \xE0 la place, vous devez suivre les [instructions] de GitHub ("),us=r("a"),Ur=a("https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token"),Sr=a(") sur la cr\xE9ation d\u2019un "),Jt=r("em"),Lr=a("jeton d\u2019acc\xE8s personnel"),Mr=a(" afin que vous peut augmenter la limite de d\xE9bit \xE0 5 000 requ\xEAtes par heure. Une fois que vous avez votre jeton, vous pouvez l\u2019inclure dans l\u2019en-t\xEAte de la requ\xEAte\xA0:"),dn=p(),g(ps.$$.fragment),mn=p(),g(je.$$.fragment),hn=p(),dt=r("p"),Fr=a("Maintenant que nous avons notre jeton d\u2019acc\xE8s, cr\xE9ons une fonction qui peut t\xE9l\xE9charger tous les probl\xE8mes depuis un r\xE9f\xE9rentiel GitHub\xA0:"),fn=p(),g(cs.$$.fragment),gn=p(),W=r("p"),Vr=a("D\xE9sormais, lorsque nous appellerons "),Zt=r("code"),Br=a("fetch_issues()"),Qr=a(", tous les probl\xE8mes seront t\xE9l\xE9charg\xE9s par lots pour \xE9viter de d\xE9passer la limite de GitHub sur le nombre de requ\xEAtes par heure\xA0; le r\xE9sultat sera stock\xE9 dans un fichier "),Kt=r("em"),Jr=a("repository_name-issues.jsonl"),Zr=a(", o\xF9 chaque ligne est un objet JSON qui repr\xE9sente un probl\xE8me. Utilisons cette fonction pour saisir tous les probl\xE8mes de \u{1F917} Datasets\xA0:"),_n=p(),g(ds.$$.fragment),bn=p(),$e=r("p"),Kr=a("Une fois les probl\xE8mes t\xE9l\xE9charg\xE9s, nous pouvons les charger localement en utilisant nos nouvelles comp\xE9tences de "),mt=r("a"),Xr=a("section 2"),Wr=a(" :"),vn=p(),g(ms.$$.fragment),xn=p(),g(hs.$$.fragment),jn=p(),Y=r("p"),Yr=a("G\xE9nial, nous avons cr\xE9\xE9 notre premier ensemble de donn\xE9es \xE0 partir de rien\xA0! Mais pourquoi y a-t-il plusieurs milliers de probl\xE8mes alors que l\u2019"),fs=r("a"),eo=a("onglet Probl\xE8mes"),so=a(" du \u{1F917} Datasets n\u2019affiche qu\u2019environ 1 000 probl\xE8mes au total \u{1F914}\xA0? Comme d\xE9crit dans la [documentation] GitHub("),gs=r("a"),to=a("https://docs.github.com/en/rest/reference/issues#list-issues-assigned-to-the-authenticated-user"),ao=a("), c\u2019est parce que nous avons t\xE9l\xE9charg\xE9 tous les les demandes d\u2019extraction \xE9galement\xA0:"),$n=p(),ht=r("blockquote"),_s=r("p"),no=a("L\u2019API REST v3 de GitHub consid\xE8re chaque demande d\u2019extraction comme un probl\xE8me, mais chaque probl\xE8me n\u2019est pas une demande d\u2019extraction. Pour cette raison, les points de terminaison \u201CProbl\xE8mes\u201D peuvent renvoyer \xE0 la fois des probl\xE8mes et des demandes d\u2019extraction dans la r\xE9ponse. Vous pouvez identifier les demandes d\u2019extraction par la cl\xE9 "),Xt=r("code"),lo=a("pull_request"),ro=a(". Sachez que l\u2019identifiant d\u2019une demande d\u2019extraction renvoy\xE9e par les points de terminaison \u201CProbl\xE8mes\u201D sera un identifiant de probl\xE8me."),qn=p(),ft=r("p"),oo=a("\xC9tant donn\xE9 que le contenu des probl\xE8mes et des demandes d\u2019extraction est assez diff\xE9rent, proc\xE9dons \xE0 un pr\xE9traitement mineur pour nous permettre de les distinguer."),En=p(),pe=r("h2"),qe=r("a"),Wt=r("span"),g(bs.$$.fragment),io=p(),Yt=r("span"),uo=a("Nettoyer les donn\xE9es"),yn=p(),G=r("p"),po=a("L\u2019extrait ci-dessus de la documentation de GitHub nous indique que la colonne \u201Cpull_request\u201D peut \xEAtre utilis\xE9e pour diff\xE9rencier les probl\xE8mes et les demandes d\u2019extraction. Regardons un \xE9chantillon al\xE9atoire pour voir quelle est la diff\xE9rence. Comme nous l\u2019avons fait dans "),gt=r("a"),co=a("section 3"),mo=a(", nous allons encha\xEEner "),ea=r("code"),ho=a("Dataset.shuffle()"),fo=a(" et "),sa=r("code"),go=a("Dataset.select()"),_o=a(" pour cr\xE9er un \xE9chantillon al\xE9atoire, puis compresser "),ta=r("code"),bo=a("html_url"),vo=a(" et "),aa=r("code"),xo=a("pull_request"),jo=a(" afin que nous puissions comparer les diff\xE9rentes URL\xA0:"),wn=p(),g(vs.$$.fragment),kn=p(),g(xs.$$.fragment),Dn=p(),F=r("p"),$o=a("Ici, nous pouvons voir que chaque demande d\u2019extraction est associ\xE9e \xE0 diverses URL, tandis que les probl\xE8mes ordinaires ont une entr\xE9e \u201CAucun\u201D. Nous pouvons utiliser cette distinction pour cr\xE9er une nouvelle colonne "),na=r("code"),qo=a("is_pull_request"),Eo=a(" qui v\xE9rifie si le champ "),la=r("code"),yo=a("pull_request"),wo=a(" est "),ra=r("code"),ko=a("None"),Do=a(" ou non\xA0:"),Pn=p(),g(js.$$.fragment),zn=p(),g(Ee.$$.fragment),Hn=p(),_t=r("p"),Po=a("Bien que nous puissions continuer \xE0 nettoyer davantage l\u2019ensemble de donn\xE9es en supprimant ou en renommant certaines colonnes, il est g\xE9n\xE9ralement recommand\xE9 de conserver l\u2019ensemble de donn\xE9es aussi \u201Cbrut\u201D que possible \xE0 ce stade afin qu\u2019il puisse \xEAtre facilement utilis\xE9 dans plusieurs applications."),Cn=p(),bt=r("p"),zo=a("Avant de pousser notre ensemble de donn\xE9es vers le Hugging Face Hub, traitons d\u2019une chose qui lui manque : les commentaires associ\xE9s \xE0 chaque probl\xE8me et pull request. Nous les ajouterons ensuite avec - vous l\u2019avez devin\xE9 - l\u2019API GitHub REST\xA0!"),Nn=p(),ce=r("h2"),ye=r("a"),oa=r("span"),g($s.$$.fragment),Ho=p(),ia=r("span"),Co=a("Enrichir le jeu de donn\xE9es"),Tn=p(),vt=r("p"),No=a("Comme le montre la capture d\u2019\xE9cran suivante, les commentaires associ\xE9s \xE0 un probl\xE8me ou \xE0 une demande d\u2019extraction fournissent une riche source d\u2019informations, en particulier si nous souhaitons cr\xE9er un moteur de recherche pour r\xE9pondre aux requ\xEAtes des utilisateurs sur la biblioth\xE8que."),On=p(),qs=r("div"),Es=r("img"),An=p(),we=r("p"),To=a("L\u2019API REST GitHub fournit un point de terminaison "),ys=r("a"),ua=r("code"),Oo=a("Comments"),Ao=a(" qui renvoie tous les commentaires associ\xE9s \xE0 un num\xE9ro de probl\xE8me. Testons le point de terminaison pour voir ce qu\u2019il renvoie\xA0:"),Gn=p(),g(ws.$$.fragment),In=p(),g(ks.$$.fragment),Rn=p(),V=r("p"),Go=a("Nous pouvons voir que le commentaire est stock\xE9 dans le champ "),pa=r("code"),Io=a("body"),Ro=a(", \xE9crivons donc une fonction simple qui renvoie tous les commentaires associ\xE9s \xE0 un probl\xE8me en s\xE9lectionnant le contenu "),ca=r("code"),Uo=a("body"),So=a(" pour chaque \xE9l\xE9ment dans "),da=r("code"),Lo=a("response.json()"),Mo=a("\xA0:"),Un=p(),g(Ds.$$.fragment),Sn=p(),g(Ps.$$.fragment),Ln=p(),ee=r("p"),Fo=a("Cela a l\u2019air bien, alors utilisons "),ma=r("code"),Vo=a("Dataset.map()"),Bo=a(" pour ajouter une nouvelle colonne "),ha=r("code"),Qo=a("commentaires"),Jo=a(" \xE0 chaque probl\xE8me de notre ensemble de donn\xE9es\xA0:"),Mn=p(),g(zs.$$.fragment),Fn=p(),xt=r("p"),Zo=a("La derni\xE8re \xE9tape consiste \xE0 enregistrer l\u2019ensemble de donn\xE9es augment\xE9es avec nos donn\xE9es brutes afin que nous puissions les pousser toutes les deux vers le Hub\xA0:"),Vn=p(),g(Hs.$$.fragment),Bn=p(),de=r("h2"),ke=r("a"),fa=r("span"),g(Cs.$$.fragment),Ko=p(),ga=r("span"),Xo=a("T\xE9l\xE9chargement de l'ensemble de donn\xE9es sur le Hugging Face Hub"),Qn=p(),g(Ns.$$.fragment),Jn=p(),se=r("p"),Wo=a("Maintenant que nous avons notre jeu de donn\xE9es augment\xE9, il est temps de le pousser vers le Hub afin que nous puissions le partager avec la communaut\xE9\xA0! Pour t\xE9l\xE9charger l\u2019ensemble de donn\xE9es, nous utiliserons la "),Ts=r("a"),Yo=a("biblioth\xE8que Hub\xA0\u{1F917}"),ei=a(", qui nous permet d\u2019interagir avec le hub Hugging Face via une API Python. \u{1F917} Hub est pr\xE9install\xE9 avec \u{1F917} Transformers, nous pouvons donc l\u2019utiliser directement. Par exemple, nous pouvons utiliser la fonction "),_a=r("code"),si=a("list_datasets()"),ti=a(" pour obtenir des informations sur tous les ensembles de donn\xE9es publics actuellement h\xE9berg\xE9s sur le Hub\xA0:"),Zn=p(),g(Os.$$.fragment),Kn=p(),g(As.$$.fragment),Xn=p(),De=r("p"),ai=a("Nous pouvons voir qu\u2019il y a actuellement pr\xE8s de 1 500 ensembles de donn\xE9es sur le Hub, et la fonction "),ba=r("code"),ni=a("list_datasets()"),li=a(" fournit \xE9galement des m\xE9tadonn\xE9es de base sur chaque r\xE9f\xE9rentiel d\u2019ensembles de donn\xE9es."),Wn=p(),Pe=r("p"),ri=a("Pour nos besoins, la premi\xE8re chose que nous devons faire est de cr\xE9er un nouveau r\xE9f\xE9rentiel d\u2019ensembles de donn\xE9es sur le Hub. Pour ce faire, nous avons besoin d\u2019un jeton d\u2019authentification, qui peut \xEAtre obtenu en se connectant d\u2019abord \xE0 Hugging Face Hub avec la fonction "),va=r("code"),oi=a("notebook_login()"),ii=a("\xA0:"),Yn=p(),g(Gs.$$.fragment),el=p(),ze=r("p"),ui=a("Cela cr\xE9era un widget dans lequel vous pourrez entrer votre nom d\u2019utilisateur et votre mot de passe, et un jeton API sera enregistr\xE9 dans "),xa=r("em"),pi=a("~/.huggingface/token"),ci=a(". Si vous ex\xE9cutez le code dans un terminal, vous pouvez vous connecter via la CLI \xE0 la place\xA0:"),sl=p(),g(Is.$$.fragment),tl=p(),He=r("p"),di=a("Une fois que nous avons fait cela, nous pouvons cr\xE9er un nouveau r\xE9f\xE9rentiel d\u2019ensembles de donn\xE9es avec la fonction "),ja=r("code"),mi=a("create_repo()"),hi=a("\xA0:"),al=p(),g(Rs.$$.fragment),nl=p(),g(Us.$$.fragment),ll=p(),te=r("p"),fi=a("Dans cet exemple, nous avons cr\xE9\xE9 un r\xE9f\xE9rentiel d\u2019ensemble de donn\xE9es vide appel\xE9 "),$a=r("code"),gi=a("github-issues"),_i=a(" sous le nom d\u2019utilisateur "),qa=r("code"),bi=a("lewtun"),vi=a(" (le nom d\u2019utilisateur doit \xEAtre votre nom d\u2019utilisateur Hub lorsque vous ex\xE9cutez ce code\xA0!)."),rl=p(),g(Ce.$$.fragment),ol=p(),Ne=r("p"),xi=a("Ensuite, clonons le r\xE9f\xE9rentiel du Hub sur notre machine locale et copions-y notre fichier d\u2019ensemble de donn\xE9es. \u{1F917} Hub fournit une classe "),Ea=r("code"),ji=a("Repository"),$i=a(" pratique qui encapsule de nombreuses commandes Git courantes, donc pour cloner le r\xE9f\xE9rentiel distant, nous devons simplement fournir l\u2019URL et le chemin local vers lesquels nous souhaitons cloner\xA0:"),il=p(),g(Ss.$$.fragment),ul=p(),U=r("p"),qi=a("Par d\xE9faut, diverses extensions de fichiers (telles que "),ya=r("em"),Ei=a(".bin"),yi=a(", "),wa=r("em"),wi=a(".gz"),ki=a(" et "),ka=r("em"),Di=a(".zip"),Pi=a(") sont suivies avec Git LFS afin que les fichiers volumineux puissent \xEAtre versionn\xE9s dans le m\xEAme workflow Git. Vous pouvez trouver une liste des extensions de fichiers suivis dans le fichier "),Da=r("em"),zi=a(".gitattributes"),Hi=a(" du r\xE9f\xE9rentiel. Pour inclure le format JSON Lines dans la liste, nous pouvons ex\xE9cuter la commande suivante\xA0:"),pl=p(),g(Ls.$$.fragment),cl=p(),Te=r("p"),Ci=a("Ensuite, nous pouvons utiliser "),Pa=r("code"),Ni=a("Repository.push_to_hub()"),Ti=a(" pour pousser l\u2019ensemble de donn\xE9es vers le Hub\xA0:"),dl=p(),g(Ms.$$.fragment),ml=p(),Oe=r("p"),Oi=a("Si nous naviguons vers l\u2019URL contenue dans "),za=r("code"),Ai=a("repo_url"),Gi=a(", nous devrions maintenant voir que notre fichier de jeu de donn\xE9es a \xE9t\xE9 t\xE9l\xE9charg\xE9."),hl=p(),Fs=r("div"),Vs=r("img"),fl=p(),ae=r("p"),Ii=a("\xC0 partir de l\xE0, n\u2019importe qui peut t\xE9l\xE9charger l\u2019ensemble de donn\xE9es en fournissant simplement "),Ha=r("code"),Ri=a("load_dataset()"),Ui=a(" avec l\u2019ID du r\xE9f\xE9rentiel comme argument "),Ca=r("code"),Si=a("path"),Li=a("\xA0:"),gl=p(),g(Bs.$$.fragment),_l=p(),g(Qs.$$.fragment),bl=p(),Ae=r("p"),Mi=a("Cool, nous avons pouss\xE9 notre jeu de donn\xE9es vers le Hub et il est disponible pour que d\u2019autres puissent l\u2019utiliser\xA0! Il ne reste plus qu\u2019une chose importante \xE0 faire\xA0: ajouter une "),Na=r("em"),Fi=a("carte de jeu de donn\xE9es"),Vi=a(" qui explique comment le corpus a \xE9t\xE9 cr\xE9\xE9 et fournit d\u2019autres informations utiles \xE0 la communaut\xE9."),vl=p(),g(Ge.$$.fragment),xl=p(),me=r("h2"),Ie=r("a"),Ta=r("span"),g(Js.$$.fragment),Bi=p(),Oa=r("span"),Qi=a("Cr\xE9ation d'une fiche de jeu de donn\xE9es"),jl=p(),jt=r("p"),Ji=a("Des ensembles de donn\xE9es bien document\xE9s sont plus susceptibles d\u2019\xEAtre utiles aux autres (y compris \xE0 votre futur moi\xA0!), car ils fournissent le contexte permettant aux utilisateurs de d\xE9cider si l\u2019ensemble de donn\xE9es est pertinent pour leur t\xE2che et d\u2019\xE9valuer les biais potentiels ou les risques associ\xE9s \xE0 l\u2019utilisation l\u2019ensemble de donn\xE9es."),$l=p(),Re=r("p"),Zi=a("Sur le Hugging Face Hub, ces informations sont stock\xE9es dans le fichier "),Aa=r("em"),Ki=a("README.md"),Xi=a(" de chaque r\xE9f\xE9rentiel d\u2019ensembles de donn\xE9es. Il y a deux \xE9tapes principales que vous devez suivre avant de cr\xE9er ce fichier\xA0:"),ql=p(),$t=r("ol"),he=r("li"),Wi=a("Utilisez l\u2019"),Ue=r("a"),Yi=a("application "),Ga=r("code"),eu=a("datasets-tagging"),su=a(" pour cr\xE9er des balises de m\xE9tadonn\xE9es au format YAML. Ces balises sont utilis\xE9es pour une vari\xE9t\xE9 de fonctionnalit\xE9s de recherche sur le Hugging Face Hub et garantissent que votre ensemble de donn\xE9es peut \xEAtre facilement trouv\xE9 par les membres de la communaut\xE9. Puisque nous avons cr\xE9\xE9 un ensemble de donn\xE9es personnalis\xE9 ici, vous devrez cloner le r\xE9f\xE9rentiel "),Ia=r("code"),tu=a("datasets-tagging"),au=a(" et ex\xE9cuter l\u2019application localement. Voici \xE0 quoi ressemble l\u2019interface\xA0:"),El=p(),Zs=r("div"),Ks=r("img"),yl=p(),Xs=r("ol"),Ws=r("li"),nu=a("Lisez le "),Ys=r("a"),lu=a("\u{1F917} Datasets guide"),ru=a(" sur la cr\xE9ation de cartes d\u2019ensemble de donn\xE9es informatives et utilisez-le comme mod\xE8le."),wl=p(),ne=r("p"),ou=a("Vous pouvez cr\xE9er le fichier "),Ra=r("em"),iu=a("README.md"),uu=a(" directement sur le Hub, et vous pouvez trouver un mod\xE8le de carte d\u2019ensemble de donn\xE9es dans le r\xE9f\xE9rentiel d\u2019ensemble de donn\xE9es "),Ua=r("code"),pu=a("lewtun/github-issues"),cu=a(". Une capture d\u2019\xE9cran de la carte de jeu de donn\xE9es remplie est illustr\xE9e ci-dessous."),kl=p(),et=r("div"),st=r("img"),Dl=p(),g(Se.$$.fragment),Pl=p(),qt=r("p"),du=a("C\u2019est \xE7a! Nous avons vu dans cette section que la cr\xE9ation d\u2019un bon ensemble de donn\xE9es peut \xEAtre assez complexe, mais heureusement, le t\xE9l\xE9charger et le partager avec la communaut\xE9 ne l\u2019est pas. Dans la section suivante, nous utiliserons notre nouvel ensemble de donn\xE9es pour cr\xE9er un moteur de recherche s\xE9mantique avec \u{1F917} Deatasets qui peut faire correspondre les questions aux probl\xE8mes et commentaires les plus pertinents."),zl=p(),g(Le.$$.fragment),this.h()},l(e){const l=hc('[data-svelte="svelte-1phssyn"]',document.head);d=o(l,"META",{name:!0,content:!0}),l.forEach(t),q=c(e),h=o(e,"H1",{class:!0});var tt=i(h);$=o(tt,"A",{id:!0,class:!0,href:!0});var Sa=i($);E=o(Sa,"SPAN",{});var La=i(E);_(f.$$.fragment,La),La.forEach(t),Sa.forEach(t),y=c(tt),P=o(tt,"SPAN",{});var Ma=i(P);k=n(Ma,"Cr\xE9ation de votre propre jeu de donn\xE9es"),Ma.forEach(t),tt.forEach(t),D=c(e),_(H.$$.fragment,e),C=c(e),A=o(e,"P",{});var at=i(A);S=n(at,"Parfois, l\u2019ensemble de donn\xE9es dont vous avez besoin pour cr\xE9er une application NLP n\u2019existe pas, vous devrez donc le cr\xE9er vous-m\xEAme. Dans cette section, nous allons vous montrer comment cr\xE9er un corpus de "),z=o(at,"A",{href:!0,rel:!0});var Fa=i(z);Q=n(Fa,"probl\xE8mes GitHub"),Fa.forEach(t),J=n(at,", qui sont couramment utilis\xE9s pour suivre les bogues ou les fonctionnalit\xE9s dans les r\xE9f\xE9rentiels GitHub. Ce corpus pourrait \xEAtre utilis\xE9 \xE0 diverses fins, notamment :"),at.forEach(t),I=c(e),T=o(e,"UL",{});var fe=i(T);oe=o(fe,"LI",{});var xu=i(oe);ie=n(xu,"Explorer combien de temps il faut pour fermer les probl\xE8mes ouverts ou les demandes d\u2019extraction"),xu.forEach(t),N=c(fe),Z=o(fe,"LI",{});var Cl=i(Z);lt=n(Cl,"Entra\xEEnement d\u2019un "),ge=o(Cl,"EM",{});var ju=i(ge);rt=n(ju,"classificateur multilabel"),ju.forEach(t),ot=n(Cl," capable d\u2019\xE9tiqueter les probl\xE8mes avec des m\xE9tadonn\xE9es bas\xE9es sur la description du probl\xE8me (par exemple, \u201Cbogue\u201D, \u201Cam\xE9lioration\u201D ou \u201Cquestion\u201D)"),Cl.forEach(t),it=c(fe),At=o(fe,"LI",{});var $u=i(At);Yl=n($u,"Cr\xE9ation d\u2019un moteur de recherche s\xE9mantique pour trouver les probl\xE8mes correspondant \xE0 la requ\xEAte d\u2019un utilisateur"),$u.forEach(t),fe.forEach(t),Va=c(e),ut=o(e,"P",{});var qu=i(ut);er=n(qu,"Ici, nous nous concentrerons sur la cr\xE9ation du corpus, et dans la section suivante, nous aborderons l\u2019application de recherche s\xE9mantique. Pour garder les choses m\xE9ta, nous utiliserons les probl\xE8mes GitHub associ\xE9s \xE0 un projet open source populaire\xA0: \u{1F917} Datasets\xA0! Voyons comment obtenir les donn\xE9es et explorons les informations contenues dans ces probl\xE8mes."),qu.forEach(t),Ba=c(e),ue=o(e,"H2",{class:!0});var Nl=i(ue);_e=o(Nl,"A",{id:!0,class:!0,href:!0});var Eu=i(_e);Gt=o(Eu,"SPAN",{});var yu=i(Gt);_(Qe.$$.fragment,yu),yu.forEach(t),Eu.forEach(t),sr=c(Nl),It=o(Nl,"SPAN",{});var wu=i(It);tr=n(wu,"Obtenir les donn\xE9es"),wu.forEach(t),Nl.forEach(t),Qa=c(e),be=o(e,"P",{});var Tl=i(be);ar=n(Tl,"Vous pouvez trouver tous les probl\xE8mes dans \u{1F917} Datasets en acc\xE9dant \xE0 l\u2019[onglet Probl\xE8mes] du r\xE9f\xE9rentiel ("),Je=o(Tl,"A",{href:!0,rel:!0});var ku=i(Je);nr=n(ku,"https://github.com/huggingface/datasets/issues"),ku.forEach(t),lr=n(Tl,"). Comme le montre la capture d\u2019\xE9cran suivante, au moment de la r\xE9daction, il y avait 331 probl\xE8mes ouverts et 668 probl\xE8mes ferm\xE9s."),Tl.forEach(t),Ja=c(e),Ze=o(e,"DIV",{class:!0});var Du=i(Ze);Ke=o(Du,"IMG",{src:!0,alt:!0,width:!0}),Du.forEach(t),Za=c(e),pt=o(e,"P",{});var Pu=i(pt);rr=n(Pu,"Si vous cliquez sur l\u2019un de ces probl\xE8mes, vous constaterez qu\u2019il contient un titre, une description et un ensemble d\u2019\xE9tiquettes qui caract\xE9risent le probl\xE8me. Un exemple est montr\xE9 dans la capture d\u2019\xE9cran ci-dessous."),Pu.forEach(t),Ka=c(e),Xe=o(e,"DIV",{class:!0});var zu=i(Xe);We=o(zu,"IMG",{src:!0,alt:!0,width:!0}),zu.forEach(t),Xa=c(e),L=o(e,"P",{});var Me=i(L);or=n(Me,"Pour t\xE9l\xE9charger tous les probl\xE8mes du r\xE9f\xE9rentiel, nous utiliserons l\u2019"),Ye=o(Me,"A",{href:!0,rel:!0});var Hu=i(Ye);ir=n(Hu,"API\xA0REST GitHub"),Hu.forEach(t),ur=n(Me," pour interroger le point de terminaison ["),Rt=o(Me,"CODE",{});var Cu=i(Rt);pr=n(Cu,"Issues"),Cu.forEach(t),cr=n(Me,"]("),es=o(Me,"A",{href:!0,rel:!0});var Nu=i(es);dr=n(Nu,"https://docs.github."),Nu.forEach(t),mr=n(Me," com/en/rest/reference/issues#list-repository-issues). Ce point de terminaison renvoie une liste d\u2019objets JSON, chaque objet contenant un grand nombre de champs qui incluent le titre et la description ainsi que des m\xE9tadonn\xE9es sur l\u2019\xE9tat du probl\xE8me, etc."),Me.forEach(t),Wa=c(e),ct=o(e,"P",{});var Tu=i(ct);hr=n(Tu,"Un moyen pratique de t\xE9l\xE9charger les probl\xE8mes consiste \xE0 utiliser la biblioth\xE8que \u201Crequests\u201D, qui est la m\xE9thode standard pour effectuer des requ\xEAtes HTTP en Python. Vous pouvez installer la biblioth\xE8que en ex\xE9cutant\xA0:"),Tu.forEach(t),Ya=c(e),_(ss.$$.fragment,e),en=c(e),K=o(e,"P",{});var Et=i(K);fr=n(Et,"Une fois la biblioth\xE8que install\xE9e, vous pouvez envoyer des requ\xEAtes GET au point de terminaison "),Ut=o(Et,"CODE",{});var Ou=i(Ut);gr=n(Ou,"Issues"),Ou.forEach(t),_r=n(Et," en appelant la fonction "),St=o(Et,"CODE",{});var Au=i(St);br=n(Au,"requests.get()"),Au.forEach(t),vr=n(Et,". Par exemple, vous pouvez ex\xE9cuter la commande suivante pour r\xE9cup\xE9rer le premier num\xE9ro sur la premi\xE8re page\xA0:"),Et.forEach(t),sn=c(e),_(ts.$$.fragment,e),tn=c(e),ve=o(e,"P",{});var Ol=i(ve);xr=n(Ol,"L\u2019objet "),Lt=o(Ol,"CODE",{});var Gu=i(Lt);jr=n(Gu,"response"),Gu.forEach(t),$r=n(Ol," contient de nombreuses informations utiles sur la requ\xEAte, y compris le code d\u2019\xE9tat HTTP\xA0:"),Ol.forEach(t),an=c(e),_(as.$$.fragment,e),nn=c(e),_(ns.$$.fragment,e),ln=c(e),X=o(e,"P",{});var yt=i(X);qr=n(yt,"o\xF9 un statut \u201C200\u201D signifie que la requ\xEAte a r\xE9ussi (vous pouvez trouver une liste des codes de statut HTTP possibles "),ls=o(yt,"A",{href:!0,rel:!0});var Iu=i(ls);Er=n(Iu,"ici"),Iu.forEach(t),yr=n(yt,"). Ce qui nous int\xE9resse vraiment, cependant, c\u2019est le "),Mt=o(yt,"EM",{});var Ru=i(Mt);wr=n(Ru,"payload"),Ru.forEach(t),kr=n(yt,", qui peut \xEAtre consult\xE9 dans diff\xE9rents formats comme les octets, les cha\xEEnes ou JSON. Comme nous savons que nos probl\xE8mes sont au format JSON, examinons la charge utile comme suit\xA0:"),yt.forEach(t),rn=c(e),_(rs.$$.fragment,e),on=c(e),_(os.$$.fragment,e),un=c(e),M=o(e,"P",{});var Fe=i(M);Dr=n(Fe,"Waouh, \xE7a fait beaucoup d\u2019informations ! Nous pouvons voir des champs utiles comme "),Ft=o(Fe,"CODE",{});var Uu=i(Ft);Pr=n(Uu,"title"),Uu.forEach(t),zr=n(Fe,", "),Vt=o(Fe,"CODE",{});var Su=i(Vt);Hr=n(Su,"body"),Su.forEach(t),Cr=n(Fe," et "),Bt=o(Fe,"CODE",{});var Lu=i(Bt);Nr=n(Lu,"number"),Lu.forEach(t),Tr=n(Fe," qui d\xE9crivent le probl\xE8me, ainsi que des informations sur l\u2019utilisateur GitHub qui a ouvert le probl\xE8me."),Fe.forEach(t),pn=c(e),_(xe.$$.fragment,e),cn=c(e),R=o(e,"P",{});var le=i(R);Or=n(le,"Comme d\xE9crit dans la [documentation] GitHub("),is=o(le,"A",{href:!0,rel:!0});var Mu=i(is);Ar=n(Mu,"https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting"),Mu.forEach(t),Gr=n(le,"), les requ\xEAtes non authentifi\xE9es sont limit\xE9es \xE0 60 requ\xEAtes par heure. Bien que vous puissiez augmenter le param\xE8tre de requ\xEAte "),Qt=o(le,"CODE",{});var Fu=i(Qt);Ir=n(Fu,"per_page"),Fu.forEach(t),Rr=n(le," pour r\xE9duire le nombre de requ\xEAtes que vous effectuez, vous atteindrez toujours la limite de d\xE9bit sur tout r\xE9f\xE9rentiel contenant plus de quelques milliers de probl\xE8mes. Donc, \xE0 la place, vous devez suivre les [instructions] de GitHub ("),us=o(le,"A",{href:!0,rel:!0});var Vu=i(us);Ur=n(Vu,"https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token"),Vu.forEach(t),Sr=n(le,") sur la cr\xE9ation d\u2019un "),Jt=o(le,"EM",{});var Bu=i(Jt);Lr=n(Bu,"jeton d\u2019acc\xE8s personnel"),Bu.forEach(t),Mr=n(le," afin que vous peut augmenter la limite de d\xE9bit \xE0 5 000 requ\xEAtes par heure. Une fois que vous avez votre jeton, vous pouvez l\u2019inclure dans l\u2019en-t\xEAte de la requ\xEAte\xA0:"),le.forEach(t),dn=c(e),_(ps.$$.fragment,e),mn=c(e),_(je.$$.fragment,e),hn=c(e),dt=o(e,"P",{});var Qu=i(dt);Fr=n(Qu,"Maintenant que nous avons notre jeton d\u2019acc\xE8s, cr\xE9ons une fonction qui peut t\xE9l\xE9charger tous les probl\xE8mes depuis un r\xE9f\xE9rentiel GitHub\xA0:"),Qu.forEach(t),fn=c(e),_(cs.$$.fragment,e),gn=c(e),W=o(e,"P",{});var wt=i(W);Vr=n(wt,"D\xE9sormais, lorsque nous appellerons "),Zt=o(wt,"CODE",{});var Ju=i(Zt);Br=n(Ju,"fetch_issues()"),Ju.forEach(t),Qr=n(wt,", tous les probl\xE8mes seront t\xE9l\xE9charg\xE9s par lots pour \xE9viter de d\xE9passer la limite de GitHub sur le nombre de requ\xEAtes par heure\xA0; le r\xE9sultat sera stock\xE9 dans un fichier "),Kt=o(wt,"EM",{});var Zu=i(Kt);Jr=n(Zu,"repository_name-issues.jsonl"),Zu.forEach(t),Zr=n(wt,", o\xF9 chaque ligne est un objet JSON qui repr\xE9sente un probl\xE8me. Utilisons cette fonction pour saisir tous les probl\xE8mes de \u{1F917} Datasets\xA0:"),wt.forEach(t),_n=c(e),_(ds.$$.fragment,e),bn=c(e),$e=o(e,"P",{});var Al=i($e);Kr=n(Al,"Une fois les probl\xE8mes t\xE9l\xE9charg\xE9s, nous pouvons les charger localement en utilisant nos nouvelles comp\xE9tences de "),mt=o(Al,"A",{href:!0});var Ku=i(mt);Xr=n(Ku,"section 2"),Ku.forEach(t),Wr=n(Al," :"),Al.forEach(t),vn=c(e),_(ms.$$.fragment,e),xn=c(e),_(hs.$$.fragment,e),jn=c(e),Y=o(e,"P",{});var kt=i(Y);Yr=n(kt,"G\xE9nial, nous avons cr\xE9\xE9 notre premier ensemble de donn\xE9es \xE0 partir de rien\xA0! Mais pourquoi y a-t-il plusieurs milliers de probl\xE8mes alors que l\u2019"),fs=o(kt,"A",{href:!0,rel:!0});var Xu=i(fs);eo=n(Xu,"onglet Probl\xE8mes"),Xu.forEach(t),so=n(kt," du \u{1F917} Datasets n\u2019affiche qu\u2019environ 1 000 probl\xE8mes au total \u{1F914}\xA0? Comme d\xE9crit dans la [documentation] GitHub("),gs=o(kt,"A",{href:!0,rel:!0});var Wu=i(gs);to=n(Wu,"https://docs.github.com/en/rest/reference/issues#list-issues-assigned-to-the-authenticated-user"),Wu.forEach(t),ao=n(kt,"), c\u2019est parce que nous avons t\xE9l\xE9charg\xE9 tous les les demandes d\u2019extraction \xE9galement\xA0:"),kt.forEach(t),$n=c(e),ht=o(e,"BLOCKQUOTE",{});var Yu=i(ht);_s=o(Yu,"P",{});var Gl=i(_s);no=n(Gl,"L\u2019API REST v3 de GitHub consid\xE8re chaque demande d\u2019extraction comme un probl\xE8me, mais chaque probl\xE8me n\u2019est pas une demande d\u2019extraction. Pour cette raison, les points de terminaison \u201CProbl\xE8mes\u201D peuvent renvoyer \xE0 la fois des probl\xE8mes et des demandes d\u2019extraction dans la r\xE9ponse. Vous pouvez identifier les demandes d\u2019extraction par la cl\xE9 "),Xt=o(Gl,"CODE",{});var ep=i(Xt);lo=n(ep,"pull_request"),ep.forEach(t),ro=n(Gl,". Sachez que l\u2019identifiant d\u2019une demande d\u2019extraction renvoy\xE9e par les points de terminaison \u201CProbl\xE8mes\u201D sera un identifiant de probl\xE8me."),Gl.forEach(t),Yu.forEach(t),qn=c(e),ft=o(e,"P",{});var sp=i(ft);oo=n(sp,"\xC9tant donn\xE9 que le contenu des probl\xE8mes et des demandes d\u2019extraction est assez diff\xE9rent, proc\xE9dons \xE0 un pr\xE9traitement mineur pour nous permettre de les distinguer."),sp.forEach(t),En=c(e),pe=o(e,"H2",{class:!0});var Il=i(pe);qe=o(Il,"A",{id:!0,class:!0,href:!0});var tp=i(qe);Wt=o(tp,"SPAN",{});var ap=i(Wt);_(bs.$$.fragment,ap),ap.forEach(t),tp.forEach(t),io=c(Il),Yt=o(Il,"SPAN",{});var np=i(Yt);uo=n(np,"Nettoyer les donn\xE9es"),np.forEach(t),Il.forEach(t),yn=c(e),G=o(e,"P",{});var B=i(G);po=n(B,"L\u2019extrait ci-dessus de la documentation de GitHub nous indique que la colonne \u201Cpull_request\u201D peut \xEAtre utilis\xE9e pour diff\xE9rencier les probl\xE8mes et les demandes d\u2019extraction. Regardons un \xE9chantillon al\xE9atoire pour voir quelle est la diff\xE9rence. Comme nous l\u2019avons fait dans "),gt=o(B,"A",{href:!0});var lp=i(gt);co=n(lp,"section 3"),lp.forEach(t),mo=n(B,", nous allons encha\xEEner "),ea=o(B,"CODE",{});var rp=i(ea);ho=n(rp,"Dataset.shuffle()"),rp.forEach(t),fo=n(B," et "),sa=o(B,"CODE",{});var op=i(sa);go=n(op,"Dataset.select()"),op.forEach(t),_o=n(B," pour cr\xE9er un \xE9chantillon al\xE9atoire, puis compresser "),ta=o(B,"CODE",{});var ip=i(ta);bo=n(ip,"html_url"),ip.forEach(t),vo=n(B," et "),aa=o(B,"CODE",{});var up=i(aa);xo=n(up,"pull_request"),up.forEach(t),jo=n(B," afin que nous puissions comparer les diff\xE9rentes URL\xA0:"),B.forEach(t),wn=c(e),_(vs.$$.fragment,e),kn=c(e),_(xs.$$.fragment,e),Dn=c(e),F=o(e,"P",{});var Ve=i(F);$o=n(Ve,"Ici, nous pouvons voir que chaque demande d\u2019extraction est associ\xE9e \xE0 diverses URL, tandis que les probl\xE8mes ordinaires ont une entr\xE9e \u201CAucun\u201D. Nous pouvons utiliser cette distinction pour cr\xE9er une nouvelle colonne "),na=o(Ve,"CODE",{});var pp=i(na);qo=n(pp,"is_pull_request"),pp.forEach(t),Eo=n(Ve," qui v\xE9rifie si le champ "),la=o(Ve,"CODE",{});var cp=i(la);yo=n(cp,"pull_request"),cp.forEach(t),wo=n(Ve," est "),ra=o(Ve,"CODE",{});var dp=i(ra);ko=n(dp,"None"),dp.forEach(t),Do=n(Ve," ou non\xA0:"),Ve.forEach(t),Pn=c(e),_(js.$$.fragment,e),zn=c(e),_(Ee.$$.fragment,e),Hn=c(e),_t=o(e,"P",{});var mp=i(_t);Po=n(mp,"Bien que nous puissions continuer \xE0 nettoyer davantage l\u2019ensemble de donn\xE9es en supprimant ou en renommant certaines colonnes, il est g\xE9n\xE9ralement recommand\xE9 de conserver l\u2019ensemble de donn\xE9es aussi \u201Cbrut\u201D que possible \xE0 ce stade afin qu\u2019il puisse \xEAtre facilement utilis\xE9 dans plusieurs applications."),mp.forEach(t),Cn=c(e),bt=o(e,"P",{});var hp=i(bt);zo=n(hp,"Avant de pousser notre ensemble de donn\xE9es vers le Hugging Face Hub, traitons d\u2019une chose qui lui manque : les commentaires associ\xE9s \xE0 chaque probl\xE8me et pull request. Nous les ajouterons ensuite avec - vous l\u2019avez devin\xE9 - l\u2019API GitHub REST\xA0!"),hp.forEach(t),Nn=c(e),ce=o(e,"H2",{class:!0});var Rl=i(ce);ye=o(Rl,"A",{id:!0,class:!0,href:!0});var fp=i(ye);oa=o(fp,"SPAN",{});var gp=i(oa);_($s.$$.fragment,gp),gp.forEach(t),fp.forEach(t),Ho=c(Rl),ia=o(Rl,"SPAN",{});var _p=i(ia);Co=n(_p,"Enrichir le jeu de donn\xE9es"),_p.forEach(t),Rl.forEach(t),Tn=c(e),vt=o(e,"P",{});var bp=i(vt);No=n(bp,"Comme le montre la capture d\u2019\xE9cran suivante, les commentaires associ\xE9s \xE0 un probl\xE8me ou \xE0 une demande d\u2019extraction fournissent une riche source d\u2019informations, en particulier si nous souhaitons cr\xE9er un moteur de recherche pour r\xE9pondre aux requ\xEAtes des utilisateurs sur la biblioth\xE8que."),bp.forEach(t),On=c(e),qs=o(e,"DIV",{class:!0});var vp=i(qs);Es=o(vp,"IMG",{src:!0,alt:!0,width:!0}),vp.forEach(t),An=c(e),we=o(e,"P",{});var Ul=i(we);To=n(Ul,"L\u2019API REST GitHub fournit un point de terminaison "),ys=o(Ul,"A",{href:!0,rel:!0});var xp=i(ys);ua=o(xp,"CODE",{});var jp=i(ua);Oo=n(jp,"Comments"),jp.forEach(t),xp.forEach(t),Ao=n(Ul," qui renvoie tous les commentaires associ\xE9s \xE0 un num\xE9ro de probl\xE8me. Testons le point de terminaison pour voir ce qu\u2019il renvoie\xA0:"),Ul.forEach(t),Gn=c(e),_(ws.$$.fragment,e),In=c(e),_(ks.$$.fragment,e),Rn=c(e),V=o(e,"P",{});var Be=i(V);Go=n(Be,"Nous pouvons voir que le commentaire est stock\xE9 dans le champ "),pa=o(Be,"CODE",{});var $p=i(pa);Io=n($p,"body"),$p.forEach(t),Ro=n(Be,", \xE9crivons donc une fonction simple qui renvoie tous les commentaires associ\xE9s \xE0 un probl\xE8me en s\xE9lectionnant le contenu "),ca=o(Be,"CODE",{});var qp=i(ca);Uo=n(qp,"body"),qp.forEach(t),So=n(Be," pour chaque \xE9l\xE9ment dans "),da=o(Be,"CODE",{});var Ep=i(da);Lo=n(Ep,"response.json()"),Ep.forEach(t),Mo=n(Be,"\xA0:"),Be.forEach(t),Un=c(e),_(Ds.$$.fragment,e),Sn=c(e),_(Ps.$$.fragment,e),Ln=c(e),ee=o(e,"P",{});var Dt=i(ee);Fo=n(Dt,"Cela a l\u2019air bien, alors utilisons "),ma=o(Dt,"CODE",{});var yp=i(ma);Vo=n(yp,"Dataset.map()"),yp.forEach(t),Bo=n(Dt," pour ajouter une nouvelle colonne "),ha=o(Dt,"CODE",{});var wp=i(ha);Qo=n(wp,"commentaires"),wp.forEach(t),Jo=n(Dt," \xE0 chaque probl\xE8me de notre ensemble de donn\xE9es\xA0:"),Dt.forEach(t),Mn=c(e),_(zs.$$.fragment,e),Fn=c(e),xt=o(e,"P",{});var kp=i(xt);Zo=n(kp,"La derni\xE8re \xE9tape consiste \xE0 enregistrer l\u2019ensemble de donn\xE9es augment\xE9es avec nos donn\xE9es brutes afin que nous puissions les pousser toutes les deux vers le Hub\xA0:"),kp.forEach(t),Vn=c(e),_(Hs.$$.fragment,e),Bn=c(e),de=o(e,"H2",{class:!0});var Sl=i(de);ke=o(Sl,"A",{id:!0,class:!0,href:!0});var Dp=i(ke);fa=o(Dp,"SPAN",{});var Pp=i(fa);_(Cs.$$.fragment,Pp),Pp.forEach(t),Dp.forEach(t),Ko=c(Sl),ga=o(Sl,"SPAN",{});var zp=i(ga);Xo=n(zp,"T\xE9l\xE9chargement de l'ensemble de donn\xE9es sur le Hugging Face Hub"),zp.forEach(t),Sl.forEach(t),Qn=c(e),_(Ns.$$.fragment,e),Jn=c(e),se=o(e,"P",{});var Pt=i(se);Wo=n(Pt,"Maintenant que nous avons notre jeu de donn\xE9es augment\xE9, il est temps de le pousser vers le Hub afin que nous puissions le partager avec la communaut\xE9\xA0! Pour t\xE9l\xE9charger l\u2019ensemble de donn\xE9es, nous utiliserons la "),Ts=o(Pt,"A",{href:!0,rel:!0});var Hp=i(Ts);Yo=n(Hp,"biblioth\xE8que Hub\xA0\u{1F917}"),Hp.forEach(t),ei=n(Pt,", qui nous permet d\u2019interagir avec le hub Hugging Face via une API Python. \u{1F917} Hub est pr\xE9install\xE9 avec \u{1F917} Transformers, nous pouvons donc l\u2019utiliser directement. Par exemple, nous pouvons utiliser la fonction "),_a=o(Pt,"CODE",{});var Cp=i(_a);si=n(Cp,"list_datasets()"),Cp.forEach(t),ti=n(Pt," pour obtenir des informations sur tous les ensembles de donn\xE9es publics actuellement h\xE9berg\xE9s sur le Hub\xA0:"),Pt.forEach(t),Zn=c(e),_(Os.$$.fragment,e),Kn=c(e),_(As.$$.fragment,e),Xn=c(e),De=o(e,"P",{});var Ll=i(De);ai=n(Ll,"Nous pouvons voir qu\u2019il y a actuellement pr\xE8s de 1 500 ensembles de donn\xE9es sur le Hub, et la fonction "),ba=o(Ll,"CODE",{});var Np=i(ba);ni=n(Np,"list_datasets()"),Np.forEach(t),li=n(Ll," fournit \xE9galement des m\xE9tadonn\xE9es de base sur chaque r\xE9f\xE9rentiel d\u2019ensembles de donn\xE9es."),Ll.forEach(t),Wn=c(e),Pe=o(e,"P",{});var Ml=i(Pe);ri=n(Ml,"Pour nos besoins, la premi\xE8re chose que nous devons faire est de cr\xE9er un nouveau r\xE9f\xE9rentiel d\u2019ensembles de donn\xE9es sur le Hub. Pour ce faire, nous avons besoin d\u2019un jeton d\u2019authentification, qui peut \xEAtre obtenu en se connectant d\u2019abord \xE0 Hugging Face Hub avec la fonction "),va=o(Ml,"CODE",{});var Tp=i(va);oi=n(Tp,"notebook_login()"),Tp.forEach(t),ii=n(Ml,"\xA0:"),Ml.forEach(t),Yn=c(e),_(Gs.$$.fragment,e),el=c(e),ze=o(e,"P",{});var Fl=i(ze);ui=n(Fl,"Cela cr\xE9era un widget dans lequel vous pourrez entrer votre nom d\u2019utilisateur et votre mot de passe, et un jeton API sera enregistr\xE9 dans "),xa=o(Fl,"EM",{});var Op=i(xa);pi=n(Op,"~/.huggingface/token"),Op.forEach(t),ci=n(Fl,". Si vous ex\xE9cutez le code dans un terminal, vous pouvez vous connecter via la CLI \xE0 la place\xA0:"),Fl.forEach(t),sl=c(e),_(Is.$$.fragment,e),tl=c(e),He=o(e,"P",{});var Vl=i(He);di=n(Vl,"Une fois que nous avons fait cela, nous pouvons cr\xE9er un nouveau r\xE9f\xE9rentiel d\u2019ensembles de donn\xE9es avec la fonction "),ja=o(Vl,"CODE",{});var Ap=i(ja);mi=n(Ap,"create_repo()"),Ap.forEach(t),hi=n(Vl,"\xA0:"),Vl.forEach(t),al=c(e),_(Rs.$$.fragment,e),nl=c(e),_(Us.$$.fragment,e),ll=c(e),te=o(e,"P",{});var zt=i(te);fi=n(zt,"Dans cet exemple, nous avons cr\xE9\xE9 un r\xE9f\xE9rentiel d\u2019ensemble de donn\xE9es vide appel\xE9 "),$a=o(zt,"CODE",{});var Gp=i($a);gi=n(Gp,"github-issues"),Gp.forEach(t),_i=n(zt," sous le nom d\u2019utilisateur "),qa=o(zt,"CODE",{});var Ip=i(qa);bi=n(Ip,"lewtun"),Ip.forEach(t),vi=n(zt," (le nom d\u2019utilisateur doit \xEAtre votre nom d\u2019utilisateur Hub lorsque vous ex\xE9cutez ce code\xA0!)."),zt.forEach(t),rl=c(e),_(Ce.$$.fragment,e),ol=c(e),Ne=o(e,"P",{});var Bl=i(Ne);xi=n(Bl,"Ensuite, clonons le r\xE9f\xE9rentiel du Hub sur notre machine locale et copions-y notre fichier d\u2019ensemble de donn\xE9es. \u{1F917} Hub fournit une classe "),Ea=o(Bl,"CODE",{});var Rp=i(Ea);ji=n(Rp,"Repository"),Rp.forEach(t),$i=n(Bl," pratique qui encapsule de nombreuses commandes Git courantes, donc pour cloner le r\xE9f\xE9rentiel distant, nous devons simplement fournir l\u2019URL et le chemin local vers lesquels nous souhaitons cloner\xA0:"),Bl.forEach(t),il=c(e),_(Ss.$$.fragment,e),ul=c(e),U=o(e,"P",{});var re=i(U);qi=n(re,"Par d\xE9faut, diverses extensions de fichiers (telles que "),ya=o(re,"EM",{});var Up=i(ya);Ei=n(Up,".bin"),Up.forEach(t),yi=n(re,", "),wa=o(re,"EM",{});var Sp=i(wa);wi=n(Sp,".gz"),Sp.forEach(t),ki=n(re," et "),ka=o(re,"EM",{});var Lp=i(ka);Di=n(Lp,".zip"),Lp.forEach(t),Pi=n(re,") sont suivies avec Git LFS afin que les fichiers volumineux puissent \xEAtre versionn\xE9s dans le m\xEAme workflow Git. Vous pouvez trouver une liste des extensions de fichiers suivis dans le fichier "),Da=o(re,"EM",{});var Mp=i(Da);zi=n(Mp,".gitattributes"),Mp.forEach(t),Hi=n(re," du r\xE9f\xE9rentiel. Pour inclure le format JSON Lines dans la liste, nous pouvons ex\xE9cuter la commande suivante\xA0:"),re.forEach(t),pl=c(e),_(Ls.$$.fragment,e),cl=c(e),Te=o(e,"P",{});var Ql=i(Te);Ci=n(Ql,"Ensuite, nous pouvons utiliser "),Pa=o(Ql,"CODE",{});var Fp=i(Pa);Ni=n(Fp,"Repository.push_to_hub()"),Fp.forEach(t),Ti=n(Ql," pour pousser l\u2019ensemble de donn\xE9es vers le Hub\xA0:"),Ql.forEach(t),dl=c(e),_(Ms.$$.fragment,e),ml=c(e),Oe=o(e,"P",{});var Jl=i(Oe);Oi=n(Jl,"Si nous naviguons vers l\u2019URL contenue dans "),za=o(Jl,"CODE",{});var Vp=i(za);Ai=n(Vp,"repo_url"),Vp.forEach(t),Gi=n(Jl,", nous devrions maintenant voir que notre fichier de jeu de donn\xE9es a \xE9t\xE9 t\xE9l\xE9charg\xE9."),Jl.forEach(t),hl=c(e),Fs=o(e,"DIV",{class:!0});var Bp=i(Fs);Vs=o(Bp,"IMG",{src:!0,alt:!0,width:!0}),Bp.forEach(t),fl=c(e),ae=o(e,"P",{});var Ht=i(ae);Ii=n(Ht,"\xC0 partir de l\xE0, n\u2019importe qui peut t\xE9l\xE9charger l\u2019ensemble de donn\xE9es en fournissant simplement "),Ha=o(Ht,"CODE",{});var Qp=i(Ha);Ri=n(Qp,"load_dataset()"),Qp.forEach(t),Ui=n(Ht," avec l\u2019ID du r\xE9f\xE9rentiel comme argument "),Ca=o(Ht,"CODE",{});var Jp=i(Ca);Si=n(Jp,"path"),Jp.forEach(t),Li=n(Ht,"\xA0:"),Ht.forEach(t),gl=c(e),_(Bs.$$.fragment,e),_l=c(e),_(Qs.$$.fragment,e),bl=c(e),Ae=o(e,"P",{});var Zl=i(Ae);Mi=n(Zl,"Cool, nous avons pouss\xE9 notre jeu de donn\xE9es vers le Hub et il est disponible pour que d\u2019autres puissent l\u2019utiliser\xA0! Il ne reste plus qu\u2019une chose importante \xE0 faire\xA0: ajouter une "),Na=o(Zl,"EM",{});var Zp=i(Na);Fi=n(Zp,"carte de jeu de donn\xE9es"),Zp.forEach(t),Vi=n(Zl," qui explique comment le corpus a \xE9t\xE9 cr\xE9\xE9 et fournit d\u2019autres informations utiles \xE0 la communaut\xE9."),Zl.forEach(t),vl=c(e),_(Ge.$$.fragment,e),xl=c(e),me=o(e,"H2",{class:!0});var Kl=i(me);Ie=o(Kl,"A",{id:!0,class:!0,href:!0});var Kp=i(Ie);Ta=o(Kp,"SPAN",{});var Xp=i(Ta);_(Js.$$.fragment,Xp),Xp.forEach(t),Kp.forEach(t),Bi=c(Kl),Oa=o(Kl,"SPAN",{});var Wp=i(Oa);Qi=n(Wp,"Cr\xE9ation d'une fiche de jeu de donn\xE9es"),Wp.forEach(t),Kl.forEach(t),jl=c(e),jt=o(e,"P",{});var Yp=i(jt);Ji=n(Yp,"Des ensembles de donn\xE9es bien document\xE9s sont plus susceptibles d\u2019\xEAtre utiles aux autres (y compris \xE0 votre futur moi\xA0!), car ils fournissent le contexte permettant aux utilisateurs de d\xE9cider si l\u2019ensemble de donn\xE9es est pertinent pour leur t\xE2che et d\u2019\xE9valuer les biais potentiels ou les risques associ\xE9s \xE0 l\u2019utilisation l\u2019ensemble de donn\xE9es."),Yp.forEach(t),$l=c(e),Re=o(e,"P",{});var Xl=i(Re);Zi=n(Xl,"Sur le Hugging Face Hub, ces informations sont stock\xE9es dans le fichier "),Aa=o(Xl,"EM",{});var ec=i(Aa);Ki=n(ec,"README.md"),ec.forEach(t),Xi=n(Xl," de chaque r\xE9f\xE9rentiel d\u2019ensembles de donn\xE9es. Il y a deux \xE9tapes principales que vous devez suivre avant de cr\xE9er ce fichier\xA0:"),Xl.forEach(t),ql=c(e),$t=o(e,"OL",{});var sc=i($t);he=o(sc,"LI",{});var Ct=i(he);Wi=n(Ct,"Utilisez l\u2019"),Ue=o(Ct,"A",{href:!0,rel:!0});var mu=i(Ue);Yi=n(mu,"application "),Ga=o(mu,"CODE",{});var tc=i(Ga);eu=n(tc,"datasets-tagging"),tc.forEach(t),mu.forEach(t),su=n(Ct," pour cr\xE9er des balises de m\xE9tadonn\xE9es au format YAML. Ces balises sont utilis\xE9es pour une vari\xE9t\xE9 de fonctionnalit\xE9s de recherche sur le Hugging Face Hub et garantissent que votre ensemble de donn\xE9es peut \xEAtre facilement trouv\xE9 par les membres de la communaut\xE9. Puisque nous avons cr\xE9\xE9 un ensemble de donn\xE9es personnalis\xE9 ici, vous devrez cloner le r\xE9f\xE9rentiel "),Ia=o(Ct,"CODE",{});var ac=i(Ia);tu=n(ac,"datasets-tagging"),ac.forEach(t),au=n(Ct," et ex\xE9cuter l\u2019application localement. Voici \xE0 quoi ressemble l\u2019interface\xA0:"),Ct.forEach(t),sc.forEach(t),El=c(e),Zs=o(e,"DIV",{class:!0});var nc=i(Zs);Ks=o(nc,"IMG",{src:!0,alt:!0,width:!0}),nc.forEach(t),yl=c(e),Xs=o(e,"OL",{start:!0});var lc=i(Xs);Ws=o(lc,"LI",{});var Wl=i(Ws);nu=n(Wl,"Lisez le "),Ys=o(Wl,"A",{href:!0,rel:!0});var rc=i(Ys);lu=n(rc,"\u{1F917} Datasets guide"),rc.forEach(t),ru=n(Wl," sur la cr\xE9ation de cartes d\u2019ensemble de donn\xE9es informatives et utilisez-le comme mod\xE8le."),Wl.forEach(t),lc.forEach(t),wl=c(e),ne=o(e,"P",{});var Nt=i(ne);ou=n(Nt,"Vous pouvez cr\xE9er le fichier "),Ra=o(Nt,"EM",{});var oc=i(Ra);iu=n(oc,"README.md"),oc.forEach(t),uu=n(Nt," directement sur le Hub, et vous pouvez trouver un mod\xE8le de carte d\u2019ensemble de donn\xE9es dans le r\xE9f\xE9rentiel d\u2019ensemble de donn\xE9es "),Ua=o(Nt,"CODE",{});var ic=i(Ua);pu=n(ic,"lewtun/github-issues"),ic.forEach(t),cu=n(Nt,". Une capture d\u2019\xE9cran de la carte de jeu de donn\xE9es remplie est illustr\xE9e ci-dessous."),Nt.forEach(t),kl=c(e),et=o(e,"DIV",{class:!0});var uc=i(et);st=o(uc,"IMG",{src:!0,alt:!0,width:!0}),uc.forEach(t),Dl=c(e),_(Se.$$.fragment,e),Pl=c(e),qt=o(e,"P",{});var pc=i(qt);du=n(pc,"C\u2019est \xE7a! Nous avons vu dans cette section que la cr\xE9ation d\u2019un bon ensemble de donn\xE9es peut \xEAtre assez complexe, mais heureusement, le t\xE9l\xE9charger et le partager avec la communaut\xE9 ne l\u2019est pas. Dans la section suivante, nous utiliserons notre nouvel ensemble de donn\xE9es pour cr\xE9er un moteur de recherche s\xE9mantique avec \u{1F917} Deatasets qui peut faire correspondre les questions aux probl\xE8mes et commentaires les plus pertinents."),pc.forEach(t),zl=c(e),_(Le.$$.fragment,e),this.h()},h(){m(d,"name","hf:doc:metadata"),m(d,"content",JSON.stringify(wc)),m($,"id","cration-de-votre-propre-jeu-de-donnes"),m($,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),m($,"href","#cration-de-votre-propre-jeu-de-donnes"),m(h,"class","relative group"),m(z,"href","https://github.com/features/issues/"),m(z,"rel","nofollow"),m(_e,"id","obtenir-les-donnes"),m(_e,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),m(_e,"href","#obtenir-les-donnes"),m(ue,"class","relative group"),m(Je,"href","https://github.com/huggingface/datasets/issues"),m(Je,"rel","nofollow"),Tt(Ke.src,hu="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter5/datasets-issues.png")||m(Ke,"src",hu),m(Ke,"alt","Les probl\xE8mes GitHub associ\xE9s aux \u{1F917} Datasets."),m(Ke,"width","80%"),m(Ze,"class","flex justify-center"),Tt(We.src,fu="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter5/datasets-issues-single.png")||m(We,"src",fu),m(We,"alt","Un probl\xE8me GitHub typique dans le r\xE9f\xE9rentiel \u{1F917} Datasets."),m(We,"width","80%"),m(Xe,"class","flex justify-center"),m(Ye,"href","https://docs.github.com/en/rest"),m(Ye,"rel","nofollow"),m(es,"href","https://docs.github."),m(es,"rel","nofollow"),m(ls,"href","https://en.wikipedia.org/wiki/List_of_HTTP_status_codes"),m(ls,"rel","nofollow"),m(is,"href","https://docs.github.com/en/rest/overview/resources-in-the-rest-api#rate-limiting"),m(is,"rel","nofollow"),m(us,"href","https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token"),m(us,"rel","nofollow"),m(mt,"href","/course/chaper5/2"),m(fs,"href","https://github.com/huggingface/datasets/issues"),m(fs,"rel","nofollow"),m(gs,"href","https://docs.github.com/en/rest/reference/issues#list-issues-assigned-to-the-authenticated-user"),m(gs,"rel","nofollow"),m(qe,"id","nettoyer-les-donnes"),m(qe,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),m(qe,"href","#nettoyer-les-donnes"),m(pe,"class","relative group"),m(gt,"href","/course/chapter5/3"),m(ye,"id","enrichir-le-jeu-de-donnes"),m(ye,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),m(ye,"href","#enrichir-le-jeu-de-donnes"),m(ce,"class","relative group"),Tt(Es.src,gu="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter5/datasets-issues-comment.png")||m(Es,"src",gu),m(Es,"alt","Commentaires associ\xE9s \xE0 un probl\xE8me concernant \u{1F917} Datasets."),m(Es,"width","80%"),m(qs,"class","flex justify-center"),m(ys,"href","https://docs.github.com/en/rest/reference/issues#list-issue-comments"),m(ys,"rel","nofollow"),m(ke,"id","tlchargement-de-lensemble-de-donnes-sur-le-hugging-face-hub"),m(ke,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),m(ke,"href","#tlchargement-de-lensemble-de-donnes-sur-le-hugging-face-hub"),m(de,"class","relative group"),m(Ts,"href","https://github.com/huggingface/huggingface_hub"),m(Ts,"rel","nofollow"),Tt(Vs.src,_u="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter5/hub-repo.png")||m(Vs,"src",_u),m(Vs,"alt","Notre r\xE9f\xE9rentiel d'ensembles de donn\xE9es sur le Hugging Face Hub."),m(Vs,"width","80%"),m(Fs,"class","flex justify-center"),m(Ie,"id","cration-dune-fiche-de-jeu-de-donnes"),m(Ie,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),m(Ie,"href","#cration-dune-fiche-de-jeu-de-donnes"),m(me,"class","relative group"),m(Ue,"href","https://huggingface.co/datasets/tagging/"),m(Ue,"rel","nofollow"),Tt(Ks.src,bu="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter5/datasets-tagger.png")||m(Ks,"src",bu),m(Ks,"alt","L'interface `datasets-tagging`."),m(Ks,"width","80%"),m(Zs,"class","flex justify-center"),m(Ys,"href","https://github.com/huggingface/datasets/blob/master/templates/README_guide.md"),m(Ys,"rel","nofollow"),m(Xs,"start","2"),Tt(st.src,vu="https://huggingface.co/datasets/huggingface-course/documentation-images/resolve/main/en/chapter5/dataset-card.png")||m(st,"src",vu),m(st,"alt","Une carte de jeu de donn\xE9es."),m(st,"width","80%"),m(et,"class","flex justify-center")},m(e,l){s(document.head,d),u(e,q,l),u(e,h,l),s(h,$),s($,E),b(f,E,null),s(h,y),s(h,P),s(P,k),u(e,D,l),b(H,e,l),u(e,C,l),u(e,A,l),s(A,S),s(A,z),s(z,Q),s(A,J),u(e,I,l),u(e,T,l),s(T,oe),s(oe,ie),s(T,N),s(T,Z),s(Z,lt),s(Z,ge),s(ge,rt),s(Z,ot),s(T,it),s(T,At),s(At,Yl),u(e,Va,l),u(e,ut,l),s(ut,er),u(e,Ba,l),u(e,ue,l),s(ue,_e),s(_e,Gt),b(Qe,Gt,null),s(ue,sr),s(ue,It),s(It,tr),u(e,Qa,l),u(e,be,l),s(be,ar),s(be,Je),s(Je,nr),s(be,lr),u(e,Ja,l),u(e,Ze,l),s(Ze,Ke),u(e,Za,l),u(e,pt,l),s(pt,rr),u(e,Ka,l),u(e,Xe,l),s(Xe,We),u(e,Xa,l),u(e,L,l),s(L,or),s(L,Ye),s(Ye,ir),s(L,ur),s(L,Rt),s(Rt,pr),s(L,cr),s(L,es),s(es,dr),s(L,mr),u(e,Wa,l),u(e,ct,l),s(ct,hr),u(e,Ya,l),b(ss,e,l),u(e,en,l),u(e,K,l),s(K,fr),s(K,Ut),s(Ut,gr),s(K,_r),s(K,St),s(St,br),s(K,vr),u(e,sn,l),b(ts,e,l),u(e,tn,l),u(e,ve,l),s(ve,xr),s(ve,Lt),s(Lt,jr),s(ve,$r),u(e,an,l),b(as,e,l),u(e,nn,l),b(ns,e,l),u(e,ln,l),u(e,X,l),s(X,qr),s(X,ls),s(ls,Er),s(X,yr),s(X,Mt),s(Mt,wr),s(X,kr),u(e,rn,l),b(rs,e,l),u(e,on,l),b(os,e,l),u(e,un,l),u(e,M,l),s(M,Dr),s(M,Ft),s(Ft,Pr),s(M,zr),s(M,Vt),s(Vt,Hr),s(M,Cr),s(M,Bt),s(Bt,Nr),s(M,Tr),u(e,pn,l),b(xe,e,l),u(e,cn,l),u(e,R,l),s(R,Or),s(R,is),s(is,Ar),s(R,Gr),s(R,Qt),s(Qt,Ir),s(R,Rr),s(R,us),s(us,Ur),s(R,Sr),s(R,Jt),s(Jt,Lr),s(R,Mr),u(e,dn,l),b(ps,e,l),u(e,mn,l),b(je,e,l),u(e,hn,l),u(e,dt,l),s(dt,Fr),u(e,fn,l),b(cs,e,l),u(e,gn,l),u(e,W,l),s(W,Vr),s(W,Zt),s(Zt,Br),s(W,Qr),s(W,Kt),s(Kt,Jr),s(W,Zr),u(e,_n,l),b(ds,e,l),u(e,bn,l),u(e,$e,l),s($e,Kr),s($e,mt),s(mt,Xr),s($e,Wr),u(e,vn,l),b(ms,e,l),u(e,xn,l),b(hs,e,l),u(e,jn,l),u(e,Y,l),s(Y,Yr),s(Y,fs),s(fs,eo),s(Y,so),s(Y,gs),s(gs,to),s(Y,ao),u(e,$n,l),u(e,ht,l),s(ht,_s),s(_s,no),s(_s,Xt),s(Xt,lo),s(_s,ro),u(e,qn,l),u(e,ft,l),s(ft,oo),u(e,En,l),u(e,pe,l),s(pe,qe),s(qe,Wt),b(bs,Wt,null),s(pe,io),s(pe,Yt),s(Yt,uo),u(e,yn,l),u(e,G,l),s(G,po),s(G,gt),s(gt,co),s(G,mo),s(G,ea),s(ea,ho),s(G,fo),s(G,sa),s(sa,go),s(G,_o),s(G,ta),s(ta,bo),s(G,vo),s(G,aa),s(aa,xo),s(G,jo),u(e,wn,l),b(vs,e,l),u(e,kn,l),b(xs,e,l),u(e,Dn,l),u(e,F,l),s(F,$o),s(F,na),s(na,qo),s(F,Eo),s(F,la),s(la,yo),s(F,wo),s(F,ra),s(ra,ko),s(F,Do),u(e,Pn,l),b(js,e,l),u(e,zn,l),b(Ee,e,l),u(e,Hn,l),u(e,_t,l),s(_t,Po),u(e,Cn,l),u(e,bt,l),s(bt,zo),u(e,Nn,l),u(e,ce,l),s(ce,ye),s(ye,oa),b($s,oa,null),s(ce,Ho),s(ce,ia),s(ia,Co),u(e,Tn,l),u(e,vt,l),s(vt,No),u(e,On,l),u(e,qs,l),s(qs,Es),u(e,An,l),u(e,we,l),s(we,To),s(we,ys),s(ys,ua),s(ua,Oo),s(we,Ao),u(e,Gn,l),b(ws,e,l),u(e,In,l),b(ks,e,l),u(e,Rn,l),u(e,V,l),s(V,Go),s(V,pa),s(pa,Io),s(V,Ro),s(V,ca),s(ca,Uo),s(V,So),s(V,da),s(da,Lo),s(V,Mo),u(e,Un,l),b(Ds,e,l),u(e,Sn,l),b(Ps,e,l),u(e,Ln,l),u(e,ee,l),s(ee,Fo),s(ee,ma),s(ma,Vo),s(ee,Bo),s(ee,ha),s(ha,Qo),s(ee,Jo),u(e,Mn,l),b(zs,e,l),u(e,Fn,l),u(e,xt,l),s(xt,Zo),u(e,Vn,l),b(Hs,e,l),u(e,Bn,l),u(e,de,l),s(de,ke),s(ke,fa),b(Cs,fa,null),s(de,Ko),s(de,ga),s(ga,Xo),u(e,Qn,l),b(Ns,e,l),u(e,Jn,l),u(e,se,l),s(se,Wo),s(se,Ts),s(Ts,Yo),s(se,ei),s(se,_a),s(_a,si),s(se,ti),u(e,Zn,l),b(Os,e,l),u(e,Kn,l),b(As,e,l),u(e,Xn,l),u(e,De,l),s(De,ai),s(De,ba),s(ba,ni),s(De,li),u(e,Wn,l),u(e,Pe,l),s(Pe,ri),s(Pe,va),s(va,oi),s(Pe,ii),u(e,Yn,l),b(Gs,e,l),u(e,el,l),u(e,ze,l),s(ze,ui),s(ze,xa),s(xa,pi),s(ze,ci),u(e,sl,l),b(Is,e,l),u(e,tl,l),u(e,He,l),s(He,di),s(He,ja),s(ja,mi),s(He,hi),u(e,al,l),b(Rs,e,l),u(e,nl,l),b(Us,e,l),u(e,ll,l),u(e,te,l),s(te,fi),s(te,$a),s($a,gi),s(te,_i),s(te,qa),s(qa,bi),s(te,vi),u(e,rl,l),b(Ce,e,l),u(e,ol,l),u(e,Ne,l),s(Ne,xi),s(Ne,Ea),s(Ea,ji),s(Ne,$i),u(e,il,l),b(Ss,e,l),u(e,ul,l),u(e,U,l),s(U,qi),s(U,ya),s(ya,Ei),s(U,yi),s(U,wa),s(wa,wi),s(U,ki),s(U,ka),s(ka,Di),s(U,Pi),s(U,Da),s(Da,zi),s(U,Hi),u(e,pl,l),b(Ls,e,l),u(e,cl,l),u(e,Te,l),s(Te,Ci),s(Te,Pa),s(Pa,Ni),s(Te,Ti),u(e,dl,l),b(Ms,e,l),u(e,ml,l),u(e,Oe,l),s(Oe,Oi),s(Oe,za),s(za,Ai),s(Oe,Gi),u(e,hl,l),u(e,Fs,l),s(Fs,Vs),u(e,fl,l),u(e,ae,l),s(ae,Ii),s(ae,Ha),s(Ha,Ri),s(ae,Ui),s(ae,Ca),s(Ca,Si),s(ae,Li),u(e,gl,l),b(Bs,e,l),u(e,_l,l),b(Qs,e,l),u(e,bl,l),u(e,Ae,l),s(Ae,Mi),s(Ae,Na),s(Na,Fi),s(Ae,Vi),u(e,vl,l),b(Ge,e,l),u(e,xl,l),u(e,me,l),s(me,Ie),s(Ie,Ta),b(Js,Ta,null),s(me,Bi),s(me,Oa),s(Oa,Qi),u(e,jl,l),u(e,jt,l),s(jt,Ji),u(e,$l,l),u(e,Re,l),s(Re,Zi),s(Re,Aa),s(Aa,Ki),s(Re,Xi),u(e,ql,l),u(e,$t,l),s($t,he),s(he,Wi),s(he,Ue),s(Ue,Yi),s(Ue,Ga),s(Ga,eu),s(he,su),s(he,Ia),s(Ia,tu),s(he,au),u(e,El,l),u(e,Zs,l),s(Zs,Ks),u(e,yl,l),u(e,Xs,l),s(Xs,Ws),s(Ws,nu),s(Ws,Ys),s(Ys,lu),s(Ws,ru),u(e,wl,l),u(e,ne,l),s(ne,ou),s(ne,Ra),s(Ra,iu),s(ne,uu),s(ne,Ua),s(Ua,pu),s(ne,cu),u(e,kl,l),u(e,et,l),s(et,st),u(e,Dl,l),b(Se,e,l),u(e,Pl,l),u(e,qt,l),s(qt,du),u(e,zl,l),b(Le,e,l),Hl=!0},p(e,[l]){const tt={};l&2&&(tt.$$scope={dirty:l,ctx:e}),xe.$set(tt);const Sa={};l&2&&(Sa.$$scope={dirty:l,ctx:e}),je.$set(Sa);const La={};l&2&&(La.$$scope={dirty:l,ctx:e}),Ee.$set(La);const Ma={};l&2&&(Ma.$$scope={dirty:l,ctx:e}),Ce.$set(Ma);const at={};l&2&&(at.$$scope={dirty:l,ctx:e}),Ge.$set(at);const Fa={};l&2&&(Fa.$$scope={dirty:l,ctx:e}),Se.$set(Fa);const fe={};l&2&&(fe.$$scope={dirty:l,ctx:e}),Le.$set(fe)},i(e){Hl||(v(f.$$.fragment,e),v(H.$$.fragment,e),v(Qe.$$.fragment,e),v(ss.$$.fragment,e),v(ts.$$.fragment,e),v(as.$$.fragment,e),v(ns.$$.fragment,e),v(rs.$$.fragment,e),v(os.$$.fragment,e),v(xe.$$.fragment,e),v(ps.$$.fragment,e),v(je.$$.fragment,e),v(cs.$$.fragment,e),v(ds.$$.fragment,e),v(ms.$$.fragment,e),v(hs.$$.fragment,e),v(bs.$$.fragment,e),v(vs.$$.fragment,e),v(xs.$$.fragment,e),v(js.$$.fragment,e),v(Ee.$$.fragment,e),v($s.$$.fragment,e),v(ws.$$.fragment,e),v(ks.$$.fragment,e),v(Ds.$$.fragment,e),v(Ps.$$.fragment,e),v(zs.$$.fragment,e),v(Hs.$$.fragment,e),v(Cs.$$.fragment,e),v(Ns.$$.fragment,e),v(Os.$$.fragment,e),v(As.$$.fragment,e),v(Gs.$$.fragment,e),v(Is.$$.fragment,e),v(Rs.$$.fragment,e),v(Us.$$.fragment,e),v(Ce.$$.fragment,e),v(Ss.$$.fragment,e),v(Ls.$$.fragment,e),v(Ms.$$.fragment,e),v(Bs.$$.fragment,e),v(Qs.$$.fragment,e),v(Ge.$$.fragment,e),v(Js.$$.fragment,e),v(Se.$$.fragment,e),v(Le.$$.fragment,e),Hl=!0)},o(e){x(f.$$.fragment,e),x(H.$$.fragment,e),x(Qe.$$.fragment,e),x(ss.$$.fragment,e),x(ts.$$.fragment,e),x(as.$$.fragment,e),x(ns.$$.fragment,e),x(rs.$$.fragment,e),x(os.$$.fragment,e),x(xe.$$.fragment,e),x(ps.$$.fragment,e),x(je.$$.fragment,e),x(cs.$$.fragment,e),x(ds.$$.fragment,e),x(ms.$$.fragment,e),x(hs.$$.fragment,e),x(bs.$$.fragment,e),x(vs.$$.fragment,e),x(xs.$$.fragment,e),x(js.$$.fragment,e),x(Ee.$$.fragment,e),x($s.$$.fragment,e),x(ws.$$.fragment,e),x(ks.$$.fragment,e),x(Ds.$$.fragment,e),x(Ps.$$.fragment,e),x(zs.$$.fragment,e),x(Hs.$$.fragment,e),x(Cs.$$.fragment,e),x(Ns.$$.fragment,e),x(Os.$$.fragment,e),x(As.$$.fragment,e),x(Gs.$$.fragment,e),x(Is.$$.fragment,e),x(Rs.$$.fragment,e),x(Us.$$.fragment,e),x(Ce.$$.fragment,e),x(Ss.$$.fragment,e),x(Ls.$$.fragment,e),x(Ms.$$.fragment,e),x(Bs.$$.fragment,e),x(Qs.$$.fragment,e),x(Ge.$$.fragment,e),x(Js.$$.fragment,e),x(Se.$$.fragment,e),x(Le.$$.fragment,e),Hl=!1},d(e){t(d),e&&t(q),e&&t(h),j(f),e&&t(D),j(H,e),e&&t(C),e&&t(A),e&&t(I),e&&t(T),e&&t(Va),e&&t(ut),e&&t(Ba),e&&t(ue),j(Qe),e&&t(Qa),e&&t(be),e&&t(Ja),e&&t(Ze),e&&t(Za),e&&t(pt),e&&t(Ka),e&&t(Xe),e&&t(Xa),e&&t(L),e&&t(Wa),e&&t(ct),e&&t(Ya),j(ss,e),e&&t(en),e&&t(K),e&&t(sn),j(ts,e),e&&t(tn),e&&t(ve),e&&t(an),j(as,e),e&&t(nn),j(ns,e),e&&t(ln),e&&t(X),e&&t(rn),j(rs,e),e&&t(on),j(os,e),e&&t(un),e&&t(M),e&&t(pn),j(xe,e),e&&t(cn),e&&t(R),e&&t(dn),j(ps,e),e&&t(mn),j(je,e),e&&t(hn),e&&t(dt),e&&t(fn),j(cs,e),e&&t(gn),e&&t(W),e&&t(_n),j(ds,e),e&&t(bn),e&&t($e),e&&t(vn),j(ms,e),e&&t(xn),j(hs,e),e&&t(jn),e&&t(Y),e&&t($n),e&&t(ht),e&&t(qn),e&&t(ft),e&&t(En),e&&t(pe),j(bs),e&&t(yn),e&&t(G),e&&t(wn),j(vs,e),e&&t(kn),j(xs,e),e&&t(Dn),e&&t(F),e&&t(Pn),j(js,e),e&&t(zn),j(Ee,e),e&&t(Hn),e&&t(_t),e&&t(Cn),e&&t(bt),e&&t(Nn),e&&t(ce),j($s),e&&t(Tn),e&&t(vt),e&&t(On),e&&t(qs),e&&t(An),e&&t(we),e&&t(Gn),j(ws,e),e&&t(In),j(ks,e),e&&t(Rn),e&&t(V),e&&t(Un),j(Ds,e),e&&t(Sn),j(Ps,e),e&&t(Ln),e&&t(ee),e&&t(Mn),j(zs,e),e&&t(Fn),e&&t(xt),e&&t(Vn),j(Hs,e),e&&t(Bn),e&&t(de),j(Cs),e&&t(Qn),j(Ns,e),e&&t(Jn),e&&t(se),e&&t(Zn),j(Os,e),e&&t(Kn),j(As,e),e&&t(Xn),e&&t(De),e&&t(Wn),e&&t(Pe),e&&t(Yn),j(Gs,e),e&&t(el),e&&t(ze),e&&t(sl),j(Is,e),e&&t(tl),e&&t(He),e&&t(al),j(Rs,e),e&&t(nl),j(Us,e),e&&t(ll),e&&t(te),e&&t(rl),j(Ce,e),e&&t(ol),e&&t(Ne),e&&t(il),j(Ss,e),e&&t(ul),e&&t(U),e&&t(pl),j(Ls,e),e&&t(cl),e&&t(Te),e&&t(dl),j(Ms,e),e&&t(ml),e&&t(Oe),e&&t(hl),e&&t(Fs),e&&t(fl),e&&t(ae),e&&t(gl),j(Bs,e),e&&t(_l),j(Qs,e),e&&t(bl),e&&t(Ae),e&&t(vl),j(Ge,e),e&&t(xl),e&&t(me),j(Js),e&&t(jl),e&&t(jt),e&&t($l),e&&t(Re),e&&t(ql),e&&t($t),e&&t(El),e&&t(Zs),e&&t(yl),e&&t(Xs),e&&t(wl),e&&t(ne),e&&t(kl),e&&t(et),e&&t(Dl),j(Se,e),e&&t(Pl),e&&t(qt),e&&t(zl),j(Le,e)}}}const wc={local:"cration-de-votre-propre-jeu-de-donnes",sections:[{local:"obtenir-les-donnes",title:"Obtenir les donn\xE9es"},{local:"nettoyer-les-donnes",title:"Nettoyer les donn\xE9es"},{local:"enrichir-le-jeu-de-donnes",title:"Enrichir le jeu de donn\xE9es"},{local:"tlchargement-de-lensemble-de-donnes-sur-le-hugging-face-hub",title:"T\xE9l\xE9chargement de l'ensemble de donn\xE9es sur le Hugging Face Hub"},{local:"cration-dune-fiche-de-jeu-de-donnes",title:"Cr\xE9ation d'une fiche de jeu de donn\xE9es"}],title:"Cr\xE9ation de votre propre jeu de donn\xE9es"};function kc(O){return fc(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Cc extends cc{constructor(d){super();dc(this,d,kc,yc,mc,{})}}export{Cc as default,wc as metadata};
