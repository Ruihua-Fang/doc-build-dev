import{S as gt,i as ft,s as _t,e as r,k as m,w as T,t as i,M as yt,c as a,d as n,m as p,a as o,x as $,h as s,b as c,F as e,g as j,y as b,L as Tt,q as O,o as k,B as w}from"../../chunks/vendor-19e06bd2.js";import{D as W}from"../../chunks/Docstring-395e5a9c.js";import{I as vt}from"../../chunks/IconCopyLink-3c713d38.js";function $t(Te){let v,X,u,h,G,A,$e,K,be,se,g,x,Q,C,Oe,Y,ke,le,l,I,we,N,S,xe,Z,Ne,Ee,E,z,Re,M,De,ee,Le,Pe,Ae,R,V,Ce,f,Ie,te,Se,ze,ne,Me,Ve,Ue,D,U,qe,q,Be,re,He,We,Xe,L,B,Fe,_,Je,ae,je,Ge,oe,Ke,Qe,Ye,P,H,Ze,ie,et,me;return A=new vt({}),C=new vt({}),I=new W({props:{name:"class optimum.onnxruntime.ORTTrainer",anchor:"optimum.onnxruntime.ORTTrainer",parameters:[{name:"model",val:": typing.Union[transformers.modeling_utils.PreTrainedModel, torch.nn.modules.module.Module] = None"},{name:"tokenizer",val:": typing.Optional[transformers.tokenization_utils_base.PreTrainedTokenizerBase] = None"},{name:"feature",val:": str = 'default'"},{name:"args",val:": TrainingArguments = None"},{name:"data_collator",val:": typing.Optional[DataCollator] = None"},{name:"train_dataset",val:": typing.Optional[torch.utils.data.dataset.Dataset] = None"},{name:"eval_dataset",val:": typing.Optional[torch.utils.data.dataset.Dataset] = None"},{name:"model_init",val:": typing.Callable[[], transformers.modeling_utils.PreTrainedModel] = None"},{name:"compute_metrics",val:": typing.Union[typing.Callable[[transformers.trainer_utils.EvalPrediction], typing.Dict], NoneType] = None"},{name:"callbacks",val:": typing.Optional[typing.List[transformers.trainer_callback.TrainerCallback]] = None"},{name:"optimizers",val:": typing.Tuple[torch.optim.optimizer.Optimizer, torch.optim.lr_scheduler.LambdaLR] = (None, None)"},{name:"onnx_model_path",val:": typing.Union[str, os.PathLike] = None"}],source:"https://github.com/huggingface/optimum/blob/pr_100/src/optimum/onnxruntime/trainer.py#L146"}}),S=new W({props:{name:"compute_loss_ort",anchor:"optimum.onnxruntime.ORTTrainer.compute_loss_ort",parameters:[{name:"model",val:""},{name:"inputs",val:""},{name:"input_names",val:""},{name:"output_names",val:""},{name:"return_outputs",val:" = False"}],source:"https://github.com/huggingface/optimum/blob/pr_100/src/optimum/onnxruntime/trainer.py#L1201"}}),z=new W({props:{name:"evaluate",anchor:"optimum.onnxruntime.ORTTrainer.evaluate",parameters:[{name:"eval_dataset",val:": typing.Optional[torch.utils.data.dataset.Dataset] = None"},{name:"ignore_keys",val:": typing.Optional[typing.List[str]] = None"},{name:"metric_key_prefix",val:": str = 'eval'"}],source:"https://github.com/huggingface/optimum/blob/pr_100/src/optimum/onnxruntime/trainer.py#L665"}}),V=new W({props:{name:"evaluation_loop_ort",anchor:"optimum.onnxruntime.ORTTrainer.evaluation_loop_ort",parameters:[{name:"dataloader",val:": DataLoader"},{name:"description",val:": str"},{name:"prediction_loss_only",val:": typing.Optional[bool] = None"},{name:"ignore_keys",val:": typing.Optional[typing.List[str]] = None"},{name:"metric_key_prefix",val:": str = 'eval'"}],source:"https://github.com/huggingface/optimum/blob/pr_100/src/optimum/onnxruntime/trainer.py#L744"}}),U=new W({props:{name:"predict",anchor:"optimum.onnxruntime.ORTTrainer.predict",parameters:[{name:"test_dataset",val:": Dataset"},{name:"ignore_keys",val:": typing.Optional[typing.List[str]] = None"},{name:"metric_key_prefix",val:": str = 'test'"}],source:"https://github.com/huggingface/optimum/blob/pr_100/src/optimum/onnxruntime/trainer.py#L713"}}),B=new W({props:{name:"prediction_loop_ort",anchor:"optimum.onnxruntime.ORTTrainer.prediction_loop_ort",parameters:[{name:"dataloader",val:": DataLoader"},{name:"description",val:": str"},{name:"prediction_loss_only",val:": typing.Optional[bool] = None"},{name:"ignore_keys",val:": typing.Optional[typing.List[str]] = None"},{name:"metric_key_prefix",val:": str = 'eval'"}],source:"https://github.com/huggingface/optimum/blob/pr_100/src/optimum/onnxruntime/trainer.py#L950"}}),H=new W({props:{name:"train",anchor:"optimum.onnxruntime.ORTTrainer.train",parameters:[{name:"resume_from_checkpoint",val:": typing.Union[str, bool, NoneType] = None"},{name:"trial",val:": typing.Union[ForwardRef('optuna.Trial'), typing.Dict[str, typing.Any]] = None"},{name:"ignore_keys_for_eval",val:": typing.Optional[typing.List[str]] = None"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/optimum/blob/pr_100/src/optimum/onnxruntime/trainer.py#L183",parametersDescription:[{anchor:"optimum.onnxruntime.ORTTrainer.train.resume_from_checkpoint",description:`<strong>resume_from_checkpoint</strong> (<code>str</code> or <code>bool</code>, <em>optional</em>) &#x2014;
If a <code>str</code>, local path to a saved checkpoint as saved by a previous instance of <code>Trainer</code>. If a
<code>bool</code> and equals <code>True</code>, load the last checkpoint in <em>args.output_dir</em> as saved by a previous instance
of <code>Trainer</code>. If present, training will resume from the model/optimizer/scheduler states loaded here.`,name:"resume_from_checkpoint"},{anchor:"optimum.onnxruntime.ORTTrainer.train.trial",description:`<strong>trial</strong> (<code>optuna.Trial</code> or <code>Dict[str, Any]</code>, <em>optional</em>) &#x2014;
The trial run or the hyperparameter dictionary for hyperparameter search.`,name:"trial"},{anchor:"optimum.onnxruntime.ORTTrainer.train.ignore_keys_for_eval",description:`<strong>ignore_keys_for_eval</strong> (<code>List[str]</code>, <em>optional</em>) &#x2014;
A list of keys in the output of your model (if it is a dictionary) that should be ignored when
gathering predictions for evaluation during the training.
kwargs &#x2014;
Additional keyword arguments used to hide deprecated arguments`,name:"ignore_keys_for_eval"}]}}),{c(){v=r("meta"),X=m(),u=r("h1"),h=r("a"),G=r("span"),T(A.$$.fragment),$e=m(),K=r("span"),be=i("Trainer"),se=m(),g=r("h2"),x=r("a"),Q=r("span"),T(C.$$.fragment),Oe=m(),Y=r("span"),ke=i("ORTTrainer"),le=m(),l=r("div"),T(I.$$.fragment),we=m(),N=r("div"),T(S.$$.fragment),xe=m(),Z=r("p"),Ne=i(`How the loss is computed by Trainer. By default, all models return the loss in the first element.
Subclass and override for custom behavior.`),Ee=m(),E=r("div"),T(z.$$.fragment),Re=m(),M=r("p"),De=i("Run evaluation within ONNX Runtime backend and returns metrics.(Overriden from "),ee=r("code"),Le=i("Trainer.evaluate()"),Pe=i(")"),Ae=m(),R=r("div"),T(V.$$.fragment),Ce=m(),f=r("p"),Ie=i("Prediction/evaluation loop, shared by "),te=r("code"),Se=i("ORTTrainer.evaluate()"),ze=i(" and "),ne=r("code"),Me=i("ORTTrainer.predict()"),Ve=i(`.
Works both with or without labels.`),Ue=m(),D=r("div"),T(U.$$.fragment),qe=m(),q=r("p"),Be=i(`Run prediction within ONNX Runtime backend and returns predictions and potential metrics.
(Overriden from `),re=r("code"),He=i("Trainer.predict()"),We=i(")"),Xe=m(),L=r("div"),T(B.$$.fragment),Fe=m(),_=r("p"),Je=i("Prediction/evaluation loop, shared by "),ae=r("code"),je=i("Trainer.evaluate()"),Ge=i(" and "),oe=r("code"),Ke=i("Trainer.predict()"),Qe=i(`.
Works both with or without labels.`),Ye=m(),P=r("div"),T(H.$$.fragment),Ze=m(),ie=r("p"),et=i("Main onnxruntime training entry point."),this.h()},l(t){const y=yt('[data-svelte="svelte-1phssyn"]',document.head);v=a(y,"META",{name:!0,content:!0}),y.forEach(n),X=p(t),u=a(t,"H1",{class:!0});var pe=o(u);h=a(pe,"A",{id:!0,class:!0,href:!0});var tt=o(h);G=a(tt,"SPAN",{});var nt=o(G);$(A.$$.fragment,nt),nt.forEach(n),tt.forEach(n),$e=p(pe),K=a(pe,"SPAN",{});var rt=o(K);be=s(rt,"Trainer"),rt.forEach(n),pe.forEach(n),se=p(t),g=a(t,"H2",{class:!0});var ce=o(g);x=a(ce,"A",{id:!0,class:!0,href:!0});var at=o(x);Q=a(at,"SPAN",{});var ot=o(Q);$(C.$$.fragment,ot),ot.forEach(n),at.forEach(n),Oe=p(ce),Y=a(ce,"SPAN",{});var it=o(Y);ke=s(it,"ORTTrainer"),it.forEach(n),ce.forEach(n),le=p(t),l=a(t,"DIV",{class:!0});var d=o(l);$(I.$$.fragment,d),we=p(d),N=a(d,"DIV",{class:!0});var de=o(N);$(S.$$.fragment,de),xe=p(de),Z=a(de,"P",{});var st=o(Z);Ne=s(st,`How the loss is computed by Trainer. By default, all models return the loss in the first element.
Subclass and override for custom behavior.`),st.forEach(n),de.forEach(n),Ee=p(d),E=a(d,"DIV",{class:!0});var ue=o(E);$(z.$$.fragment,ue),Re=p(ue),M=a(ue,"P",{});var he=o(M);De=s(he,"Run evaluation within ONNX Runtime backend and returns metrics.(Overriden from "),ee=a(he,"CODE",{});var lt=o(ee);Le=s(lt,"Trainer.evaluate()"),lt.forEach(n),Pe=s(he,")"),he.forEach(n),ue.forEach(n),Ae=p(d),R=a(d,"DIV",{class:!0});var ve=o(R);$(V.$$.fragment,ve),Ce=p(ve),f=a(ve,"P",{});var F=o(f);Ie=s(F,"Prediction/evaluation loop, shared by "),te=a(F,"CODE",{});var mt=o(te);Se=s(mt,"ORTTrainer.evaluate()"),mt.forEach(n),ze=s(F," and "),ne=a(F,"CODE",{});var pt=o(ne);Me=s(pt,"ORTTrainer.predict()"),pt.forEach(n),Ve=s(F,`.
Works both with or without labels.`),F.forEach(n),ve.forEach(n),Ue=p(d),D=a(d,"DIV",{class:!0});var ge=o(D);$(U.$$.fragment,ge),qe=p(ge),q=a(ge,"P",{});var fe=o(q);Be=s(fe,`Run prediction within ONNX Runtime backend and returns predictions and potential metrics.
(Overriden from `),re=a(fe,"CODE",{});var ct=o(re);He=s(ct,"Trainer.predict()"),ct.forEach(n),We=s(fe,")"),fe.forEach(n),ge.forEach(n),Xe=p(d),L=a(d,"DIV",{class:!0});var _e=o(L);$(B.$$.fragment,_e),Fe=p(_e),_=a(_e,"P",{});var J=o(_);Je=s(J,"Prediction/evaluation loop, shared by "),ae=a(J,"CODE",{});var dt=o(ae);je=s(dt,"Trainer.evaluate()"),dt.forEach(n),Ge=s(J," and "),oe=a(J,"CODE",{});var ut=o(oe);Ke=s(ut,"Trainer.predict()"),ut.forEach(n),Qe=s(J,`.
Works both with or without labels.`),J.forEach(n),_e.forEach(n),Ye=p(d),P=a(d,"DIV",{class:!0});var ye=o(P);$(H.$$.fragment,ye),Ze=p(ye),ie=a(ye,"P",{});var ht=o(ie);et=s(ht,"Main onnxruntime training entry point."),ht.forEach(n),ye.forEach(n),d.forEach(n),this.h()},h(){c(v,"name","hf:doc:metadata"),c(v,"content",JSON.stringify(bt)),c(h,"id","trainer"),c(h,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(h,"href","#trainer"),c(u,"class","relative group"),c(x,"id","optimum.onnxruntime.ORTTrainer"),c(x,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(x,"href","#optimum.onnxruntime.ORTTrainer"),c(g,"class","relative group"),c(N,"class","docstring"),c(E,"class","docstring"),c(R,"class","docstring"),c(D,"class","docstring"),c(L,"class","docstring"),c(P,"class","docstring"),c(l,"class","docstring")},m(t,y){e(document.head,v),j(t,X,y),j(t,u,y),e(u,h),e(h,G),b(A,G,null),e(u,$e),e(u,K),e(K,be),j(t,se,y),j(t,g,y),e(g,x),e(x,Q),b(C,Q,null),e(g,Oe),e(g,Y),e(Y,ke),j(t,le,y),j(t,l,y),b(I,l,null),e(l,we),e(l,N),b(S,N,null),e(N,xe),e(N,Z),e(Z,Ne),e(l,Ee),e(l,E),b(z,E,null),e(E,Re),e(E,M),e(M,De),e(M,ee),e(ee,Le),e(M,Pe),e(l,Ae),e(l,R),b(V,R,null),e(R,Ce),e(R,f),e(f,Ie),e(f,te),e(te,Se),e(f,ze),e(f,ne),e(ne,Me),e(f,Ve),e(l,Ue),e(l,D),b(U,D,null),e(D,qe),e(D,q),e(q,Be),e(q,re),e(re,He),e(q,We),e(l,Xe),e(l,L),b(B,L,null),e(L,Fe),e(L,_),e(_,Je),e(_,ae),e(ae,je),e(_,Ge),e(_,oe),e(oe,Ke),e(_,Qe),e(l,Ye),e(l,P),b(H,P,null),e(P,Ze),e(P,ie),e(ie,et),me=!0},p:Tt,i(t){me||(O(A.$$.fragment,t),O(C.$$.fragment,t),O(I.$$.fragment,t),O(S.$$.fragment,t),O(z.$$.fragment,t),O(V.$$.fragment,t),O(U.$$.fragment,t),O(B.$$.fragment,t),O(H.$$.fragment,t),me=!0)},o(t){k(A.$$.fragment,t),k(C.$$.fragment,t),k(I.$$.fragment,t),k(S.$$.fragment,t),k(z.$$.fragment,t),k(V.$$.fragment,t),k(U.$$.fragment,t),k(B.$$.fragment,t),k(H.$$.fragment,t),me=!1},d(t){n(v),t&&n(X),t&&n(u),w(A),t&&n(se),t&&n(g),w(C),t&&n(le),t&&n(l),w(I),w(S),w(z),w(V),w(U),w(B),w(H)}}}const bt={local:"trainer",sections:[{local:"optimum.onnxruntime.ORTTrainer",title:"ORTTrainer"}],title:"Trainer"};function Ot(Te,v,X){let{fw:u}=v;return Te.$$set=h=>{"fw"in h&&X(0,u=h.fw)},[u]}class Nt extends gt{constructor(v){super();ft(this,v,Ot,$t,_t,{fw:0})}}export{Nt as default,bt as metadata};
