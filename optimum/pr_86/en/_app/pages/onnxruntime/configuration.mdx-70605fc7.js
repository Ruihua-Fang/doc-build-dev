var at=Object.defineProperty,it=Object.defineProperties;var lt=Object.getOwnPropertyDescriptors;var Ce=Object.getOwnPropertySymbols;var rt=Object.prototype.hasOwnProperty,st=Object.prototype.propertyIsEnumerable;var xe=(n,e,t)=>e in n?at(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t,qe=(n,e)=>{for(var t in e||(e={}))rt.call(e,t)&&xe(n,t,e[t]);if(Ce)for(var t of Ce(e))st.call(e,t)&&xe(n,t,e[t]);return n},Le=(n,e)=>it(n,lt(e));import{S as ve,i as be,s as ye,e as _,c as v,a as b,d as u,b as h,f as fe,g as O,l as re,L as _e,t as D,h as M,F as f,T as Ye,P as we,j as he,U as je,R as Ze,k as T,m as N,V as Je,W as Ke,q as Y,w as ce,x as de,y as ue,o as J,B as pe,n as $e,p as et,G as ke,X as tt,Y as ot,v as ct,E as dt,Z as ut,M as pt}from"../../chunks/vendor-19e06bd2.js";import{I as me}from"../../chunks/IconCopyLink-3c713d38.js";function Pe(n){let e,t;return{c(){e=_("div"),this.h()},l(o){e=v(o,"DIV",{class:!0,style:!0,id:!0});var a=b(e);a.forEach(u),this.h()},h(){h(e,"class",t="absolute text-base py-1.5 p-2 break-words bg-white border-2 border-black dark:border-gray-500 rounded shadow-alternate-xl z-50 "+(n[0].length>1e3?"max-w-lg":"max-w-xs")),fe(e,"top",n[2]+15+"px"),fe(e,"left",n[1]+15+"px"),h(e,"id",n[3])},m(o,a){O(o,e,a),e.innerHTML=n[0]},p(o,a){a&1&&(e.innerHTML=o[0]),a&1&&t!==(t="absolute text-base py-1.5 p-2 break-words bg-white border-2 border-black dark:border-gray-500 rounded shadow-alternate-xl z-50 "+(o[0].length>1e3?"max-w-lg":"max-w-xs"))&&h(e,"class",t),a&4&&fe(e,"top",o[2]+15+"px"),a&2&&fe(e,"left",o[1]+15+"px"),a&8&&h(e,"id",o[3])},d(o){o&&u(e)}}}function ft(n){let e,t=n[0]&&Pe(n);return{c(){t&&t.c(),e=re()},l(o){t&&t.l(o),e=re()},m(o,a){t&&t.m(o,a),O(o,e,a)},p(o,[a]){o[0]?t?t.p(o,a):(t=Pe(o),t.c(),t.m(e.parentNode,e)):t&&(t.d(1),t=null)},i:_e,o:_e,d(o){t&&t.d(o),o&&u(e)}}}function ht(n,e,t){let{txt:o}=e,{x:a}=e,{y:d}=e,{id:l}=e;return n.$$set=c=>{"txt"in c&&t(0,o=c.txt),"x"in c&&t(1,a=c.x),"y"in c&&t(2,d=c.y),"id"in c&&t(3,l=c.id)},[o,a,d,l]}class mt extends ve{constructor(e){super();be(this,e,ht,ft,ye,{txt:0,x:1,y:2,id:3})}}const Se="docstring-tooltip";function nt(n,e){let t;function o(c){l(),t=new mt({props:{txt:e,x:c.pageX,y:c.pageY,id:Se},target:document.body})}function a(c){t.$set({x:c.pageX,y:c.pageY})}function d(){t.$destroy()}function l(){var p;const c=document.getElementById(Se);c&&((p=c.parentNode)==null||p.removeChild(c))}return n.addEventListener("mouseover",o),n.addEventListener("mouseleave",d),n.addEventListener("mousemove",a),{destroy(){n.removeEventListener("mouseover",o),n.removeEventListener("mouseleave",d),n.removeEventListener("mousemove",a)}}}function Ae(n,e,t){const o=n.slice();return o[16]=e[t].title,o[7]=e[t].parametersDescription,o}function De(n,e,t){const o=n.slice();return o[5]=e[t].anchor,o[19]=e[t].description,o}function Me(n,e,t){const o=n.slice();return o[6]=e[t].name,o[22]=e[t].val,o}function Qe(n){let e,t,o=n[6]+"",a,d,l=n[22]+"",c,p,g,i,r;function s(){return n[12](n[6])}return{c(){e=_("span"),t=_("span"),a=D(o),d=_("span"),c=D(l),this.h()},l(m){e=v(m,"SPAN",{class:!0});var k=b(e);t=v(k,"SPAN",{class:!0});var L=b(t);a=M(L,o),d=v(L,"SPAN",{class:!0});var A=b(d);c=M(A,l),A.forEach(u),L.forEach(u),k.forEach(u),this.h()},h(){h(d,"class","opacity-60"),h(t,"class","rounded hover:bg-black hover:text-white dark:hover:bg-white dark:hover:text-black"),h(e,"class",p="comma "+(n[10][n[6]]?"cursor-pointer":"cursor-default"))},m(m,k){O(m,e,k),f(e,t),f(t,a),f(t,d),f(d,c),i||(r=[Ye(g=nt.call(null,e,n[10][n[6]]||"")),we(e,"click",Je(Ke(s)))],i=!0)},p(m,k){n=m,k&1&&o!==(o=n[6]+"")&&he(a,o),k&1&&l!==(l=n[22]+"")&&he(c,l),k&1&&p!==(p="comma "+(n[10][n[6]]?"cursor-pointer":"cursor-default"))&&h(e,"class",p),g&&je(g.update)&&k&1&&g.update.call(null,n[10][n[6]]||"")},d(m){m&&u(e),i=!1,Ze(r)}}}function Re(n){let e,t,o,a,d=Ue(n[3])+"",l,c,p,g;return{c(){e=_("span"),t=D("\u2192"),o=T(),a=_("span"),this.h()},l(i){e=v(i,"SPAN",{class:!0});var r=b(e);t=M(r,"\u2192"),r.forEach(u),o=N(i),a=v(i,"SPAN",{class:!0});var s=b(a);s.forEach(u),this.h()},h(){h(e,"class","font-bold"),h(a,"class",l="rounded hover:bg-gray-400 "+(n[2]?"cursor-pointer":"cursor-default"))},m(i,r){O(i,e,r),f(e,t),O(i,o,r),O(i,a,r),a.innerHTML=d,p||(g=[Ye(c=nt.call(null,a,n[2]||"")),we(a,"click",Je(Ke(n[13])))],p=!0)},p(i,r){r&8&&d!==(d=Ue(i[3])+"")&&(a.innerHTML=d),r&4&&l!==(l="rounded hover:bg-gray-400 "+(i[2]?"cursor-pointer":"cursor-default"))&&h(a,"class",l),c&&je(c.update)&&r&4&&c.update.call(null,i[2]||"")},d(i){i&&u(e),i&&u(o),i&&u(a),p=!1,Ze(g)}}}function Fe(n){var g;let e,t,o,a=((g=n[7])==null?void 0:g.length)+"",d,l,c,p;return{c(){e=_("div"),t=_("button"),o=D("Expand "),d=D(a),l=D(" parameters"),this.h()},l(i){e=v(i,"DIV",{class:!0});var r=b(e);t=v(r,"BUTTON",{class:!0});var s=b(t);o=M(s,"Expand "),d=M(s,a),l=M(s," parameters"),s.forEach(u),r.forEach(u),this.h()},h(){h(t,"class","absolute leading-tight px-3 py-1.5 dark:bg-gray-900 bg-black text-gray-200 hover:text-white rounded-xl bottom-12 ring-offset-2 hover:ring-black hover:ring-2"),h(e,"class","absolute inset-0 bg-gradient-to-t from-white to-white/0 dark:from-gray-950 dark:to-gray-950/0 z-10 flex justify-center")},m(i,r){O(i,e,r),f(e,t),f(t,o),f(t,d),f(t,l),c||(p=we(t,"click",n[14]),c=!0)},p(i,r){var s;r&128&&a!==(a=((s=i[7])==null?void 0:s.length)+"")&&he(d,a)},d(i){i&&u(e),c=!1,p()}}}function He(n){let e,t,o,a,d,l,c=n[7],p=[];for(let i=0;i<c.length;i+=1)p[i]=Ie(De(n,c,i));const g=i=>J(p[i],1,1,()=>{p[i]=null});return{c(){e=_("p"),t=D("Parameters "),o=_("span"),a=T(),d=_("ul");for(let i=0;i<p.length;i+=1)p[i].c();this.h()},l(i){e=v(i,"P",{class:!0});var r=b(e);t=M(r,"Parameters "),o=v(r,"SPAN",{class:!0}),b(o).forEach(u),r.forEach(u),a=N(i),d=v(i,"UL",{class:!0});var s=b(d);for(let m=0;m<p.length;m+=1)p[m].l(s);s.forEach(u),this.h()},h(){h(o,"class","flex-auto border-t-2 border-gray-100 dark:border-gray-700 ml-3"),h(e,"class","flex items-center font-semibold !mt-2 !mb-2 text-gray-800"),h(d,"class","px-2")},m(i,r){O(i,e,r),f(e,t),f(e,o),O(i,a,r),O(i,d,r);for(let s=0;s<p.length;s+=1)p[s].m(d,null);l=!0},p(i,r){if(r&128){c=i[7];let s;for(s=0;s<c.length;s+=1){const m=De(i,c,s);p[s]?(p[s].p(m,r),Y(p[s],1)):(p[s]=Ie(m),p[s].c(),Y(p[s],1),p[s].m(d,null))}for($e(),s=c.length;s<p.length;s+=1)g(s);et()}},i(i){if(!l){for(let r=0;r<c.length;r+=1)Y(p[r]);l=!0}},o(i){p=p.filter(Boolean);for(let r=0;r<p.length;r+=1)J(p[r]);l=!1},d(i){i&&u(e),i&&u(a),i&&u(d),ke(p,i)}}}function Ie(n){let e,t,o,a,d,l,c,p,g,i=n[19]+"",r,s;return d=new me({props:{classNames:"text-smd"}}),{c(){e=_("li"),t=_("span"),o=_("a"),a=_("span"),ce(d.$$.fragment),p=T(),g=_("span"),r=T(),this.h()},l(m){e=v(m,"LI",{class:!0});var k=b(e);t=v(k,"SPAN",{class:!0});var L=b(t);o=v(L,"A",{id:!0,class:!0,href:!0});var A=b(o);a=v(A,"SPAN",{});var I=b(a);de(d.$$.fragment,I),I.forEach(u),A.forEach(u),p=N(L),g=v(L,"SPAN",{});var X=b(g);X.forEach(u),L.forEach(u),r=N(k),k.forEach(u),this.h()},h(){h(o,"id",l=n[5]),h(o,"class","header-link block pr-0.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(o,"href",c=`#${n[5]}`),h(t,"class","group flex space-x-1.5 items-start"),h(e,"class","text-base !pl-4 my-3")},m(m,k){O(m,e,k),f(e,t),f(t,o),f(o,a),ue(d,a,null),f(t,p),f(t,g),g.innerHTML=i,f(e,r),s=!0},p(m,k){(!s||k&128&&l!==(l=m[5]))&&h(o,"id",l),(!s||k&128&&c!==(c=`#${m[5]}`))&&h(o,"href",c),(!s||k&128)&&i!==(i=m[19]+"")&&(g.innerHTML=i)},i(m){s||(Y(d.$$.fragment,m),s=!0)},o(m){J(d.$$.fragment,m),s=!1},d(m){m&&u(e),pe(d)}}}function Ve(n){let e,t=n[1],o=[];for(let a=0;a<t.length;a+=1)o[a]=We(Ae(n,t,a));return{c(){for(let a=0;a<o.length;a+=1)o[a].c();e=re()},l(a){for(let d=0;d<o.length;d+=1)o[d].l(a);e=re()},m(a,d){for(let l=0;l<o.length;l+=1)o[l].m(a,d);O(a,e,d)},p(a,d){if(d&2){t=a[1];let l;for(l=0;l<t.length;l+=1){const c=Ae(a,t,l);o[l]?o[l].p(c,d):(o[l]=We(c),o[l].c(),o[l].m(e.parentNode,e))}for(;l<o.length;l+=1)o[l].d(1);o.length=t.length}},d(a){ke(o,a),a&&u(e)}}}function We(n){let e,t=n[16]+"",o,a,d,l,c,p=n[7]+"";return{c(){e=_("p"),o=D(t),a=T(),d=_("span"),l=T(),c=_("p"),this.h()},l(g){e=v(g,"P",{class:!0});var i=b(e);o=M(i,t),a=N(i),d=v(i,"SPAN",{class:!0}),b(d).forEach(u),i.forEach(u),l=N(g),c=v(g,"P",{});var r=b(c);r.forEach(u),this.h()},h(){h(d,"class","flex-auto border-t-2 ml-3"),h(e,"class","flex items-center font-semibold")},m(g,i){O(g,e,i),f(e,o),f(e,a),f(e,d),O(g,l,i),O(g,c,i),c.innerHTML=p},p(g,i){i&2&&t!==(t=g[16]+"")&&he(o,t),i&2&&p!==(p=g[7]+"")&&(c.innerHTML=p)},d(g){g&&u(e),g&&u(l),g&&u(c)}}}function Be(n){let e,t,o,a,d,l,c,p,g,i=(n[2]||"")+"",r=!!n[3]&&Xe(n);return{c(){e=_("div"),t=_("p"),o=D("Returns"),a=T(),r&&r.c(),d=T(),l=_("span"),p=T(),g=_("p"),this.h()},l(s){e=v(s,"DIV",{class:!0,id:!0});var m=b(e);t=v(m,"P",{class:!0});var k=b(t);o=M(k,"Returns"),k.forEach(u),a=N(m),r&&r.l(m),d=N(m),l=v(m,"SPAN",{class:!0}),b(l).forEach(u),m.forEach(u),p=N(s),g=v(s,"P",{class:!0});var L=b(g);L.forEach(u),this.h()},h(){h(t,"class","text-base"),h(l,"class","flex-auto border-t-2 border-gray-100 dark:border-gray-700"),h(e,"class","flex items-center font-semibold space-x-3 text-base !mt-0 !mb-0 text-gray-800"),h(e,"id",c=`${n[5]}.returns`),h(g,"class","text-base")},m(s,m){O(s,e,m),f(e,t),f(t,o),f(e,a),r&&r.m(e,null),f(e,d),f(e,l),O(s,p,m),O(s,g,m),g.innerHTML=i},p(s,m){s[3]?r?r.p(s,m):(r=Xe(s),r.c(),r.m(e,d)):r&&(r.d(1),r=null),m&32&&c!==(c=`${s[5]}.returns`)&&h(e,"id",c),m&4&&i!==(i=(s[2]||"")+"")&&(g.innerHTML=i)},d(s){s&&u(e),r&&r.d(),s&&u(p),s&&u(g)}}}function Xe(n){let e,t;return{c(){e=new tt,t=re(),this.h()},l(o){e=ot(o),t=re(),this.h()},h(){e.a=t},m(o,a){e.m(n[3],o,a),O(o,t,a)},p(o,a){a&8&&e.p(o[3])},d(o){o&&u(t),o&&e.d()}}}function gt(n){let e,t,o,a=Ge(n[6])+"",d,l,c,p,g,i,r,s,m,k,L,A,I,X,y,E,V,G,te,j,z,W,K,ie,q,oe,Z,ne,ae,B;c=new me({});let U=n[0],S=[];for(let w=0;w<U.length;w+=1)S[w]=Qe(Me(n,U,w));let Q=n[3]&&Re(n),R=n[9]&&Fe(n),P=!!n[7]&&He(n),F=n[1]&&Ve(n),H=!!n[3]&&Be(n);return{c(){e=_("div"),t=_("span"),o=new tt,d=T(),l=_("a"),ce(c.$$.fragment),g=T(),i=_("a"),r=_("span"),s=D("<"),m=T(),k=_("span"),L=D("source"),A=T(),I=_("span"),X=D(">"),y=T(),E=_("p"),V=_("span"),G=D("("),te=T();for(let w=0;w<S.length;w+=1)S[w].c();j=T(),z=_("span"),W=D(")"),K=T(),Q&&Q.c(),ie=T(),q=_("div"),R&&R.c(),oe=T(),P&&P.c(),Z=T(),F&&F.c(),ne=T(),H&&H.c(),this.h()},l(w){e=v(w,"DIV",{});var C=b(e);t=v(C,"SPAN",{class:!0,id:!0});var x=b(t);o=ot(x),d=N(x),l=v(x,"A",{id:!0,class:!0,href:!0});var se=b(l);de(c.$$.fragment,se),se.forEach(u),g=N(x),i=v(x,"A",{class:!0,href:!0,target:!0});var le=b(i);r=v(le,"SPAN",{});var ze=b(r);s=M(ze,"<"),ze.forEach(u),m=N(le),k=v(le,"SPAN",{class:!0});var Ee=b(k);L=M(Ee,"source"),Ee.forEach(u),A=N(le),I=v(le,"SPAN",{});var Te=b(I);X=M(Te,">"),Te.forEach(u),le.forEach(u),x.forEach(u),y=N(C),E=v(C,"P",{class:!0});var $=b(E);V=v($,"SPAN",{});var Ne=b(V);G=M(Ne,"("),Ne.forEach(u),te=N($);for(let ge=0;ge<S.length;ge+=1)S[ge].l($);j=N($),z=v($,"SPAN",{});var Oe=b(z);W=M(Oe,")"),Oe.forEach(u),K=N($),Q&&Q.l($),$.forEach(u),ie=N(C),q=v(C,"DIV",{class:!0});var ee=b(q);R&&R.l(ee),oe=N(ee),P&&P.l(ee),Z=N(ee),F&&F.l(ee),ne=N(ee),H&&H.l(ee),ee.forEach(u),C.forEach(u),this.h()},h(){o.a=d,h(l,"id",n[5]),h(l,"class","header-link invisible with-hover:group-hover:visible pr-2"),h(l,"href",p="#"+n[5]),h(k,"class","hidden md:block mx-0.5 hover:!underline"),h(i,"class","!ml-auto !text-gray-400 !no-underline text-sm flex items-center"),h(i,"href",n[4]),h(i,"target","_blank"),h(t,"class","group flex space-x-1.5 items-center text-gray-800 bg-gradient-to-r rounded-tr-lg -mt-4 -ml-4 pt-3 px-2.5"),h(t,"id",n[5]),h(E,"class","font-mono text-xs md:text-sm !leading-relaxed !my-6"),h(q,"class",ae="!mb-10 relative docstring-details "+(n[9]?"max-h-96 overflow-hidden":""))},m(w,C){O(w,e,C),f(e,t),o.m(a,t),f(t,d),f(t,l),ue(c,l,null),f(t,g),f(t,i),f(i,r),f(r,s),f(i,m),f(i,k),f(k,L),f(i,A),f(i,I),f(I,X),f(e,y),f(e,E),f(E,V),f(V,G),f(E,te);for(let x=0;x<S.length;x+=1)S[x].m(E,null);f(E,j),f(E,z),f(z,W),f(E,K),Q&&Q.m(E,null),f(e,ie),f(e,q),R&&R.m(q,null),f(q,oe),P&&P.m(q,null),f(q,Z),F&&F.m(q,null),f(q,ne),H&&H.m(q,null),n[15](q),B=!0},p(w,[C]){if((!B||C&64)&&a!==(a=Ge(w[6])+"")&&o.p(a),(!B||C&32)&&h(l,"id",w[5]),(!B||C&32&&p!==(p="#"+w[5]))&&h(l,"href",p),(!B||C&16)&&h(i,"href",w[4]),(!B||C&32)&&h(t,"id",w[5]),C&3105){U=w[0];let x;for(x=0;x<U.length;x+=1){const se=Me(w,U,x);S[x]?S[x].p(se,C):(S[x]=Qe(se),S[x].c(),S[x].m(E,j))}for(;x<S.length;x+=1)S[x].d(1);S.length=U.length}w[3]?Q?Q.p(w,C):(Q=Re(w),Q.c(),Q.m(E,null)):Q&&(Q.d(1),Q=null),w[9]?R?R.p(w,C):(R=Fe(w),R.c(),R.m(q,oe)):R&&(R.d(1),R=null),w[7]?P?(P.p(w,C),C&128&&Y(P,1)):(P=He(w),P.c(),Y(P,1),P.m(q,Z)):P&&($e(),J(P,1,1,()=>{P=null}),et()),w[1]?F?F.p(w,C):(F=Ve(w),F.c(),F.m(q,ne)):F&&(F.d(1),F=null),w[3]?H?H.p(w,C):(H=Be(w),H.c(),H.m(q,null)):H&&(H.d(1),H=null),(!B||C&512&&ae!==(ae="!mb-10 relative docstring-details "+(w[9]?"max-h-96 overflow-hidden":"")))&&h(q,"class",ae)},i(w){B||(Y(c.$$.fragment,w),Y(P),B=!0)},o(w){J(c.$$.fragment,w),J(P),B=!1},d(w){w&&u(e),pe(c),ke(S,w),Q&&Q.d(),R&&R.d(),P&&P.d(),F&&F.d(),H&&H.d(),n[15](null)}}}function Ge(n){if(n.startsWith("class ")){const e=n.substring(6).split("."),t=e.pop();return`<span class="flex-1 break-all md:text-lg bg-gradient-to-r px-2.5 py-1.5 rounded-xl from-indigo-50/70 to-white dark:from-gray-900 dark:to-gray-950 dark:text-indigo-300 text-indigo-700"><svg class="mr-1.5 text-indigo-500 inline-block -mt-0.5" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" focusable="false" role="img" width=".8em" height=".8em" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path class="uim-quaternary" d="M20.23 7.24L12 12L3.77 7.24a1.98 1.98 0 0 1 .7-.71L11 2.76c.62-.35 1.38-.35 2 0l6.53 3.77c.29.173.531.418.7.71z" opacity=".25" fill="currentColor"></path><path class="uim-tertiary" d="M12 12v9.5a2.09 2.09 0 0 1-.91-.21L4.5 17.48a2.003 2.003 0 0 1-1-1.73v-7.5a2.06 2.06 0 0 1 .27-1.01L12 12z" opacity=".5" fill="currentColor"></path><path class="uim-primary" d="M20.5 8.25v7.5a2.003 2.003 0 0 1-1 1.73l-6.62 3.82c-.275.13-.576.198-.88.2V12l8.23-4.76c.175.308.268.656.27 1.01z" fill="currentColor"></path></svg><span class="font-light">class</span> <span class="font-medium">${e.join(".")}.</span><span class="font-semibold">${t}</span></span>`}else return`<span class="flex-1 rounded-xl py-0.5 break-all bg-gradient-to-r from-blue-50/60 to-white dark:from-gray-900 dark:to-gray-950 text-blue-700 dark:text-blue-300 font-medium px-2"><svg width="1em" height="1em" viewBox="0 0 32 33" class="mr-1 inline-block -mt-0.5"  xmlns="http://www.w3.org/2000/svg"><path d="M5.80566 18.3545C4.90766 17.4565 4.90766 16.0005 5.80566 15.1025L14.3768 6.53142C15.2748 5.63342 16.7307 5.63342 17.6287 6.53142L26.1999 15.1025C27.0979 16.0005 27.0979 17.4565 26.1999 18.3545L17.6287 26.9256C16.7307 27.8236 15.2748 27.8236 14.3768 26.9256L5.80566 18.3545Z" fill="currentColor" fill-opacity="0.25"/><path fill-rule="evenodd" clip-rule="evenodd" d="M16.4801 13.9619C16.4801 12.9761 16.7467 12.5436 16.9443 12.3296C17.1764 12.078 17.5731 11.8517 18.2275 11.707C18.8821 11.5623 19.638 11.5342 20.4038 11.5582C20.7804 11.57 21.1341 11.5932 21.4719 11.6156L21.5263 11.6193C21.8195 11.6389 22.1626 11.6618 22.4429 11.6618V7.40825C22.3209 7.40825 22.1219 7.39596 21.7544 7.37149C21.4202 7.34925 20.9976 7.32115 20.5371 7.30672C19.6286 7.27824 18.4672 7.29779 17.3093 7.55377C16.1512 7.8098 14.8404 8.33724 13.8181 9.4452C12.7612 10.5907 12.2266 12.1236 12.2266 13.9619V15.0127H10.6836V19.2662H12.2266V26.6332H16.4801V19.2662H20.3394V15.0127H16.4801V13.9619Z" fill="currentColor"/></svg>${n}</span>`}function Ue(n){const e=/\s*<p>(((?!<p>).)*)<\/p>\s*/gms;return n.replace(e,(t,o)=>`<span>${o}</span>`)}function _t(n,e,t){let{anchor:o}=e,{name:a}=e,{parameters:d=[]}=e,{parametersDescription:l}=e,{parameterGroups:c}=e,{returnDescription:p}=e,{returnType:g}=e,{source:i}=e,r,s=!1;const m=(l==null?void 0:l.reduce((y,E)=>{const{name:V,description:G}=E;return Le(qe({},y),{[V]:G})},{}))||{};ct(()=>{const{hash:y}=window.location,E=!!y&&(l==null?void 0:l.some(({anchor:V})=>V===y.substring(1)));t(9,s=!E&&r.clientHeight>500)});async function k(y,E){E&&(t(9,s=!1),await dt(),window.location.hash=y)}const L=y=>k(`${o}.${y}`,!!m[y]),A=()=>k(`${o}.returns`,!!p),I=()=>t(9,s=!1);function X(y){ut[y?"unshift":"push"](()=>{r=y,t(8,r)})}return n.$$set=y=>{"anchor"in y&&t(5,o=y.anchor),"name"in y&&t(6,a=y.name),"parameters"in y&&t(0,d=y.parameters),"parametersDescription"in y&&t(7,l=y.parametersDescription),"parameterGroups"in y&&t(1,c=y.parameterGroups),"returnDescription"in y&&t(2,p=y.returnDescription),"returnType"in y&&t(3,g=y.returnType),"source"in y&&t(4,i=y.source)},[d,c,p,g,i,o,a,l,r,s,m,k,L,A,I,X]}class vt extends ve{constructor(e){super();be(this,e,_t,gt,ye,{anchor:5,name:6,parameters:0,parametersDescription:7,parameterGroups:1,returnDescription:2,returnType:3,source:4})}}function bt(n){let e,t,o,a,d,l,c,p,g,i,r,s,m,k,L,A,I,X,y,E,V,G,te,j;return l=new me({}),k=new me({}),E=new vt({props:{name:"class optimum.ORTConfig",anchor:"optimum.ORTConfig",parameters:[{name:"opset",val:": typing.Optional[int] = None"},{name:"opt_level",val:": typing.Optional[int] = None"},{name:"use_gpu",val:": typing.Optional[bool] = False"},{name:"only_onnxruntime",val:": typing.Optional[bool] = False"},{name:"quantization_approach",val:": typing.Optional[str] = None"},{name:"optimize_model",val:": typing.Optional[bool] = True"},{name:"per_channel",val:": typing.Optional[bool] = False"},{name:"reduce_range",val:": typing.Optional[bool] = False"},{name:"activation_type",val:": typing.Optional[str] = 'uint8'"},{name:"weight_type",val:": typing.Optional[str] = 'uint8'"},{name:"quant_format",val:": typing.Optional[str] = 'operator'"},{name:"calibration_method",val:": typing.Optional[str] = 'minmax'"},{name:"split",val:": typing.Optional[str] = 'train'"},{name:"max_samples",val:": typing.Optional[int] = 80"},{name:"calib_batch_size",val:": typing.Optional[int] = 8"},{name:"seed",val:": typing.Optional[int] = 42"},{name:"use_external_data_format",val:": typing.Optional[bool] = False"},{name:"op_types_to_quantize",val:": typing.Optional[typing.List] = None"},{name:"nodes_to_quantize",val:": typing.Optional[typing.List] = None"},{name:"nodes_to_exclude",val:": typing.Optional[typing.List] = None"},{name:"extra_options",val:": typing.Union[typing.Dict[str, typing.Any], NoneType] = None"}],source:"https://github.com/huggingface/optimum/blob/pr_86/src/optimum/onnxruntime/configuration.py#L20",parametersDescription:[{anchor:"optimum.ORTConfig.opset",description:`<strong>opset</strong> (<code>int</code>, <code>optional</code>) &#x2014;
ONNX opset version to export the model with.`,name:"opset"},{anchor:"optimum.ORTConfig.use_external_data_format",description:`<strong>use_external_data_format</strong> (<code>bool</code>, <code>optional</code>, defaults to <code>False</code>) &#x2014;
Allow exporting model &gt;= than 2Gb.`,name:"use_external_data_format"},{anchor:"optimum.ORTConfig.seed",description:`<strong>seed</strong> (<code>int</code>, <code>optional</code>, defaults to 42) &#x2014;
The seed used to ensure reproducibility across runs.`,name:"seed"}],parameterGroups:[{title:"Parameters for optimization",parametersDescription:`
<ul>
<li><strong>opt_level</strong> (<code>int</code>, <code>optional</code>) \u2014
Optimization level performed by ONNX Runtime of the loaded graph.
Supported optimization level are 0, 1, 2 and 99.
0 will disable all optimizations.
1 will enable basic optimizations.
2 will enable basic and extended optimizations, including complex node fusions applied to the nodes
assigned to the CPU or CUDA execution provider, making the resulting optimized graph hardware dependent.
99 will enable all available optimizations including layout optimizations.</li>
<li><strong>use_gpu</strong> (<code>bool</code>, <code>optional</code>, defaults to <code>False</code>) \u2014
Whether to optimize the model for GPU inference.
The optimized graph might contain operators for GPU or CPU only when opt_level > 1.</li>
<li><strong>only_onnxruntime</strong> (<code>bool</code>, <code>optional</code>, defaults to <code>False</code>) \u2014
Whether to only use ONNX Runtime to optimize the model and no graph fusion in Python.</li>
</ul>
`},{title:"Parameters for quantization",parametersDescription:`
<ul>
<li><strong>quantization_approach</strong> (<code>str</code>, <code>optional</code>) \u2014
The quantization approach to apply. Supported approach are static and dynamic.</li>
<li><strong>optimize_model</strong> (<code>bool</code>, <code>optional</code>, defaults to <code>True</code>) \u2014
Whether to optimize the model before quantization.</li>
<li><strong>per_channel</strong> (<code>bool</code>, <code>optional</code>, defaults to <code>False</code>) \u2014
Whether to quantize the weights per channel.</li>
<li><strong>reduce_range</strong> (<code>bool</code>, <code>optional</code>, defaults to <code>False</code>) \u2014
Whether to quantize the weights with 7-bits. It may improve the accuracy for some models running on
non-VNNI machine, especially for per-channel mode</li>
<li><strong>activation_type</strong> (<code>str</code>, <code>optional</code>, defaults to <code>"uint8"</code>) \u2014
The quantization data type of activation.
Currently, OnnxRuntime CPU only supports activation with type uint8.</li>
<li><strong>weight_type</strong> (<code>str</code>, <code>optional</code>, defaults to <code>"uint8"</code>) \u2014
The quantization data type of weight. Supported data type are uint8 and int8.</li>
<li><strong>quant_format</strong> (<code>str</code>, <code>optional</code>, defaults to <code>"operator"</code>) \u2014
ONNX quantization representation format.
Supported quantization representation format are \u201Coperator\u201D and \u201Cqdq\u201D.
\u201Coperator\u201D : Operator Oriented (QOperator) : all the quantized operators have their own ONNX definitions.
\u201Cqdq\u201D : Tensor Oriented (QDQ) : this format quantize the model by inserting QuantizeLinear/DeQuantizeLinear
on the tensor to simulate the quantize and dequantize process.
QuantizeLinear and DeQuantizeLinear operators carry the quantization parameters.</li>
<li><strong>calibration_method</strong> (<code>str</code>, <code>optional</code>, defaults to <code>"minmax"</code>) \u2014
The method chosen to calculate the activations quantization parameters using the calibration dataset.
Current supported calibration methods are \u201Cminmax\u201D, \u201Centropy\u201D and \u201Cpercentile\u201D.</li>
<li><strong>split</strong> (<code>str</code>, <code>optional</code>, defaults to <code>"train"</code>) \u2014
Which split of the calibration dataset to load.
Depending on the calibration dataset to load, the possible values are \u201Ctrain\u201D, \u201Cvalidation\u201D and \u201Ctest\u201D.</li>
<li><strong>max_samples</strong> (<code>int</code>, <code>optional</code>, defaults to 80) \u2014
Maximum number of examples to use for the calibration step resulting from static quantization.</li>
<li><strong>calib_batch_size</strong> (<code>int</code>, <code>optional</code>, defaults to 8) \u2014
The batch size to use for the calibration step resulting from static quantization.</li>
<li><strong>op_types_to_quantize</strong> (<code>List</code>, <code>optional</code>) \u2014
List of the types of operators to quantize. By default, all the supported operators are quantized.</li>
<li><strong>nodes_to_quantize</strong> (<code>List</code>, <code>optional</code>) \u2014
List of the nodes names to quantize.</li>
<li><strong>nodes_to_exclude</strong> (<code>List</code>, <code>optional</code>) \u2014
List of the nodes names to exclude when applying quantization.</li>
<li><strong>extra_options</strong> (<code>Dict[str, Any]</code>, <code>optional</code>) \u2014
The dictionary mapping each extra options to the desired value, such as :
ActivationSymmetric (<code>bool</code>, <code>optional</code>, defaults to <code>False</code>):
Symmetrize calibration data for activations.
WeightSymmetric (<code>bool</code>, <code>optional</code>, defaults to <code>True</code>):
Symmetrize calibration data for weights.
EnableSubgraph (<code>bool</code>, <code>optional</code>, defaults to <code>False</code>):
If enabled, subgraph will be quantized.
DisableShapeInference (<code>bool</code>, <code>optional</code>, defaults to <code>False</code>):
In dynamic quantization mode, shape inference is not mandatory and can be disabled in case it causes
issues.
ForceQuantizeNoInputCheck (<code>bool</code>, <code>optional</code>, defaults to <code>False</code>):
By default, the outputs of some latent operators such as maxpool or transpose are not quantized if
the corresponding input is not already quantized. When set to True, this option will force such
operator to always quantize their input, resulting in quantized output.
MatMulConstBOnly (<code>bool</code>, <code>optional</code>, defaults to <code>False</code>):
If enabled, only MatMul with const B will be quantized.
AddQDQPairToWeight (<code>bool</code>, <code>optional</code>, defaults to <code>False</code>):
By default, floating-point weights are quantized and feed to solely inserted DeQuantizeLinear node.
If set to True, the floating-point weights will remain and both QuantizeLinear/DeQuantizeLinear
nodes will be inserted.
OpTypesToExcludeOutputQuantization (<code>List</code>, <code>optional</code>, defaults to <code>[]</code>):
If any op type is specified, the output of ops with this specific op types will not be quantized.
DedicatedQDQPair (<code>bool</code>, <code>optional</code>, defaults to <code>False</code>):
When inserting QDQ pair, multiple nodes can share a single QDQ pair as their inputs. If True, it
will create an identical and dedicated QDQ pair for each node.
QDQOpTypePerChannelSupportToAxis (<code>Dict</code>, <code>optional</code>, defaults to <code>&#123;&#125;</code>):
Set the channel axis for a specific op type. Effective only when per channel quantization is
supported and per_channel is set to True.</li>
</ul>
`}]}}),{c(){e=_("meta"),t=T(),o=_("h1"),a=_("a"),d=_("span"),ce(l.$$.fragment),c=T(),p=_("span"),g=D("Configuration"),i=T(),r=_("h2"),s=_("a"),m=_("span"),ce(k.$$.fragment),L=T(),A=_("span"),I=D("ORTConfig"),X=T(),y=_("div"),ce(E.$$.fragment),V=T(),G=_("p"),te=D("ORTConfig is the configuration class handling all the ONNX Runtime optimization and quantization parameters."),this.h()},l(z){const W=pt('[data-svelte="svelte-1phssyn"]',document.head);e=v(W,"META",{name:!0,content:!0}),W.forEach(u),t=N(z),o=v(z,"H1",{class:!0});var K=b(o);a=v(K,"A",{id:!0,class:!0,href:!0});var ie=b(a);d=v(ie,"SPAN",{});var q=b(d);de(l.$$.fragment,q),q.forEach(u),ie.forEach(u),c=N(K),p=v(K,"SPAN",{});var oe=b(p);g=M(oe,"Configuration"),oe.forEach(u),K.forEach(u),i=N(z),r=v(z,"H2",{class:!0});var Z=b(r);s=v(Z,"A",{id:!0,class:!0,href:!0});var ne=b(s);m=v(ne,"SPAN",{});var ae=b(m);de(k.$$.fragment,ae),ae.forEach(u),ne.forEach(u),L=N(Z),A=v(Z,"SPAN",{});var B=b(A);I=M(B,"ORTConfig"),B.forEach(u),Z.forEach(u),X=N(z),y=v(z,"DIV",{class:!0});var U=b(y);de(E.$$.fragment,U),V=N(U),G=v(U,"P",{});var S=b(G);te=M(S,"ORTConfig is the configuration class handling all the ONNX Runtime optimization and quantization parameters."),S.forEach(u),U.forEach(u),this.h()},h(){h(e,"name","hf:doc:metadata"),h(e,"content",JSON.stringify(yt)),h(a,"id","configuration"),h(a,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(a,"href","#configuration"),h(o,"class","relative group"),h(s,"id","optimum.ORTConfig"),h(s,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),h(s,"href","#optimum.ORTConfig"),h(r,"class","relative group"),h(y,"class","docstring")},m(z,W){f(document.head,e),O(z,t,W),O(z,o,W),f(o,a),f(a,d),ue(l,d,null),f(o,c),f(o,p),f(p,g),O(z,i,W),O(z,r,W),f(r,s),f(s,m),ue(k,m,null),f(r,L),f(r,A),f(A,I),O(z,X,W),O(z,y,W),ue(E,y,null),f(y,V),f(y,G),f(G,te),j=!0},p:_e,i(z){j||(Y(l.$$.fragment,z),Y(k.$$.fragment,z),Y(E.$$.fragment,z),j=!0)},o(z){J(l.$$.fragment,z),J(k.$$.fragment,z),J(E.$$.fragment,z),j=!1},d(z){u(e),z&&u(t),z&&u(o),pe(l),z&&u(i),z&&u(r),pe(k),z&&u(X),z&&u(y),pe(E)}}}const yt={local:"configuration",sections:[{local:"optimum.ORTConfig",title:"ORTConfig"}],title:"Configuration"};function wt(n,e,t){let{fw:o}=e;return n.$$set=a=>{"fw"in a&&t(0,o=a.fw)},[o]}class Tt extends ve{constructor(e){super();be(this,e,wt,bt,ye,{fw:0})}}export{Tt as default,yt as metadata};
