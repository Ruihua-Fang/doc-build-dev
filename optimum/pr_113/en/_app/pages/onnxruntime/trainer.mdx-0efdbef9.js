import{S as gt,i as ft,s as _t,e as r,k as m,w as y,t as i,M as yt,c as a,d as n,m as p,a as o,x as $,h as s,b as c,F as e,g as J,y as T,L as $t,q as b,o as O,B as k,v as Tt}from"../../chunks/vendor-19e06bd2.js";import{D as W}from"../../chunks/Docstring-395e5a9c.js";import{I as vt}from"../../chunks/IconCopyLink-3c713d38.js";function bt(et){let u,ie,h,w,j,A,$e,G,Te,se,v,x,K,C,be,Q,Oe,le,l,I,ke,N,S,we,Y,xe,Ne,E,M,Ee,z,Re,Z,De,Le,Pe,R,V,Ae,g,Ce,ee,Ie,Se,te,Me,ze,Ve,D,U,Ue,q,qe,ne,Be,He,We,L,B,Xe,f,Fe,re,Je,je,ae,Ge,Ke,Qe,P,H,Ye,oe,Ze,me;return A=new vt({}),C=new vt({}),I=new W({props:{name:"class optimum.onnxruntime.ORTTrainer",anchor:"optimum.onnxruntime.ORTTrainer",parameters:[{name:"model",val:": typing.Union[transformers.modeling_utils.PreTrainedModel, torch.nn.modules.module.Module] = None"},{name:"tokenizer",val:": typing.Optional[transformers.tokenization_utils_base.PreTrainedTokenizerBase] = None"},{name:"feature",val:": str = 'default'"},{name:"args",val:": TrainingArguments = None"},{name:"data_collator",val:": typing.Optional[DataCollator] = None"},{name:"train_dataset",val:": typing.Optional[torch.utils.data.dataset.Dataset] = None"},{name:"eval_dataset",val:": typing.Optional[torch.utils.data.dataset.Dataset] = None"},{name:"model_init",val:": typing.Callable[[], transformers.modeling_utils.PreTrainedModel] = None"},{name:"compute_metrics",val:": typing.Union[typing.Callable[[transformers.trainer_utils.EvalPrediction], typing.Dict], NoneType] = None"},{name:"callbacks",val:": typing.Optional[typing.List[transformers.trainer_callback.TrainerCallback]] = None"},{name:"optimizers",val:": typing.Tuple[torch.optim.optimizer.Optimizer, torch.optim.lr_scheduler.LambdaLR] = (None, None)"},{name:"onnx_model_path",val:": typing.Union[str, os.PathLike] = None"}],source:"https://github.com/huggingface/optimum/blob/pr_113/src/optimum/onnxruntime/trainer.py#L146"}}),S=new W({props:{name:"compute_loss_ort",anchor:"optimum.onnxruntime.ORTTrainer.compute_loss_ort",parameters:[{name:"model",val:""},{name:"inputs",val:""},{name:"input_names",val:""},{name:"output_names",val:""},{name:"return_outputs",val:" = False"}],source:"https://github.com/huggingface/optimum/blob/pr_113/src/optimum/onnxruntime/trainer.py#L1201"}}),M=new W({props:{name:"evaluate",anchor:"optimum.onnxruntime.ORTTrainer.evaluate",parameters:[{name:"eval_dataset",val:": typing.Optional[torch.utils.data.dataset.Dataset] = None"},{name:"ignore_keys",val:": typing.Optional[typing.List[str]] = None"},{name:"metric_key_prefix",val:": str = 'eval'"}],source:"https://github.com/huggingface/optimum/blob/pr_113/src/optimum/onnxruntime/trainer.py#L665"}}),V=new W({props:{name:"evaluation_loop_ort",anchor:"optimum.onnxruntime.ORTTrainer.evaluation_loop_ort",parameters:[{name:"dataloader",val:": DataLoader"},{name:"description",val:": str"},{name:"prediction_loss_only",val:": typing.Optional[bool] = None"},{name:"ignore_keys",val:": typing.Optional[typing.List[str]] = None"},{name:"metric_key_prefix",val:": str = 'eval'"}],source:"https://github.com/huggingface/optimum/blob/pr_113/src/optimum/onnxruntime/trainer.py#L744"}}),U=new W({props:{name:"predict",anchor:"optimum.onnxruntime.ORTTrainer.predict",parameters:[{name:"test_dataset",val:": Dataset"},{name:"ignore_keys",val:": typing.Optional[typing.List[str]] = None"},{name:"metric_key_prefix",val:": str = 'test'"}],source:"https://github.com/huggingface/optimum/blob/pr_113/src/optimum/onnxruntime/trainer.py#L713"}}),B=new W({props:{name:"prediction_loop_ort",anchor:"optimum.onnxruntime.ORTTrainer.prediction_loop_ort",parameters:[{name:"dataloader",val:": DataLoader"},{name:"description",val:": str"},{name:"prediction_loss_only",val:": typing.Optional[bool] = None"},{name:"ignore_keys",val:": typing.Optional[typing.List[str]] = None"},{name:"metric_key_prefix",val:": str = 'eval'"}],source:"https://github.com/huggingface/optimum/blob/pr_113/src/optimum/onnxruntime/trainer.py#L950"}}),H=new W({props:{name:"train",anchor:"optimum.onnxruntime.ORTTrainer.train",parameters:[{name:"resume_from_checkpoint",val:": typing.Union[bool, str, NoneType] = None"},{name:"trial",val:": typing.Union[ForwardRef('optuna.Trial'), typing.Dict[str, typing.Any]] = None"},{name:"ignore_keys_for_eval",val:": typing.Optional[typing.List[str]] = None"},{name:"**kwargs",val:""}],source:"https://github.com/huggingface/optimum/blob/pr_113/src/optimum/onnxruntime/trainer.py#L183",parametersDescription:[{anchor:"optimum.onnxruntime.ORTTrainer.train.resume_from_checkpoint",description:`<strong>resume_from_checkpoint</strong> (<code>str</code> or <code>bool</code>, <em>optional</em>) &#x2014;
If a <code>str</code>, local path to a saved checkpoint as saved by a previous instance of <code>Trainer</code>. If a
<code>bool</code> and equals <code>True</code>, load the last checkpoint in <em>args.output_dir</em> as saved by a previous instance
of <code>Trainer</code>. If present, training will resume from the model/optimizer/scheduler states loaded here.`,name:"resume_from_checkpoint"},{anchor:"optimum.onnxruntime.ORTTrainer.train.trial",description:`<strong>trial</strong> (<code>optuna.Trial</code> or <code>Dict[str, Any]</code>, <em>optional</em>) &#x2014;
The trial run or the hyperparameter dictionary for hyperparameter search.`,name:"trial"},{anchor:"optimum.onnxruntime.ORTTrainer.train.ignore_keys_for_eval",description:`<strong>ignore_keys_for_eval</strong> (<code>List[str]</code>, <em>optional</em>) &#x2014;
A list of keys in the output of your model (if it is a dictionary) that should be ignored when
gathering predictions for evaluation during the training.
kwargs &#x2014;
Additional keyword arguments used to hide deprecated arguments`,name:"ignore_keys_for_eval"}]}}),{c(){u=r("meta"),ie=m(),h=r("h1"),w=r("a"),j=r("span"),y(A.$$.fragment),$e=m(),G=r("span"),Te=i("Trainer"),se=m(),v=r("h2"),x=r("a"),K=r("span"),y(C.$$.fragment),be=m(),Q=r("span"),Oe=i("ORTTrainer"),le=m(),l=r("div"),y(I.$$.fragment),ke=m(),N=r("div"),y(S.$$.fragment),we=m(),Y=r("p"),xe=i(`How the loss is computed by Trainer. By default, all models return the loss in the first element.
Subclass and override for custom behavior.`),Ne=m(),E=r("div"),y(M.$$.fragment),Ee=m(),z=r("p"),Re=i("Run evaluation within ONNX Runtime backend and returns metrics.(Overriden from "),Z=r("code"),De=i("Trainer.evaluate()"),Le=i(")"),Pe=m(),R=r("div"),y(V.$$.fragment),Ae=m(),g=r("p"),Ce=i("Prediction/evaluation loop, shared by "),ee=r("code"),Ie=i("ORTTrainer.evaluate()"),Se=i(" and "),te=r("code"),Me=i("ORTTrainer.predict()"),ze=i(`.
Works both with or without labels.`),Ve=m(),D=r("div"),y(U.$$.fragment),Ue=m(),q=r("p"),qe=i(`Run prediction within ONNX Runtime backend and returns predictions and potential metrics.
(Overriden from `),ne=r("code"),Be=i("Trainer.predict()"),He=i(")"),We=m(),L=r("div"),y(B.$$.fragment),Xe=m(),f=r("p"),Fe=i("Prediction/evaluation loop, shared by "),re=r("code"),Je=i("Trainer.evaluate()"),je=i(" and "),ae=r("code"),Ge=i("Trainer.predict()"),Ke=i(`.
Works both with or without labels.`),Qe=m(),P=r("div"),y(H.$$.fragment),Ye=m(),oe=r("p"),Ze=i("Main onnxruntime training entry point."),this.h()},l(t){const _=yt('[data-svelte="svelte-1phssyn"]',document.head);u=a(_,"META",{name:!0,content:!0}),_.forEach(n),ie=p(t),h=a(t,"H1",{class:!0});var pe=o(h);w=a(pe,"A",{id:!0,class:!0,href:!0});var tt=o(w);j=a(tt,"SPAN",{});var nt=o(j);$(A.$$.fragment,nt),nt.forEach(n),tt.forEach(n),$e=p(pe),G=a(pe,"SPAN",{});var rt=o(G);Te=s(rt,"Trainer"),rt.forEach(n),pe.forEach(n),se=p(t),v=a(t,"H2",{class:!0});var ce=o(v);x=a(ce,"A",{id:!0,class:!0,href:!0});var at=o(x);K=a(at,"SPAN",{});var ot=o(K);$(C.$$.fragment,ot),ot.forEach(n),at.forEach(n),be=p(ce),Q=a(ce,"SPAN",{});var it=o(Q);Oe=s(it,"ORTTrainer"),it.forEach(n),ce.forEach(n),le=p(t),l=a(t,"DIV",{class:!0});var d=o(l);$(I.$$.fragment,d),ke=p(d),N=a(d,"DIV",{class:!0});var de=o(N);$(S.$$.fragment,de),we=p(de),Y=a(de,"P",{});var st=o(Y);xe=s(st,`How the loss is computed by Trainer. By default, all models return the loss in the first element.
Subclass and override for custom behavior.`),st.forEach(n),de.forEach(n),Ne=p(d),E=a(d,"DIV",{class:!0});var ue=o(E);$(M.$$.fragment,ue),Ee=p(ue),z=a(ue,"P",{});var he=o(z);Re=s(he,"Run evaluation within ONNX Runtime backend and returns metrics.(Overriden from "),Z=a(he,"CODE",{});var lt=o(Z);De=s(lt,"Trainer.evaluate()"),lt.forEach(n),Le=s(he,")"),he.forEach(n),ue.forEach(n),Pe=p(d),R=a(d,"DIV",{class:!0});var ve=o(R);$(V.$$.fragment,ve),Ae=p(ve),g=a(ve,"P",{});var X=o(g);Ce=s(X,"Prediction/evaluation loop, shared by "),ee=a(X,"CODE",{});var mt=o(ee);Ie=s(mt,"ORTTrainer.evaluate()"),mt.forEach(n),Se=s(X," and "),te=a(X,"CODE",{});var pt=o(te);Me=s(pt,"ORTTrainer.predict()"),pt.forEach(n),ze=s(X,`.
Works both with or without labels.`),X.forEach(n),ve.forEach(n),Ve=p(d),D=a(d,"DIV",{class:!0});var ge=o(D);$(U.$$.fragment,ge),Ue=p(ge),q=a(ge,"P",{});var fe=o(q);qe=s(fe,`Run prediction within ONNX Runtime backend and returns predictions and potential metrics.
(Overriden from `),ne=a(fe,"CODE",{});var ct=o(ne);Be=s(ct,"Trainer.predict()"),ct.forEach(n),He=s(fe,")"),fe.forEach(n),ge.forEach(n),We=p(d),L=a(d,"DIV",{class:!0});var _e=o(L);$(B.$$.fragment,_e),Xe=p(_e),f=a(_e,"P",{});var F=o(f);Fe=s(F,"Prediction/evaluation loop, shared by "),re=a(F,"CODE",{});var dt=o(re);Je=s(dt,"Trainer.evaluate()"),dt.forEach(n),je=s(F," and "),ae=a(F,"CODE",{});var ut=o(ae);Ge=s(ut,"Trainer.predict()"),ut.forEach(n),Ke=s(F,`.
Works both with or without labels.`),F.forEach(n),_e.forEach(n),Qe=p(d),P=a(d,"DIV",{class:!0});var ye=o(P);$(H.$$.fragment,ye),Ye=p(ye),oe=a(ye,"P",{});var ht=o(oe);Ze=s(ht,"Main onnxruntime training entry point."),ht.forEach(n),ye.forEach(n),d.forEach(n),this.h()},h(){c(u,"name","hf:doc:metadata"),c(u,"content",JSON.stringify(Ot)),c(w,"id","trainer"),c(w,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(w,"href","#trainer"),c(h,"class","relative group"),c(x,"id","optimum.onnxruntime.ORTTrainer"),c(x,"class","header-link block pr-1.5 text-lg no-hover:hidden with-hover:absolute with-hover:p-1.5 with-hover:opacity-0 with-hover:group-hover:opacity-100 with-hover:right-full"),c(x,"href","#optimum.onnxruntime.ORTTrainer"),c(v,"class","relative group"),c(N,"class","docstring"),c(E,"class","docstring"),c(R,"class","docstring"),c(D,"class","docstring"),c(L,"class","docstring"),c(P,"class","docstring"),c(l,"class","docstring")},m(t,_){e(document.head,u),J(t,ie,_),J(t,h,_),e(h,w),e(w,j),T(A,j,null),e(h,$e),e(h,G),e(G,Te),J(t,se,_),J(t,v,_),e(v,x),e(x,K),T(C,K,null),e(v,be),e(v,Q),e(Q,Oe),J(t,le,_),J(t,l,_),T(I,l,null),e(l,ke),e(l,N),T(S,N,null),e(N,we),e(N,Y),e(Y,xe),e(l,Ne),e(l,E),T(M,E,null),e(E,Ee),e(E,z),e(z,Re),e(z,Z),e(Z,De),e(z,Le),e(l,Pe),e(l,R),T(V,R,null),e(R,Ae),e(R,g),e(g,Ce),e(g,ee),e(ee,Ie),e(g,Se),e(g,te),e(te,Me),e(g,ze),e(l,Ve),e(l,D),T(U,D,null),e(D,Ue),e(D,q),e(q,qe),e(q,ne),e(ne,Be),e(q,He),e(l,We),e(l,L),T(B,L,null),e(L,Xe),e(L,f),e(f,Fe),e(f,re),e(re,Je),e(f,je),e(f,ae),e(ae,Ge),e(f,Ke),e(l,Qe),e(l,P),T(H,P,null),e(P,Ye),e(P,oe),e(oe,Ze),me=!0},p:$t,i(t){me||(b(A.$$.fragment,t),b(C.$$.fragment,t),b(I.$$.fragment,t),b(S.$$.fragment,t),b(M.$$.fragment,t),b(V.$$.fragment,t),b(U.$$.fragment,t),b(B.$$.fragment,t),b(H.$$.fragment,t),me=!0)},o(t){O(A.$$.fragment,t),O(C.$$.fragment,t),O(I.$$.fragment,t),O(S.$$.fragment,t),O(M.$$.fragment,t),O(V.$$.fragment,t),O(U.$$.fragment,t),O(B.$$.fragment,t),O(H.$$.fragment,t),me=!1},d(t){n(u),t&&n(ie),t&&n(h),k(A),t&&n(se),t&&n(v),k(C),t&&n(le),t&&n(l),k(I),k(S),k(M),k(V),k(U),k(B),k(H)}}}const Ot={local:"trainer",sections:[{local:"optimum.onnxruntime.ORTTrainer",title:"ORTTrainer"}],title:"Trainer"};function kt(et){return Tt(()=>{new URLSearchParams(window.location.search).get("fw")}),[]}class Et extends gt{constructor(u){super();ft(this,u,kt,bt,_t,{})}}export{Et as default,Ot as metadata};
